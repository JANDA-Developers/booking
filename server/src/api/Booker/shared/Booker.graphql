type Booker {
    _id: ID!
    house: House!
    roomTypes: [RoomType!]
    name: Name!
    password: String
    phoneNumber: PhoneNumber!
    email: EmailAddress
    checkIn: CheckIn!
    memo: String
    agreePrivacyPolicy: Boolean!
    guests: [Guest!]
    guestCount: Int!
    start: DateTime!
    end: DateTime!
    price: Float
    payMethod: PayMethod!
    paymentStatus: PaymentStatus!
    bookingStatus: BookingStatus!
    createdAt: DateTime!
    updatedAt: DateTime
}

type CheckIn {
    isIn: Boolean!
    checkInDateTime: DateTime
}

input CheckInInput {
    isIn: Boolean!
    checkInDateTime: DateTime
}

enum BookingStatus {
    # 예약 완료
    COMPLETE
    # 예약 취소
    CANCEL
}

enum PayMethod {
    CASH
    BANK_TRANSFER
    CREDIT_CARD
}

enum PaymentStatus {
    NOT_YET
    COMPLETE
    CANCEL
}

input BookerInput {
    house: ID
    name: Name!
    password: String!
    phoneNumber: PhoneNumber!
    email: EmailAddress
    agreePrivacyPolicy: Boolean!
    price: Float!
    memo: String
}

input GuestPartInput {
    roomTypeId: ID!
    discountedPrice: Float
    pricingType: PricingType!
    countFemaleGuest: Int!
    countMaleGuest: Int!
    countRoom: Int!
}

input BookingSortInput {
    key: BookingSortKeyEnum!
    order: Int!
}

input BookingFilter {
    roomTypeId: ID!
    booker: ID!
}

enum BookingSortKeyEnum {
    _id
    updatedAt
    createdAt
}
