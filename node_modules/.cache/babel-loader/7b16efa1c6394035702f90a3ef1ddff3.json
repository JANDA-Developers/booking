{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\outPages\\\\reservation\\\\components\\\\roomTypeCards\\\\roomTypeCardsWrap.tsx\";\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport RoomTypeCard from \"./roomTypeCard\";\nimport { ErrProtecter, queryDataFormater, isEmpty } from \"../../../../../utils/utils\";\nimport { GET_CAPACITY_TO_ROOM_TYPE_FOR_BOOKER, GET_CAPACITY_TO_ROOM_TYPE, GET_ROOM_TYPE_DATE_PRICE } from \"../../../../../queries\";\nimport { to4YMMDD } from \"../../../../../utils/setMidNight\";\nimport moment from \"moment\";\nimport { Gender } from \"../../../../../types/enum\";\n\nvar GetAvailGuestCountQu =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(GetAvailGuestCountQu, _Query);\n\n  function GetAvailGuestCountQu() {\n    _classCallCheck(this, GetAvailGuestCountQu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GetAvailGuestCountQu).apply(this, arguments));\n  }\n\n  return GetAvailGuestCountQu;\n}(Query);\n\nvar GetRoomTypeDatePrices =\n/*#__PURE__*/\nfunction (_Query2) {\n  _inherits(GetRoomTypeDatePrices, _Query2);\n\n  function GetRoomTypeDatePrices() {\n    _classCallCheck(this, GetRoomTypeDatePrices);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GetRoomTypeDatePrices).apply(this, arguments));\n  }\n\n  return GetRoomTypeDatePrices;\n}(Query);\n\n// ÌïòÏö∞Ïä§ ÏïÑÏù¥ÎîîÎ•º Ïö∞ÏÑ† PropsÎ•º ÌÜµÌï¥ÏÑú Î∞õÏïÑÏïºÌï®\nvar RoomTypeCardWrap = function RoomTypeCardWrap(_ref) {\n  var reservationHooks = _ref.reservationHooks,\n      windowWidth = _ref.windowWidth,\n      roomTypeData = _ref.roomTypeData,\n      lastCard = _ref.lastCard,\n      houseId = _ref.houseId,\n      isHost = _ref.isHost;\n  var dayPickerHook = reservationHooks.dayPickerHook; // Ïù¥Í±¥ ÎèÖÎ¶Ω stateÏö©Ïù¥Îã§. Ïã§Ï†ú ÏÑ†ÌÉùÎêúÍ≤ÉÏùÄ resvRoomsÏóê ÏûàÏúºÎ©∞ Ïù¥Í±¥ ÏÑ†ÌÉùÏôÑÎ£å ÎàÑÎ•¥Í∏∞ Ï†ÑÍπåÏßÄÏùò ÏÉÅÌÉúÏù¥Îã§.\n\n  var _useState = useState({\n    male: 0,\n    female: 0,\n    room: 0,\n    get: Gender.MALE\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      guestCountValue = _useState2[0],\n      setGuestCount = _useState2[1];\n\n  if (roomTypeData.roomCount === 0) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  });\n  return (// ÌïòÎÇòÏùò Î∞©ÌÉÄÏûÖÏóê ÌïòÎÇòÏùò Ïπ¥Îìú\n    React.createElement(GetAvailGuestCountQu, {\n      skip: roomTypeData.roomCount === 0,\n      query: isHost ? GET_CAPACITY_TO_ROOM_TYPE : GET_CAPACITY_TO_ROOM_TYPE_FOR_BOOKER,\n      variables: {\n        checkIn: to4YMMDD(dayPickerHook.from),\n        checkOut: to4YMMDD(moment(dayPickerHook.to).add(-1, \"day\").toDate()),\n        initValue: {\n          count: guestCountValue.get === Gender.FEMALE ? guestCountValue.female : guestCountValue.male,\n          gender: guestCountValue.get\n        },\n        roomTypeId: roomTypeData._id\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, function (_ref2) {\n      var data = _ref2.data,\n          countLoading = _ref2.loading,\n          error = _ref2.error;\n      // ÏÉÅÎåÄÌé∏ ÏµúÎåÄÍ∞íÏùÄ ÏïåÏàòÏûàÏñ¥ÎèÑ Ïä§Ïä§Î°úÏùò ÏµúÎåÄÍ∞íÏù¥ Î≥ÄÌï¥Î≤ÑÎ¶¨Í∏∞ ÎïåÎ¨∏Ïóê ÎëêÍ∞úÍ∞ÄÎê®\n      // üè† Î∞©ÌÉÄÏûÖÏùò Í≤ΩÏö∞ÏóêÎäî ÎëòÏ§ë ÏïÑÎ¨¥Í±∞ÎÇò Ï°∞ÌöåÌï¥ÎèÑ ÏÉÅÍ¥ÄÏóÜÏùå\n      var count = queryDataFormater(data, // @ts-ignore\n      isHost ? \"GetCapacityToRoomType\" : \"GetCapacityToRoomTypeForBooker\", \"capacityRoomType\", undefined);\n      var availableCount = {\n        maleCount: 0,\n        femaleCount: 0,\n        roomCount: 0\n      };\n\n      if (count) {\n        if (count.__typename === \"CapacityRoomTypeDomitory\") {\n          availableCount = {\n            maleCount: count.availableCount.male,\n            femaleCount: count.availableCount.female,\n            roomCount: 0\n          };\n        } else {\n          availableCount = {\n            maleCount: 0,\n            femaleCount: 0,\n            roomCount: count.count\n          };\n        }\n      }\n\n      return React.createElement(GetRoomTypeDatePrices, {\n        skip: dayPickerHook.to === null,\n        variables: {\n          houseId: houseId,\n          checkOut: to4YMMDD(moment(dayPickerHook.to)),\n          checkIn: to4YMMDD(dayPickerHook.from),\n          roomTypeIds: [roomTypeData._id]\n        },\n        query: GET_ROOM_TYPE_DATE_PRICE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, function (_ref3) {\n        var priceData = _ref3.data,\n            priceLoading = _ref3.loading;\n        var roomPrices = queryDataFormater(priceData, \"GetRoomTypeDatePrices\", \"roomTypeDatePrices\", undefined);\n        var truePrice = getAveragePrice(!isEmpty(roomPrices) ? roomPrices[0].datePrices || [] : []);\n        var formattedTruePrice = Math.floor(truePrice / 10) * 10;\n        return React.createElement(RoomTypeCard, {\n          countLoading: countLoading,\n          roomTypeData: roomTypeData,\n          windowWidth: windowWidth,\n          availableCount: availableCount,\n          setGuestCount: setGuestCount,\n          guestCountValue: guestCountValue,\n          truePrice: formattedTruePrice,\n          priceLoading: priceLoading,\n          lastCard: lastCard,\n          reservationHooks: reservationHooks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        });\n      });\n    })\n  );\n};\n\nexport default ErrProtecter(RoomTypeCardWrap);","map":{"version":3,"sources":["C:/Users/ÍπÄÎØºÏû¨/Desktop/projects/jd-api-server-client/src/pages/outPages/reservation/components/roomTypeCards/roomTypeCardsWrap.tsx"],"names":["React","useState","Query","RoomTypeCard","ErrProtecter","queryDataFormater","isEmpty","GET_CAPACITY_TO_ROOM_TYPE_FOR_BOOKER","GET_CAPACITY_TO_ROOM_TYPE","GET_ROOM_TYPE_DATE_PRICE","to4YMMDD","moment","Gender","GetAvailGuestCountQu","GetRoomTypeDatePrices","RoomTypeCardWrap","reservationHooks","windowWidth","roomTypeData","lastCard","houseId","isHost","dayPickerHook","male","female","room","get","MALE","guestCountValue","setGuestCount","roomCount","checkIn","from","checkOut","to","add","toDate","initValue","count","FEMALE","gender","roomTypeId","_id","data","countLoading","loading","error","undefined","availableCount","maleCount","femaleCount","__typename","roomTypeIds","priceData","priceLoading","roomPrices","truePrice","getAveragePrice","datePrices","formattedTruePrice","Math","floor"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\r\n/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport RoomTypeCard from \"./roomTypeCard\";\r\nimport {\r\n  ErrProtecter,\r\n  queryDataFormater,\r\n  isEmpty\r\n} from \"../../../../../utils/utils\";\r\nimport {\r\n  getCapacityToRoomTypeForBooker,\r\n  getCapacityToRoomTypeForBookerVariables,\r\n  getRoomTypeDatePrices,\r\n  getRoomTypeDatePricesVariables\r\n} from \"../../../../../types/api\";\r\nimport {\r\n  GET_CAPACITY_TO_ROOM_TYPE_FOR_BOOKER,\r\n  GET_CAPACITY_TO_ROOM_TYPE,\r\n  GET_ROOM_TYPE_DATE_PRICE\r\n} from \"../../../../../queries\";\r\nimport { to4YMMDD } from \"../../../../../utils/setMidNight\";\r\nimport { IRoomType } from \"../../../../../types/interface\";\r\nimport moment from \"moment\";\r\nimport { Gender } from \"../../../../../types/enum\";\r\nimport { IReservationHooks } from \"../../Reservation\";\r\n\r\nclass GetAvailGuestCountQu extends Query<\r\n  getCapacityToRoomTypeForBooker,\r\n  getCapacityToRoomTypeForBookerVariables\r\n> {}\r\nclass GetRoomTypeDatePrices extends Query<\r\n  getRoomTypeDatePrices,\r\n  getRoomTypeDatePricesVariables\r\n> {}\r\n\r\nexport interface IGuestCount {\r\n  male: number;\r\n  female: number;\r\n  room: number;\r\n  get: Gender;\r\n}\r\n\r\ninterface IProps {\r\n  windowWidth: any;\r\n  roomTypeData: IRoomType;\r\n  reservationHooks: IReservationHooks;\r\n  lastCard: boolean;\r\n  isHost?: boolean;\r\n  houseId?: string;\r\n}\r\n\r\n// ÌïòÏö∞Ïä§ ÏïÑÏù¥ÎîîÎ•º Ïö∞ÏÑ† PropsÎ•º ÌÜµÌï¥ÏÑú Î∞õÏïÑÏïºÌï®\r\nconst RoomTypeCardWrap: React.SFC<IProps> = ({\r\n  reservationHooks,\r\n  windowWidth,\r\n  roomTypeData,\r\n  lastCard,\r\n  houseId,\r\n  isHost\r\n}) => {\r\n  const { dayPickerHook } = reservationHooks;\r\n  // Ïù¥Í±¥ ÎèÖÎ¶Ω stateÏö©Ïù¥Îã§. Ïã§Ï†ú ÏÑ†ÌÉùÎêúÍ≤ÉÏùÄ resvRoomsÏóê ÏûàÏúºÎ©∞ Ïù¥Í±¥ ÏÑ†ÌÉùÏôÑÎ£å ÎàÑÎ•¥Í∏∞ Ï†ÑÍπåÏßÄÏùò ÏÉÅÌÉúÏù¥Îã§.\r\n  const [guestCountValue, setGuestCount] = useState<IGuestCount>({\r\n    male: 0,\r\n    female: 0,\r\n    room: 0,\r\n    get: Gender.MALE\r\n  });\r\n\r\n  if (roomTypeData.roomCount === 0) return <div />;\r\n\r\n  return (\r\n    // ÌïòÎÇòÏùò Î∞©ÌÉÄÏûÖÏóê ÌïòÎÇòÏùò Ïπ¥Îìú\r\n    <GetAvailGuestCountQu\r\n      skip={roomTypeData.roomCount === 0}\r\n      query={\r\n        isHost\r\n          ? GET_CAPACITY_TO_ROOM_TYPE\r\n          : GET_CAPACITY_TO_ROOM_TYPE_FOR_BOOKER\r\n      }\r\n      variables={{\r\n        checkIn: to4YMMDD(dayPickerHook.from),\r\n        checkOut: to4YMMDD(\r\n          moment(dayPickerHook.to!)\r\n            .add(-1, \"day\")\r\n            .toDate()\r\n        ),\r\n        initValue: {\r\n          count:\r\n            guestCountValue.get === Gender.FEMALE\r\n              ? guestCountValue.female\r\n              : guestCountValue.male,\r\n          gender: guestCountValue.get\r\n        },\r\n        roomTypeId: roomTypeData._id\r\n      }}\r\n    >\r\n      {({ data, loading: countLoading, error }) => {\r\n        // ÏÉÅÎåÄÌé∏ ÏµúÎåÄÍ∞íÏùÄ ÏïåÏàòÏûàÏñ¥ÎèÑ Ïä§Ïä§Î°úÏùò ÏµúÎåÄÍ∞íÏù¥ Î≥ÄÌï¥Î≤ÑÎ¶¨Í∏∞ ÎïåÎ¨∏Ïóê ÎëêÍ∞úÍ∞ÄÎê®\r\n        // üè† Î∞©ÌÉÄÏûÖÏùò Í≤ΩÏö∞ÏóêÎäî ÎëòÏ§ë ÏïÑÎ¨¥Í±∞ÎÇò Ï°∞ÌöåÌï¥ÎèÑ ÏÉÅÍ¥ÄÏóÜÏùå\r\n        const count = queryDataFormater(\r\n          data,\r\n          // @ts-ignore\r\n          isHost ? \"GetCapacityToRoomType\" : \"GetCapacityToRoomTypeForBooker\",\r\n          \"capacityRoomType\",\r\n          undefined\r\n        );\r\n\r\n        let availableCount = {\r\n          maleCount: 0,\r\n          femaleCount: 0,\r\n          roomCount: 0\r\n        };\r\n\r\n        if (count) {\r\n          if (count.__typename === \"CapacityRoomTypeDomitory\") {\r\n            availableCount = {\r\n              maleCount: count.availableCount.male,\r\n              femaleCount: count.availableCount.female,\r\n              roomCount: 0\r\n            };\r\n          } else {\r\n            availableCount = {\r\n              maleCount: 0,\r\n              femaleCount: 0,\r\n              roomCount: count.count\r\n            };\r\n          }\r\n        }\r\n\r\n        return (\r\n          <GetRoomTypeDatePrices\r\n            skip={dayPickerHook.to === null}\r\n            variables={{\r\n              houseId,\r\n              checkOut: to4YMMDD(moment(dayPickerHook.to!)),\r\n              checkIn: to4YMMDD(dayPickerHook.from),\r\n              roomTypeIds: [roomTypeData._id]\r\n            }}\r\n            query={GET_ROOM_TYPE_DATE_PRICE}\r\n          >\r\n            {({ data: priceData, loading: priceLoading }) => {\r\n              const roomPrices = queryDataFormater(\r\n                priceData,\r\n                \"GetRoomTypeDatePrices\",\r\n                \"roomTypeDatePrices\",\r\n                undefined\r\n              );\r\n\r\n              const truePrice = getAveragePrice(\r\n                !isEmpty(roomPrices) ? roomPrices[0].datePrices || [] : []\r\n              );\r\n\r\n              const formattedTruePrice = Math.floor(truePrice / 10) * 10;\r\n\r\n              return (\r\n                <RoomTypeCard\r\n                  countLoading={countLoading}\r\n                  roomTypeData={roomTypeData}\r\n                  windowWidth={windowWidth}\r\n                  availableCount={availableCount}\r\n                  setGuestCount={setGuestCount}\r\n                  guestCountValue={guestCountValue}\r\n                  truePrice={formattedTruePrice}\r\n                  priceLoading={priceLoading}\r\n                  lastCard={lastCard}\r\n                  reservationHooks={reservationHooks}\r\n                />\r\n              );\r\n            }}\r\n          </GetRoomTypeDatePrices>\r\n        );\r\n      }}\r\n    </GetAvailGuestCountQu>\r\n  );\r\n};\r\n\r\nexport default ErrProtecter(RoomTypeCardWrap);\r\n"]},"metadata":{},"sourceType":"module"}