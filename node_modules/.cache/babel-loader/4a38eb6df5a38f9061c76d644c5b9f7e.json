{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\HMconfig\\\\HMconfig.tsx\";\nimport React, { useState, Fragment } from \"react\";\nimport Card from \"../../../atoms/cards/Card\";\nimport { useImageUploader, useModal, useShouldSave, useInput, LANG } from \"../../../hooks/hook\";\nimport Button from \"../../../atoms/button/Button\";\nimport JDIcon, { IconSize } from \"../../../atoms/icons/Icons\";\nimport \"./HMconfig.scss\";\nimport CircleIcon from \"../../../atoms/circleIcon/CircleIcon\";\nimport JDmodal from \"../../../atoms/modal/Modal\";\nimport JDbox from \"../../../atoms/box/JDbox\";\nimport { muResult } from \"../../../utils/utils\";\nimport { Language, LANGUAGE_LIST, FLOATING_PRELOADER_SIZE, MODAL_MIN_WIDTH, WindowSize } from \"../../../types/enum\";\nimport Help from \"../../../atoms/Help/Help\";\nimport LangList from \"../../../components/langList/LangList\";\nimport LangConfigModal from \"./component/LangConfigModal\";\nimport { toast } from \"react-toastify\";\nimport Preloader from \"../../../atoms/preloader/Preloader\";\nimport { isMobile } from \"is-mobile\";\nimport TooltipList, { ReactTooltip } from \"../../../atoms/tooltipList/TooltipList\";\nimport HMcomponent from \"../../outPages/HM/HM\";\nimport { DEFAULT_HM } from \"../../../types/defaults\";\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\nimport { isPhone, isEmail } from \"../../../utils/inputValidations\";\n\nvar HMconfig = function HMconfig(_ref) {\n  var _ref$HM = _ref.HM,\n      HM = _ref$HM === void 0 ? DEFAULT_HM : _ref$HM,\n      loading = _ref.loading,\n      context = _ref.context,\n      mutationLoading = _ref.mutationLoading,\n      updateHMmu = _ref.updateHMmu;\n  var house = context.house;\n  var tempSrc = null; // \"https://i.pinimg.com/originals/54/88/35/5488351dfdde55dc9f088eb88a7fef34.png\";\n\n  var _useState = useState(Language.KOREAN),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentLang = _useState2[0],\n      setCurrentLang = _useState2[1];\n\n  var _useState3 = useState(HM.langList),\n      _useState4 = _slicedToArray(_useState3, 2),\n      enableLangs = _useState4[0],\n      setEnableLngList = _useState4[1];\n\n  var _useState5 = useState(HM.menus),\n      _useState6 = _slicedToArray(_useState5, 2),\n      menuData = _useState6[0],\n      setMenuData = _useState6[1];\n\n  var previewModalHook = useModal();\n  var phoneNumberModalHook = useModal();\n  var phoneNumberHook = useInput(HM.phoneNumber, true);\n  var emailModalHook = useModal();\n  var emailHook = useInput(HM.email, true);\n  var languageConfigModalHook = useModal();\n  var menusConfigModalHook = useModal();\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isGuestView = _useState8[0],\n      setGuestView = _useState8[1];\n\n  var _useState9 = useState(HM.title),\n      _useState10 = _slicedToArray(_useState9, 2),\n      title = _useState10[0],\n      setTitle = _useState10[1];\n\n  var bgImageHook = useImageUploader(HM.backgroundImg, {\n    resizeMaxWidth: WindowSize.PHABLET\n  });\n\n  var _useShouldSave = useShouldSave([title, bgImageHook.file, enableLangs, menuData]),\n      shouldSave = _useShouldSave.shouldSave,\n      setShouldSave = _useShouldSave.setShouldSave;\n\n  var validate = function validate() {\n    if (!title) {\n      toast.warn(LANG(\"please_input_HM_title\"));\n      return false;\n    }\n\n    if (!phoneNumberHook.isValid) {\n      toast.warn(LANG(\"the_phone_number_set_is_not_valid\"));\n      return false;\n    }\n\n    if (!emailHook.isValid) {\n      toast.warn(LANG(\"the_email_set_is_not_valid\"));\n      return false;\n    }\n\n    return true;\n  };\n\n  var handleSaveBtnClick =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!validate()) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return updateHMmu({\n                variables: {\n                  houseId: house._id,\n                  updateParams: {\n                    enableLangs: enableLangs,\n                    phoneNumber: phoneNumberHook.value,\n                    backgroundImg: bgImageHook.file,\n                    menus: menuData.map(function (menu) {\n                      return _objectSpread({}, menu, {\n                        __typename: undefined\n                      });\n                    }),\n                    title: title\n                  }\n                }\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (muResult(result, \"UpdateManual\")) {\n                setShouldSave(false);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSaveBtnClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  ReactTooltip.rebuild();\n\n  var MenusConfigModal = function MenusConfigModal() {\n    var renderContent = function renderContent(isEnable, menu) {\n      return React.createElement(JDbox, {\n        key: menu.id,\n        className: \"HMmenuConfigMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"JDflex--between JDflex--vCenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(JDIcon, {\n        className: \"JDstandard-space\",\n        size: IconSize.NORMAL,\n        icon: menu.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"HMmenuConfigMenu__menuTitle JDstandard-small-space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, menu.name[currentLang]), React.createElement(CircleIcon, {\n        darkWave: true,\n        thema: \"greybg\",\n        onClick: function onClick() {\n          if (isEnable) {\n            menu.isEnable = false;\n          } else {\n            menu.isEnable = true;\n          }\n\n          setMenuData(_toConsumableArray(menuData));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(JDIcon, {\n        icon: isEnable ? \"arrowRight\" : \"arrowLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))));\n    };\n\n    return React.createElement(JDmodal, Object.assign({\n      minContentsWidth: \"350px\",\n      noAnimation: true\n    }, menusConfigModalHook, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, LANG(\"menu_enable_set\")), React.createElement(\"div\", {\n      className: \"flex-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-grid__col col--full-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(JDbox, {\n      className: \"JDmargin-bottom0 clear-fix\",\n      mode: \"border\",\n      topLabel: LANG(\"using\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, menuData.filter(function (data) {\n      return data.isEnable;\n    }).map(function (menu) {\n      return renderContent(true, menu);\n    }))), React.createElement(\"div\", {\n      className: \"flex-grid__col col--full-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(JDbox, {\n      className: \"JDmargin-bottom0 clear-fix\",\n      mode: \"border\",\n      topLabel: LANG(\"not_use\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, menuData.filter(function (data) {\n      return !data.isEnable;\n    }).map(function (menu) {\n      return renderContent(false, menu);\n    })))));\n  };\n\n  var MenuConfigBtn = React.createElement(Button, {\n    onClick: function onClick() {\n      menusConfigModalHook.openModal();\n    },\n    label: LANG(\"menu_set\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  });\n  var LangConfigBtn = React.createElement(Button, {\n    onClick: function onClick() {\n      languageConfigModalHook.openModal();\n    },\n    label: LANG(\"lang_set\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  });\n  var userInfo = {\n    profileImg: HM.profileImg,\n    email: emailHook.value,\n    phoneNumber: phoneNumberHook.value,\n    location: HM.location\n  };\n  var sharedProps = {\n    enableLangs: enableLangs,\n    house: house,\n    title: title,\n    menuData: menuData,\n    bgData: bgImageHook.file,\n    setCurrentLang: setCurrentLang,\n    currentLang: currentLang,\n    userInfo: userInfo\n  };\n  if (loading) return React.createElement(Preloader, {\n    page: true,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: \"HMconfig\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Preloader, {\n    floating: true,\n    size: FLOATING_PRELOADER_SIZE,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container container--sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"JDstandard-space\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, LANG(\"HM_set\")), React.createElement(Help, {\n    size: IconSize.MEDEIUM_SMALL,\n    className: \"JDmargin-bottom0\",\n    tooltip: React.createElement(\"span\", {\n      className: \"JDletterSpace0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, LANG(\"HM_provides_guests_with_a_comfortable_and_convenient_accommodation_send_the_guide_page\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"JDflex--between JDflex--vCenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"JDz-index-1\",\n    thema: \"point\",\n    pulse: shouldSave,\n    onClick: function onClick() {\n      handleSaveBtnClick();\n    },\n    label: LANG(\"save\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }), isMobile() ? React.createElement(\"span\", {\n    \"data-tip\": true,\n    \"data-event\": \"click\",\n    \"data-offset\": \"{'top': 10, 'left': 0}\",\n    \"data-for\": \"HMconfigTolltip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(Button, {\n    tooltip: \"\",\n    icon: \"config\",\n    label: LANG(\"config\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  })) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, LangConfigBtn, MenuConfigBtn)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      previewModalHook.openModal();\n    },\n    label: LANG(\"preview\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(Card, {\n    fullHeight: true,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"JDstandard-margin-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(LangList, {\n    onClickLng: function onClickLng(lang) {\n      setCurrentLang(lang);\n    },\n    hilightLangs: [currentLang],\n    hideList: LANGUAGE_LIST.filter(function (lang) {\n      return !enableLangs.includes(lang);\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  })), React.createElement(HMcomponent, Object.assign({\n    key: \"HM\".concat(currentLang),\n    host: !isGuestView ? {\n      setTitle: setTitle,\n      setEnableLngList: setEnableLngList,\n      setMenuData: setMenuData,\n      bgImageHook: bgImageHook,\n      emailModalHook: emailModalHook,\n      phoneNumberModalHook: phoneNumberModalHook\n    } : undefined\n  }, sharedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }))))), React.createElement(MenusConfigModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }), React.createElement(LangConfigModal, {\n    setEnableLngList: setEnableLngList,\n    modalHook: languageConfigModalHook,\n    enableLangs: enableLangs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }))), React.createElement(JDmodal, Object.assign({\n    minWidth: MODAL_MIN_WIDTH\n  }, previewModalHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }), React.createElement(HMcomponent, Object.assign({}, sharedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }))), React.createElement(JDmodal, Object.assign({}, phoneNumberModalHook, {\n    minWidth: MODAL_MIN_WIDTH,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }), React.createElement(InputText, Object.assign({}, phoneNumberHook, {\n    hyphen: true,\n    validation: isPhone,\n    label: LANG(\"connected_number\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }))), React.createElement(JDmodal, Object.assign({}, emailModalHook, {\n    minWidth: MODAL_MIN_WIDTH,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }), React.createElement(InputText, Object.assign({}, emailHook, {\n    validation: isEmail,\n    label: LANG(\"connected_email\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }))), React.createElement(TooltipList, {\n    unPadding: true,\n    id: \"HMconfigTolltip\",\n    className: \"guestTooltip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"tooltipList__ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, LangConfigBtn), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, MenuConfigBtn))));\n};\n\nexport default HMconfig;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/HMconfig/HMconfig.tsx"],"names":["React","useState","Fragment","Card","useImageUploader","useModal","useShouldSave","useInput","LANG","Button","JDIcon","IconSize","CircleIcon","JDmodal","JDbox","muResult","Language","LANGUAGE_LIST","FLOATING_PRELOADER_SIZE","MODAL_MIN_WIDTH","WindowSize","Help","LangList","LangConfigModal","toast","Preloader","isMobile","TooltipList","ReactTooltip","HMcomponent","DEFAULT_HM","InputText","isPhone","isEmail","HMconfig","HM","loading","context","mutationLoading","updateHMmu","house","tempSrc","KOREAN","currentLang","setCurrentLang","langList","enableLangs","setEnableLngList","menus","menuData","setMenuData","previewModalHook","phoneNumberModalHook","phoneNumberHook","phoneNumber","emailModalHook","emailHook","email","languageConfigModalHook","menusConfigModalHook","isGuestView","setGuestView","title","setTitle","bgImageHook","backgroundImg","resizeMaxWidth","PHABLET","file","shouldSave","setShouldSave","validate","warn","isValid","handleSaveBtnClick","variables","houseId","_id","updateParams","value","map","menu","__typename","undefined","result","rebuild","MenusConfigModal","renderContent","isEnable","id","NORMAL","icon","name","filter","data","MenuConfigBtn","openModal","LangConfigBtn","userInfo","profileImg","location","sharedProps","bgData","MEDEIUM_SMALL","lang","includes"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, Fragment} from \"react\";\r\nimport Card from \"../../../atoms/cards/Card\";\r\nimport {\r\n  useImageUploader,\r\n  useModal,\r\n  IuseImageUploader,\r\n  useShouldSave,\r\n  useInput,\r\n  LANG\r\n} from \"../../../hooks/hook\";\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport JDIcon, {IconSize} from \"../../../atoms/icons/Icons\";\r\nimport {\r\n  getHM_GetHM_HM,\r\n  updateHM,\r\n  updateHMVariables,\r\n  getHM_GetHM_HM_menus\r\n} from \"../../../types/api\";\r\nimport \"./HMconfig.scss\";\r\nimport CircleIcon from \"../../../atoms/circleIcon/CircleIcon\";\r\nimport JDmodal from \"../../../atoms/modal/Modal\";\r\nimport JDbox from \"../../../atoms/box/JDbox\";\r\nimport {muResult} from \"../../../utils/utils\";\r\nimport {\r\n  Language,\r\n  LANGUAGE_LIST,\r\n  FLOATING_PRELOADER_SIZE,\r\n  MODAL_MIN_WIDTH,\r\n  WindowSize\r\n} from \"../../../types/enum\";\r\nimport Help from \"../../../atoms/Help/Help\";\r\nimport LangList from \"../../../components/langList/LangList\";\r\nimport LangConfigModal from \"./component/LangConfigModal\";\r\nimport {MutationFn} from \"react-apollo\";\r\nimport {toast} from \"react-toastify\";\r\nimport Preloader from \"../../../atoms/preloader/Preloader\";\r\nimport {IContext} from \"../../MiddleServerRouter\";\r\nimport {isMobile} from \"is-mobile\";\r\nimport TooltipList, {\r\n  ReactTooltip\r\n} from \"../../../atoms/tooltipList/TooltipList\";\r\nimport HMcomponent from \"../../outPages/HM/HM\";\r\nimport {DEFAULT_HM} from \"../../../types/defaults\";\r\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\r\nimport {isPhone, isEmail} from \"../../../utils/inputValidations\";\r\nimport {MutationFunctionOptions} from \"@apollo/react-common\";\r\nimport {ExecutionResult} from \"graphql\";\r\n\r\ninterface IProps {\r\n  context: IContext;\r\n  loading: boolean;\r\n  HM?: getHM_GetHM_HM;\r\n  updateHMmu: (\r\n    options?: MutationFunctionOptions<updateHM, updateHMVariables> | undefined\r\n  ) => Promise<ExecutionResult<updateHM>>;\r\n  mutationLoading: boolean;\r\n}\r\n\r\nexport interface IHMconfig {\r\n  title: string;\r\n  bgImageHook: IuseImageUploader;\r\n}\r\n\r\nconst HMconfig: React.FC<IProps> = ({\r\n  HM = DEFAULT_HM,\r\n  loading,\r\n  context,\r\n  mutationLoading,\r\n  updateHMmu\r\n}) => {\r\n  const {house} = context;\r\n  const tempSrc = null;\r\n  // \"https://i.pinimg.com/originals/54/88/35/5488351dfdde55dc9f088eb88a7fef34.png\";\r\n  const [currentLang, setCurrentLang] = useState(Language.KOREAN);\r\n  const [enableLangs, setEnableLngList] = useState(HM.langList);\r\n  const [menuData, setMenuData] = useState(HM.menus);\r\n  const previewModalHook = useModal();\r\n  const phoneNumberModalHook = useModal();\r\n  const phoneNumberHook = useInput(HM.phoneNumber, true);\r\n  const emailModalHook = useModal();\r\n  const emailHook = useInput(HM.email, true);\r\n  const languageConfigModalHook = useModal();\r\n  const menusConfigModalHook = useModal();\r\n  const [isGuestView, setGuestView] = useState(false);\r\n  const [title, setTitle] = useState(HM.title);\r\n  const bgImageHook = useImageUploader(HM.backgroundImg, {\r\n    resizeMaxWidth: WindowSize.PHABLET\r\n  });\r\n  const {shouldSave, setShouldSave} = useShouldSave([\r\n    title,\r\n    bgImageHook.file,\r\n    enableLangs,\r\n    menuData\r\n  ]);\r\n\r\n  const validate = (): boolean => {\r\n    if (!title) {\r\n      toast.warn(LANG(\"please_input_HM_title\"));\r\n      return false;\r\n    }\r\n\r\n    if (!phoneNumberHook.isValid) {\r\n      toast.warn(LANG(\"the_phone_number_set_is_not_valid\"));\r\n      return false;\r\n    }\r\n\r\n    if (!emailHook.isValid) {\r\n      toast.warn(LANG(\"the_email_set_is_not_valid\"));\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSaveBtnClick = async () => {\r\n    if (validate()) {\r\n      const result = await updateHMmu({\r\n        variables: {\r\n          houseId: house._id,\r\n          updateParams: {\r\n            enableLangs,\r\n            phoneNumber: phoneNumberHook.value,\r\n            backgroundImg: bgImageHook.file,\r\n            menus: menuData.map(menu => ({...menu, __typename: undefined})),\r\n            title\r\n          }\r\n        }\r\n      });\r\n      if (muResult(result, \"UpdateManual\")) {\r\n        setShouldSave(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  ReactTooltip.rebuild();\r\n\r\n  const MenusConfigModal = () => {\r\n    const renderContent = (isEnable: boolean, menu: getHM_GetHM_HM_menus) => (\r\n      <JDbox key={menu.id} className=\"HMmenuConfigMenu\">\r\n        <div className=\"JDflex--between JDflex--vCenter\">\r\n          <JDIcon\r\n            className=\"JDstandard-space\"\r\n            size={IconSize.NORMAL}\r\n            icon={menu.icon as any}\r\n          />\r\n          <span className=\"HMmenuConfigMenu__menuTitle JDstandard-small-space\">\r\n            {menu.name[currentLang]}\r\n          </span>\r\n          <CircleIcon\r\n            darkWave\r\n            thema=\"greybg\"\r\n            onClick={() => {\r\n              if (isEnable) {\r\n                menu.isEnable = false;\r\n              } else {\r\n                menu.isEnable = true;\r\n              }\r\n              setMenuData([...menuData]);\r\n            }}\r\n          >\r\n            <JDIcon icon={isEnable ? \"arrowRight\" : \"arrowLeft\"} />\r\n          </CircleIcon>\r\n        </div>\r\n      </JDbox>\r\n    );\r\n\r\n    return (\r\n      <JDmodal minContentsWidth={\"350px\"} noAnimation {...menusConfigModalHook}>\r\n        <h6>{LANG(\"menu_enable_set\")}</h6>\r\n        <div className=\"flex-grid\">\r\n          <div className=\"flex-grid__col col--full-6\">\r\n            <JDbox\r\n              className=\"JDmargin-bottom0 clear-fix\"\r\n              mode=\"border\"\r\n              topLabel={LANG(\"using\")}\r\n            >\r\n              {menuData\r\n                .filter(data => data.isEnable)\r\n                .map(menu => renderContent(true, menu))}\r\n            </JDbox>\r\n          </div>\r\n          <div className=\"flex-grid__col col--full-6\">\r\n            <JDbox\r\n              className=\"JDmargin-bottom0 clear-fix\"\r\n              mode=\"border\"\r\n              topLabel={LANG(\"not_use\")}\r\n            >\r\n              {menuData\r\n                .filter(data => !data.isEnable)\r\n                .map(menu => renderContent(false, menu))}\r\n            </JDbox>\r\n          </div>\r\n        </div>\r\n      </JDmodal>\r\n    );\r\n  };\r\n\r\n  const MenuConfigBtn = (\r\n    <Button\r\n      onClick={() => {\r\n        menusConfigModalHook.openModal();\r\n      }}\r\n      label={LANG(\"menu_set\")}\r\n    />\r\n  );\r\n  const LangConfigBtn = (\r\n    <Button\r\n      onClick={() => {\r\n        languageConfigModalHook.openModal();\r\n      }}\r\n      label={LANG(\"lang_set\")}\r\n    />\r\n  );\r\n\r\n  const userInfo = {\r\n    profileImg: HM.profileImg,\r\n    email: emailHook.value,\r\n    phoneNumber: phoneNumberHook.value,\r\n    location: HM.location\r\n  };\r\n\r\n  const sharedProps = {\r\n    enableLangs,\r\n    house,\r\n    title,\r\n    menuData,\r\n    bgData: bgImageHook.file,\r\n    setCurrentLang,\r\n    currentLang,\r\n    userInfo\r\n  };\r\n\r\n  if (loading) return <Preloader page loading={loading} />;\r\n\r\n  return (\r\n    <div className=\"HMconfig\">\r\n      <Preloader floating size={FLOATING_PRELOADER_SIZE} loading={loading} />\r\n      <div className=\"container container--sm\">\r\n        <div className=\"docs-section\">\r\n          <h3>\r\n            <span className=\"JDstandard-space\">{LANG(\"HM_set\")}</span>\r\n            <Help\r\n              size={IconSize.MEDEIUM_SMALL}\r\n              className=\"JDmargin-bottom0\"\r\n              tooltip={\r\n                <span className=\"JDletterSpace0\">\r\n                  {LANG(\r\n                    \"HM_provides_guests_with_a_comfortable_and_convenient_accommodation_send_the_guide_page\"\r\n                  )}\r\n                </span>\r\n              }\r\n            />\r\n          </h3>\r\n          <div className=\"JDflex--between JDflex--vCenter\">\r\n            <div>\r\n              <Button\r\n                className=\"JDz-index-1\"\r\n                thema=\"point\"\r\n                pulse={shouldSave}\r\n                onClick={() => {\r\n                  handleSaveBtnClick();\r\n                }}\r\n                label={LANG(\"save\")}\r\n              />\r\n              {isMobile() ? (\r\n                <span\r\n                  data-tip={true}\r\n                  data-event=\"click\"\r\n                  data-offset=\"{'top': 10, 'left': 0}\"\r\n                  data-for=\"HMconfigTolltip\"\r\n                >\r\n                  <Button tooltip=\"\" icon=\"config\" label={LANG(\"config\")} />\r\n                </span>\r\n              ) : (\r\n                <Fragment>\r\n                  {LangConfigBtn}\r\n                  {MenuConfigBtn}\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => {\r\n                  previewModalHook.openModal();\r\n                }}\r\n                label={LANG(\"preview\")}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Card fullHeight align=\"center\">\r\n              <Fragment>\r\n                <div className=\"JDstandard-margin-bottom\">\r\n                  <LangList\r\n                    onClickLng={lang => {\r\n                      setCurrentLang(lang);\r\n                    }}\r\n                    hilightLangs={[currentLang]}\r\n                    hideList={LANGUAGE_LIST.filter(\r\n                      lang => !enableLangs.includes(lang)\r\n                    )}\r\n                  />\r\n                </div>\r\n                <HMcomponent\r\n                  key={`HM${currentLang}`}\r\n                  host={\r\n                    !isGuestView\r\n                      ? {\r\n                          setTitle,\r\n                          setEnableLngList,\r\n                          setMenuData,\r\n                          bgImageHook,\r\n                          emailModalHook,\r\n                          phoneNumberModalHook\r\n                        }\r\n                      : undefined\r\n                  }\r\n                  {...sharedProps}\r\n                />\r\n              </Fragment>\r\n            </Card>\r\n          </div>\r\n          {/* 메뉴 설정 모달 */}\r\n          <MenusConfigModal />\r\n          {/* 언어 설정 모달 */}\r\n          <LangConfigModal\r\n            setEnableLngList={setEnableLngList}\r\n            modalHook={languageConfigModalHook}\r\n            enableLangs={enableLangs}\r\n          />\r\n        </div>\r\n      </div>\r\n      <JDmodal minWidth={MODAL_MIN_WIDTH} {...previewModalHook}>\r\n        <HMcomponent {...sharedProps} />\r\n      </JDmodal>\r\n\r\n      <JDmodal {...phoneNumberModalHook} minWidth={MODAL_MIN_WIDTH}>\r\n        <InputText\r\n          {...phoneNumberHook}\r\n          hyphen\r\n          validation={isPhone}\r\n          label={LANG(\"connected_number\")}\r\n        />\r\n      </JDmodal>\r\n\r\n      <JDmodal {...emailModalHook} minWidth={MODAL_MIN_WIDTH}>\r\n        <InputText\r\n          {...emailHook}\r\n          validation={isEmail}\r\n          label={LANG(\"connected_email\")}\r\n        />\r\n      </JDmodal>\r\n\r\n      <TooltipList unPadding id=\"HMconfigTolltip\" className=\"guestTooltip\">\r\n        <ul className=\"tooltipList__ul\">\r\n          <li>{LangConfigBtn}</li>\r\n          <li>{MenuConfigBtn}</li>\r\n        </ul>\r\n      </TooltipList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HMconfig;\r\n"]},"metadata":{},"sourceType":"module"}