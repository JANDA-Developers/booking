{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\noti\\\\Noti.tsx\";\nimport React from \"react\";\nimport TooltipList from \"../../atoms/tooltipList/TooltipList\";\nimport \"./Noti.scss\";\nimport NotiLi from \"./component/NotiLi\";\nimport { WindowSize } from \"../../types/enum\";\nimport reactWindowSize from \"react-window-size\";\nimport { ReactTooltip } from \"../../atoms/tooltip/Tooltip\";\nimport Preloader from \"../../atoms/preloader/Preloader\";\nimport JDmodal from \"../../atoms/modal/Modal\";\nimport { useModal, LANG } from \"../../hooks/hook\";\nexport var Noti = function Noti(_ref) {\n  var confirmMutationMu = _ref.confirmMutationMu,\n      notis = _ref.notis,\n      loading = _ref.loading,\n      context = _ref.context,\n      icon = _ref.icon,\n      windowWidth = _ref.windowWidth;\n  var isPhabletDown = windowWidth < WindowSize.PHABLET;\n  var NotiModalHook = useModal(false);\n\n  var doConfirm = function doConfirm() {\n    confirmMutationMu({\n      variables: {\n        houseId: context.house._id,\n        notiIds: notis.filter(function (noti) {\n          return !noti.isConfirm;\n        }).map(function (noti) {\n          return noti._id;\n        })\n      }\n    });\n  };\n\n  ReactTooltip.rebuild();\n  return React.createElement(\"div\", {\n    className: \"noti\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    \"data-tip\": true,\n    \"data-delay-hide\": 0,\n    \"data-for\": isPhabletDown || \"tooltip_Notify\",\n    \"data-event\": isPhabletDown || \"click\",\n    \"data-place\": \"bottom\",\n    className: \"noti__iconWrap\",\n    onClick: function onClick() {\n      if (isPhabletDown) NotiModalHook.openModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, icon), React.createElement(TooltipList, {\n    mode: \"custom\",\n    type: \"light\",\n    className: \"noti__tooltip\",\n    id: \"tooltip_Notify\",\n    afterHide: function afterHide() {\n      doConfirm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"noti__tooltip_ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, loading && React.createElement(\"li\", {\n    className: \"notiLi\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Preloader, {\n    size: \"small\",\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), notis.length === 0 && !loading && React.createElement(\"li\", {\n    className: \"notiLi JDtextColor--placeHolder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, LANG(\"no_notifications\")), notis.map(function (noti) {\n    return React.createElement(NotiLi, {\n      key: noti._id,\n      noti: noti,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n  }))), React.createElement(JDmodal, Object.assign({\n    className: \"noti__notiModal\"\n  }, NotiModalHook, {\n    onRequestClose: function onRequestClose() {\n      doConfirm();\n      NotiModalHook.closeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"noti__mpodal_ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, loading && React.createElement(\"li\", {\n    className: \"notiLi\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Preloader, {\n    size: \"small\",\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), notis.length === 0 && !loading && React.createElement(\"li\", {\n    className: \"notiLi JDtextColor--placeHolder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, LANG(\"no_notifications\")), notis.map(function (noti) {\n    return React.createElement(NotiLi, {\n      key: noti._id,\n      noti: noti,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n  }))));\n};\nvar ForWardNoti = React.forwardRef(function (props, ref) {\n  return React.createElement(\"div\", {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Noti, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })));\n});\nexport default reactWindowSize(ForWardNoti);","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/noti/Noti.tsx"],"names":["React","TooltipList","NotiLi","WindowSize","reactWindowSize","ReactTooltip","Preloader","JDmodal","useModal","LANG","Noti","confirmMutationMu","notis","loading","context","icon","windowWidth","isPhabletDown","PHABLET","NotiModalHook","doConfirm","variables","houseId","house","_id","notiIds","filter","noti","isConfirm","map","rebuild","openModal","length","closeModal","ForWardNoti","forwardRef","props","ref"],"mappings":"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","sourcesContent":["import React, {Fragment, ReactNode} from \"react\";\r\n\r\nimport {MutationFn} from \"react-apollo\";\r\nimport TooltipList from \"../../atoms/tooltipList/TooltipList\";\r\nimport \"./Noti.scss\";\r\nimport {\r\n  getNotis_GetNotis_notis,\r\n  confirmNoti,\r\n  confirmNotiVariables\r\n} from \"../../types/api\";\r\nimport NotiLi from \"./component/NotiLi\";\r\nimport {IContext} from \"../../pages/MiddleServerRouter\";\r\nimport {WindowSize} from \"../../types/enum\";\r\nimport reactWindowSize, {WindowSizeProps} from \"react-window-size\";\r\nimport {ReactTooltip} from \"../../atoms/tooltip/Tooltip\";\r\nimport Preloader from \"../../atoms/preloader/Preloader\";\r\nimport JDmodal from \"../../atoms/modal/Modal\";\r\nimport {useModal, LANG} from \"../../hooks/hook\";\r\n\r\ninterface IProps {\r\n  context: IContext;\r\n  notis: getNotis_GetNotis_notis[];\r\n  confirmMutationMu: MutationFn<confirmNoti, confirmNotiVariables>;\r\n  icon: any;\r\n  loading: boolean;\r\n}\r\n\r\nexport const Noti: React.FC<IProps & WindowSizeProps> = ({\r\n  confirmMutationMu,\r\n  notis,\r\n  loading,\r\n  context,\r\n  icon,\r\n  windowWidth\r\n}) => {\r\n  const isPhabletDown = windowWidth < WindowSize.PHABLET;\r\n  const NotiModalHook = useModal(false);\r\n\r\n  const doConfirm = () => {\r\n    confirmMutationMu({\r\n      variables: {\r\n        houseId: context.house._id,\r\n        notiIds: notis.filter(noti => !noti.isConfirm).map(noti => noti._id)\r\n      }\r\n    });\r\n  };\r\n\r\n  ReactTooltip.rebuild();\r\n\r\n  return (\r\n    <div className=\"noti\">\r\n      <div\r\n        data-tip\r\n        data-delay-hide={0}\r\n        data-for={isPhabletDown || \"tooltip_Notify\"}\r\n        data-event={isPhabletDown || \"click\"}\r\n        data-place=\"bottom\"\r\n        className=\"noti__iconWrap\"\r\n        onClick={() => {\r\n          if (isPhabletDown) NotiModalHook.openModal();\r\n        }}\r\n      >\r\n        {icon}\r\n      </div>\r\n      <TooltipList\r\n        mode=\"custom\"\r\n        type=\"light\"\r\n        className=\"noti__tooltip\"\r\n        id=\"tooltip_Notify\"\r\n        afterHide={() => {\r\n          doConfirm();\r\n        }}\r\n      >\r\n        <ul className=\"noti__tooltip_ul\">\r\n          {loading && (\r\n            <li className=\"notiLi\">\r\n              <Preloader size=\"small\" loading={loading} />\r\n            </li>\r\n          )}\r\n          {notis.length === 0 && !loading && (\r\n            <li className=\"notiLi JDtextColor--placeHolder\">\r\n              {LANG(\"no_notifications\")}\r\n            </li>\r\n          )}\r\n          {notis.map(noti => (\r\n            <NotiLi key={noti._id} noti={noti} />\r\n          ))}\r\n        </ul>\r\n      </TooltipList>\r\n      <JDmodal\r\n        className=\"noti__notiModal\"\r\n        {...NotiModalHook}\r\n        onRequestClose={() => {\r\n          doConfirm();\r\n          NotiModalHook.closeModal();\r\n        }}\r\n      >\r\n        <ul className=\"noti__mpodal_ul\">\r\n          {loading && (\r\n            <li className=\"notiLi\">\r\n              <Preloader size=\"small\" loading={loading} />\r\n            </li>\r\n          )}\r\n          {notis.length === 0 && !loading && (\r\n            <li className=\"notiLi JDtextColor--placeHolder\">\r\n              {LANG(\"no_notifications\")}\r\n            </li>\r\n          )}\r\n          {notis.map(noti => (\r\n            <NotiLi key={noti._id} noti={noti} />\r\n          ))}\r\n        </ul>\r\n      </JDmodal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ForWardNoti = React.forwardRef((props: any, ref: any) => (\r\n  <div ref={ref}>\r\n    <Noti {...props} />\r\n  </div>\r\n));\r\n\r\nexport default reactWindowSize(ForWardNoti);\r\n"]},"metadata":{},"sourceType":"module"}