{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\headers\\\\components\\\\SharedHeaderComponent.tsx\";\nimport React, { Fragment } from \"react\";\nimport NotiWrap from \"../../noti/NotiWrap\";\nimport TooltipList, { ReactTooltip } from \"../../../atoms/tooltipList/TooltipList\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"../../../atoms/button/Button\";\nimport { useModal, LANG } from \"../../../hooks/hook\";\nimport { insideRedirect, isEmpty } from \"../../../utils/utils\";\nimport { UserRole, MemoType } from \"../../../types/enum\";\nimport { IconSize } from \"../../../atoms/icons/Icons\";\nimport CircleIcon from \"../../../atoms/circleIcon/CircleIcon\";\nimport MemoModal from \"../../Memo/component/MemoModal\";\nimport MemoIcon from \"../../Memo/component/MemoIcon\";\nimport NotiIcon from \"../../noti/component/NotiIcon\";\nimport LangSelectModal from \"../../../atoms/dayPicker/component/langSelectModal\";\n\nvar SharedHeaderComponent = function SharedHeaderComponent(_ref) {\n  var context = _ref.context,\n      logOutMutation = _ref.logOutMutation,\n      phoneVerificationModalHook = _ref.phoneVerificationModalHook;\n  var user = context.user;\n  var isPhoneVerified = user.isPhoneVerified;\n  var memoModalHook = useModal();\n  var langSelectModal = useModal(); // 로그 여부와 상관없이 공유된\n\n  var sharedOverLogin = React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Button, {\n    icon: \"langugae\",\n    onClick: function onClick() {\n      langSelectModal.openModal();\n      ReactTooltip.hide();\n    },\n    label: LANG(\"language_setting\"),\n    mode: \"flat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })); // 툴팁내용\n  // 모바일\n  // 로그인후 헤더우측 상단 메뉴\n\n  var LoginIconMenu = function LoginIconMenu() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: function onClick() {\n        logOutMutation();\n        ReactTooltip.hide();\n      },\n      icon: \"logout\",\n      label: LANG(\"logOut\"),\n      mode: \"flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), user.userRole === UserRole.ADMIN && React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"hader__btn\",\n      label: LANG(\"admin_screen\"),\n      icon: \"admin\",\n      redirect: insideRedirect(\"superAdmin\"),\n      mode: \"flat\",\n      thema: \"point\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), user && !isPhoneVerified && React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: function onClick() {\n        phoneVerificationModalHook.openModal({\n          phoneNumber: user.phoneNumber\n        });\n        ReactTooltip.hide();\n      },\n      blink: true,\n      icon: \"call\",\n      label: LANG(\"authenticate\"),\n      mode: \"flat\",\n      id: \"HeaderPhoneVerificationBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/myPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: \"person\",\n      label: \"MYpage\",\n      mode: \"flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), sharedOverLogin);\n  }; // 툴팁내용\n  // 모바일\n  // 로그인 안된 헤더우측 상단 메뉴\n\n\n  var UnLoginIconMenu = function UnLoginIconMenu() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: function onClick() {\n        ReactTooltip.hide();\n      },\n      label: LANG(\"login\"),\n      mode: \"flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/signUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: function onClick() {\n        ReactTooltip.hide();\n      },\n      label: LANG(\"signUp\"),\n      mode: \"flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), sharedOverLogin);\n  };\n\n  var isLogIn = context.isLogIn;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, isEmpty(context.house) || React.createElement(NotiWrap, {\n    icon: React.createElement(CircleIcon, {\n      size: IconSize.MEDIUM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(NotiIcon, {\n      context: context,\n      color: \"white\",\n      size: IconSize.MEDIUM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })),\n    context: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"JDstandard-space\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, isEmpty(context.house) || React.createElement(CircleIcon, {\n    size: IconSize.MEDIUM,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(MemoIcon, {\n    onClick: function onClick() {\n      memoModalHook.openModal();\n    },\n    context: context,\n    color: \"white\",\n    size: IconSize.MEDIUM,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }))), React.createElement(TooltipList, {\n    id: \"tooltip_user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, isLogIn ? React.createElement(LoginIconMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }) : React.createElement(UnLoginIconMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }))), React.createElement(MemoModal, {\n    memoType: MemoType.HOST,\n    context: context,\n    modalHook: memoModalHook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(LangSelectModal, {\n    modalHook: langSelectModal,\n    context: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }));\n};\n\nexport default SharedHeaderComponent;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/headers/components/SharedHeaderComponent.tsx"],"names":["React","Fragment","NotiWrap","TooltipList","ReactTooltip","NavLink","Button","useModal","LANG","insideRedirect","isEmpty","UserRole","MemoType","IconSize","CircleIcon","MemoModal","MemoIcon","NotiIcon","LangSelectModal","SharedHeaderComponent","context","logOutMutation","phoneVerificationModalHook","user","isPhoneVerified","memoModalHook","langSelectModal","sharedOverLogin","openModal","hide","LoginIconMenu","userRole","ADMIN","phoneNumber","UnLoginIconMenu","isLogIn","house","MEDIUM","HOST"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\r\nimport NotiWrap from \"../../noti/NotiWrap\";\r\nimport {IContext} from \"../../../pages/bookingHost/BookingHostRouter\";\r\nimport TooltipList, {\r\n  ReactTooltip\r\n} from \"../../../atoms/tooltipList/TooltipList\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport {IUseModal, useModal, LANG} from \"../../../hooks/hook\";\r\nimport {insideRedirect, isEmpty} from \"../../../utils/utils\";\r\nimport {UserRole, MemoType} from \"../../../types/enum\";\r\nimport {IconSize} from \"../../../atoms/icons/Icons\";\r\nimport CircleIcon from \"../../../atoms/circleIcon/CircleIcon\";\r\nimport MemoModal from \"../../Memo/component/MemoModal\";\r\nimport MemoIcon from \"../../Memo/component/MemoIcon\";\r\nimport NotiIcon from \"../../noti/component/NotiIcon\";\r\nimport LangSelectModal from \"../../../atoms/dayPicker/component/langSelectModal\";\r\ninterface Iprops {\r\n  context: IContext;\r\n  logOutMutation: any;\r\n  phoneVerificationModalHook: IUseModal;\r\n}\r\n\r\nconst SharedHeaderComponent: React.FC<Iprops> = ({\r\n  context,\r\n  logOutMutation,\r\n  phoneVerificationModalHook\r\n}) => {\r\n  const {user} = context;\r\n  const {isPhoneVerified} = user;\r\n  const memoModalHook = useModal();\r\n  const langSelectModal = useModal();\r\n\r\n  // 로그 여부와 상관없이 공유된\r\n  const sharedOverLogin = (\r\n    <li>\r\n      <Button\r\n        icon=\"langugae\"\r\n        onClick={() => {\r\n          langSelectModal.openModal();\r\n          ReactTooltip.hide();\r\n        }}\r\n        label={LANG(\"language_setting\")}\r\n        mode=\"flat\"\r\n      />\r\n    </li>\r\n  );\r\n\r\n  // 툴팁내용\r\n  // 모바일\r\n  // 로그인후 헤더우측 상단 메뉴\r\n  const LoginIconMenu = () => (\r\n    <Fragment>\r\n      <li>\r\n        <Button\r\n          onClick={() => {\r\n            logOutMutation();\r\n            ReactTooltip.hide();\r\n          }}\r\n          icon=\"logout\"\r\n          label={LANG(\"logOut\")}\r\n          mode=\"flat\"\r\n        />\r\n      </li>\r\n      {user.userRole === UserRole.ADMIN && (\r\n        <li>\r\n          <Button\r\n            className=\"hader__btn\"\r\n            label={LANG(\"admin_screen\")}\r\n            icon=\"admin\"\r\n            redirect={insideRedirect(`superAdmin`)}\r\n            mode=\"flat\"\r\n            thema=\"point\"\r\n          />\r\n        </li>\r\n      )}\r\n      {user && !isPhoneVerified && (\r\n        <li>\r\n          <Button\r\n            onClick={() => {\r\n              phoneVerificationModalHook.openModal({\r\n                phoneNumber: user.phoneNumber\r\n              });\r\n              ReactTooltip.hide();\r\n            }}\r\n            blink\r\n            icon=\"call\"\r\n            label={LANG(\"authenticate\")}\r\n            mode=\"flat\"\r\n            id=\"HeaderPhoneVerificationBtn\"\r\n          />\r\n        </li>\r\n      )}\r\n      <li>\r\n        <NavLink to=\"/myPage\">\r\n          <Button icon=\"person\" label=\"MYpage\" mode=\"flat\" />\r\n        </NavLink>\r\n      </li>\r\n      {sharedOverLogin}\r\n    </Fragment>\r\n  );\r\n\r\n  // 툴팁내용\r\n  // 모바일\r\n  // 로그인 안된 헤더우측 상단 메뉴\r\n  const UnLoginIconMenu = () => (\r\n    <Fragment>\r\n      <li>\r\n        <NavLink to=\"/login\">\r\n          <Button\r\n            onClick={() => {\r\n              ReactTooltip.hide();\r\n            }}\r\n            label={LANG(\"login\")}\r\n            mode=\"flat\"\r\n          />\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signUp\">\r\n          <Button\r\n            onClick={() => {\r\n              ReactTooltip.hide();\r\n            }}\r\n            label={LANG(\"signUp\")}\r\n            mode=\"flat\"\r\n          />\r\n        </NavLink>\r\n      </li>\r\n      {sharedOverLogin}\r\n    </Fragment>\r\n  );\r\n\r\n  const {isLogIn} = context;\r\n  return (\r\n    <Fragment>\r\n      {/* 알람 */}\r\n      <span>\r\n        {isEmpty(context.house) || (\r\n          <NotiWrap\r\n            icon={\r\n              <CircleIcon size={IconSize.MEDIUM}>\r\n                <NotiIcon\r\n                  context={context}\r\n                  color=\"white\"\r\n                  size={IconSize.MEDIUM}\r\n                />\r\n              </CircleIcon>\r\n            }\r\n            context={context}\r\n          />\r\n        )}\r\n      </span>\r\n      {/* 메모 */}\r\n      <span className=\"JDstandard-space\">\r\n        {isEmpty(context.house) || (\r\n          <CircleIcon size={IconSize.MEDIUM}>\r\n            <MemoIcon\r\n              onClick={() => {\r\n                memoModalHook.openModal();\r\n              }}\r\n              context={context}\r\n              color=\"white\"\r\n              size={IconSize.MEDIUM}\r\n            />\r\n          </CircleIcon>\r\n        )}\r\n      </span>\r\n      {/* 툴팁만 존재 버튼은 각 PC와 모바일 파일에 있음 */}\r\n      <TooltipList id=\"tooltip_user\">\r\n        <ul>{isLogIn ? <LoginIconMenu /> : <UnLoginIconMenu />}</ul>\r\n      </TooltipList>\r\n      <MemoModal\r\n        memoType={MemoType.HOST}\r\n        context={context}\r\n        modalHook={memoModalHook}\r\n      />\r\n      <LangSelectModal modalHook={langSelectModal} context={context} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SharedHeaderComponent;\r\n"]},"metadata":{},"sourceType":"module"}