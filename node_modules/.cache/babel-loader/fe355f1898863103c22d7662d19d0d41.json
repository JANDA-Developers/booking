{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\assig\\\\components\\\\groupRenderFn.tsx\";\nimport React, { useEffect } from \"react\";\nimport $ from \"jquery\";\nimport { PricingType } from \"../../../../types/enum\";\nimport { ASSIG_IMELINE_HEIGHT } from \"../../../../atoms/timeline/Timeline\";\nimport { arraySum } from \"../../../../utils/elses\";\nvar LAST_ROOMTYPE = \"unRendered\";\nvar LAST_ROOM = \"unRendered\";\n\n// 아이템 위치가 바뀔때마다 groupRender 되더라\n// Place 단위로 렌더되는걸 유의\nvar assigGroupRendererFn = function assigGroupRendererFn(_ref) {\n  var group = _ref.group,\n      props = _objectWithoutProperties(_ref, [\"group\"]);\n\n  if (!group || !group.roomType) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n  var isDomitory = group.roomType.pricingType === PricingType.DOMITORY;\n  var placeCount = isDomitory ? group.roomType.peopleCount : 1; // height는 UseEffect 안에 있음\n\n  var roomTypeStyle = {\n    minHeight: ASSIG_IMELINE_HEIGHT - 1,\n    zIndex: group.roomTypeIndex\n  };\n  var roomStyle = {\n    height: Math.floor(ASSIG_IMELINE_HEIGHT * placeCount) + 1,\n    minHeight: ASSIG_IMELINE_HEIGHT - 2\n  }; // 방타입, 방 을 렌더해야할지 알려줌\n\n  var renderRoomType = true;\n  var renderRoom = true;\n  if (LAST_ROOMTYPE === group.roomTypeId) renderRoomType = false;else LAST_ROOMTYPE = group.roomTypeId;\n  if (LAST_ROOM === group.roomId) renderRoom = false;else LAST_ROOM = group.roomId;\n  useEffect(function () {\n    LAST_ROOMTYPE = \"unRendered\";\n    LAST_ROOM = \"unRendered\";\n  });\n  useEffect(function () {\n    // 방의 높이를 잡아줌\n    if (renderRoom) {\n      var target = $(\".assigGroups__place\".concat(group.roomId));\n      var arrayHeights = target.map(function () {\n        return $(this).height();\n      });\n      $(\"#assigGroups__room\".concat(group.roomId)).height(arraySum(arrayHeights.get()) + target.length + 1);\n    } // 방타입의 높이를 잡아줌\n\n\n    if (renderRoomType) {\n      var _target = $(\".assigGroups__rooms\".concat(group.roomTypeId));\n\n      var _arrayHeights = _target.map(function () {\n        var height = $(this).height() || 0;\n        return height;\n      });\n\n      $(\"#assigGroups__roomType\".concat(group.roomTypeId)).height(arraySum(_arrayHeights.get()) + _target.length / 2);\n    } // 여기뒤에 id를 넣음으로서 퍼포먼스를 개선할 여지가 있음 하지만\n\n  });\n\n  if (group.type === \"noneGroup\") {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"assigGroups custom-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"assigGroups custom-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, renderRoomType && React.createElement(\"div\", {\n    id: \"assigGroups__roomType\".concat(group.roomTypeId),\n    className: \"assigGroups__roomType assigGroups__roomType\".concat(group.roomTypeId),\n    style: roomTypeStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"assigGroups__names\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, group.roomType.name)), renderRoom && React.createElement(\"div\", {\n    id: \"assigGroups__room\".concat(group.roomId),\n    className: \"assigGroups__room assigGroups__rooms\".concat(group.roomTypeId, \" assigGroups__room\").concat(group.roomId, \" \").concat(isDomitory ? \"assigGroups__room--domitory\" : \"assigGroups__room--roomType\", \" \").concat(group.isLastOfRoomType && \" assigGroups__room--last\"),\n    style: roomStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"assigGroups__names\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, group.title)), React.createElement(\"div\", {\n    className: \"assigGroups__place assigGroups__place\".concat(group.roomTypeId, \" assigGroups__place\").concat(group.roomId, \" title \").concat(group.isLastOfRoom && \"assigGroups__place--last\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"assigGroups__placeIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, group.placeIndex === -1 || group.placeIndex))));\n};\n\nexport default assigGroupRendererFn;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/assig/components/groupRenderFn.tsx"],"names":["React","useEffect","$","PricingType","ASSIG_IMELINE_HEIGHT","arraySum","LAST_ROOMTYPE","LAST_ROOM","assigGroupRendererFn","group","props","roomType","isDomitory","pricingType","DOMITORY","placeCount","peopleCount","roomTypeStyle","minHeight","zIndex","roomTypeIndex","roomStyle","height","Math","floor","renderRoomType","renderRoom","roomTypeId","roomId","target","arrayHeights","map","get","length","type","name","isLastOfRoomType","title","isLastOfRoom","placeIndex"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport $ from \"jquery\";\r\nimport {PricingType} from \"../../../../types/enum\";\r\nimport {ASSIG_IMELINE_HEIGHT} from \"../../../../atoms/timeline/Timeline\";\r\nimport {arraySum} from \"../../../../utils/elses\";\r\nimport {IAssigGroup, TGetGuestsInGroup} from \"./assigIntrerface\";\r\n\r\nlet LAST_ROOMTYPE = \"unRendered\";\r\nlet LAST_ROOM = \"unRendered\";\r\n\r\ninterface IRenderGroupProps {\r\n  group?: IAssigGroup;\r\n  getGuestsInGroup: TGetGuestsInGroup;\r\n}\r\n\r\n// 아이템 위치가 바뀔때마다 groupRender 되더라\r\n// Place 단위로 렌더되는걸 유의\r\nconst assigGroupRendererFn: React.FC<IRenderGroupProps> = ({\r\n  group,\r\n  ...props\r\n}) => {\r\n  if (!group || !group.roomType) {\r\n    return <div />;\r\n  }\r\n  const isDomitory = group.roomType.pricingType === PricingType.DOMITORY;\r\n  const placeCount = isDomitory ? group.roomType.peopleCount : 1;\r\n\r\n  // height는 UseEffect 안에 있음\r\n  const roomTypeStyle = {\r\n    minHeight: ASSIG_IMELINE_HEIGHT - 1,\r\n    zIndex: group.roomTypeIndex\r\n  };\r\n\r\n  const roomStyle = {\r\n    height: Math.floor(ASSIG_IMELINE_HEIGHT * placeCount) + 1,\r\n    minHeight: ASSIG_IMELINE_HEIGHT - 2\r\n  };\r\n\r\n  // 방타입, 방 을 렌더해야할지 알려줌\r\n  let renderRoomType: boolean = true;\r\n  let renderRoom: boolean = true;\r\n\r\n  if (LAST_ROOMTYPE === group.roomTypeId) renderRoomType = false;\r\n  else LAST_ROOMTYPE = group.roomTypeId;\r\n\r\n  if (LAST_ROOM === group.roomId) renderRoom = false;\r\n  else LAST_ROOM = group.roomId;\r\n\r\n  useEffect(() => {\r\n    LAST_ROOMTYPE = \"unRendered\";\r\n    LAST_ROOM = \"unRendered\";\r\n  });\r\n\r\n  useEffect(() => {\r\n    // 방의 높이를 잡아줌\r\n    if (renderRoom) {\r\n      const target = $(`.assigGroups__place${group.roomId}`);\r\n      const arrayHeights = target.map(function() {\r\n        return $(this).height();\r\n      });\r\n      $(`#assigGroups__room${group.roomId}`).height(\r\n        arraySum(arrayHeights.get()) + target.length + 1\r\n      );\r\n    }\r\n    // 방타입의 높이를 잡아줌\r\n    if (renderRoomType) {\r\n      const target = $(`.assigGroups__rooms${group.roomTypeId}`);\r\n\r\n      const arrayHeights = target.map(function() {\r\n        const height = $(this).height() || 0;\r\n        return height;\r\n      });\r\n\r\n      $(`#assigGroups__roomType${group.roomTypeId}`).height(\r\n        arraySum(arrayHeights.get()) + target.length / 2\r\n      );\r\n    }\r\n\r\n    // 여기뒤에 id를 넣음으로서 퍼포먼스를 개선할 여지가 있음 하지만\r\n  });\r\n\r\n  if (group.type === \"noneGroup\") {\r\n    return (\r\n      <div>\r\n        <div className=\"assigGroups custom-group\">\r\n          <div />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"assigGroups custom-group\">\r\n        {/* 방타입 */}\r\n        {renderRoomType && (\r\n          <div\r\n            id={`assigGroups__roomType${group.roomTypeId}`}\r\n            className={`assigGroups__roomType assigGroups__roomType${group.roomTypeId}`}\r\n            style={roomTypeStyle}\r\n          >\r\n            <span className=\"assigGroups__names\">{group.roomType.name}</span>\r\n          </div>\r\n        )}\r\n        {renderRoom && (\r\n          <div\r\n            id={`assigGroups__room${group.roomId}`}\r\n            className={`assigGroups__room assigGroups__rooms${\r\n              group.roomTypeId\r\n            } assigGroups__room${group.roomId} ${\r\n              isDomitory\r\n                ? \"assigGroups__room--domitory\"\r\n                : \"assigGroups__room--roomType\"\r\n            } ${group.isLastOfRoomType && \" assigGroups__room--last\"}`}\r\n            style={roomStyle}\r\n          >\r\n            <span className=\"assigGroups__names\">{group.title}</span>\r\n          </div>\r\n        )}\r\n        <div\r\n          className={`assigGroups__place assigGroups__place${\r\n            group.roomTypeId\r\n          } assigGroups__place${group.roomId} title ${group.isLastOfRoom &&\r\n            \"assigGroups__place--last\"}`}\r\n        >\r\n          <span className=\"assigGroups__placeIn\">\r\n            {group.placeIndex === -1 || group.placeIndex}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default assigGroupRendererFn;\r\n"]},"metadata":{},"sourceType":"module"}