{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\Memo\\\\MemoWrap.tsx\";\nimport React from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { queryDataFormater, onCompletedMessage } from \"../../utils/utils\";\nimport Memo from \"./Memo\";\nimport { GET_MEMO, CREATE_MEMO, DELETE_MEMO, UPDATE_MEMO } from \"../../queries\";\nimport { getOperationName } from \"apollo-link\";\nimport { MODAL_PRELOADER_SIZE } from \"../../types/enum\";\nimport Preloader from \"../../atoms/preloader/Preloader\";\nimport { LANG } from \"../../hooks/hook\";\n\nvar GetMemoQu =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(GetMemoQu, _Query);\n\n  function GetMemoQu() {\n    _classCallCheck(this, GetMemoQu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GetMemoQu).apply(this, arguments));\n  }\n\n  return GetMemoQu;\n}(Query);\n\nvar CreateMemoMu =\n/*#__PURE__*/\nfunction (_Mutation) {\n  _inherits(CreateMemoMu, _Mutation);\n\n  function CreateMemoMu() {\n    _classCallCheck(this, CreateMemoMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CreateMemoMu).apply(this, arguments));\n  }\n\n  return CreateMemoMu;\n}(Mutation);\n\nvar UpdateMemoMu =\n/*#__PURE__*/\nfunction (_Mutation2) {\n  _inherits(UpdateMemoMu, _Mutation2);\n\n  function UpdateMemoMu() {\n    _classCallCheck(this, UpdateMemoMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpdateMemoMu).apply(this, arguments));\n  }\n\n  return UpdateMemoMu;\n}(Mutation);\n\nvar DeleteMemoMu =\n/*#__PURE__*/\nfunction (_Mutation3) {\n  _inherits(DeleteMemoMu, _Mutation3);\n\n  function DeleteMemoMu() {\n    _classCallCheck(this, DeleteMemoMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DeleteMemoMu).apply(this, arguments));\n  }\n\n  return DeleteMemoMu;\n}(Mutation);\n\nvar MemoWrap = function MemoWrap(_ref) {\n  var context = _ref.context,\n      memoType = _ref.memoType,\n      prop = _objectWithoutProperties(_ref, [\"context\", \"memoType\"]);\n\n  var houseId = context.house._id;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(GetMemoQu, {\n    skip: !houseId,\n    variables: {\n      houseId: houseId,\n      memoType: memoType\n    },\n    query: GET_MEMO,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, function (_ref2) {\n    var Data = _ref2.data,\n        getMemoLoading = _ref2.loading,\n        networkStatus = _ref2.networkStatus;\n    var getMemosData = queryDataFormater(Data, \"GetMemos\", \"memos\", []);\n    return React.createElement(CreateMemoMu, {\n      mutation: CREATE_MEMO,\n      awaitRefetchQueries: true,\n      refetchQueries: [getOperationName(GET_MEMO)],\n      onCompleted: function onCompleted(_ref3) {\n        var CreateMemo = _ref3.CreateMemo;\n        return onCompletedMessage(CreateMemo, LANG(\"create_memo_completed\"), LANG(\"create_memo_fail\"));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, function (createMemoMu, _ref4) {\n      var createMemoLoading = _ref4.loading;\n      return React.createElement(DeleteMemoMu, {\n        mutation: DELETE_MEMO,\n        awaitRefetchQueries: true,\n        refetchQueries: [getOperationName(GET_MEMO)],\n        onCompleted: function onCompleted(_ref5) {\n          var DeleteMemo = _ref5.DeleteMemo;\n          return onCompletedMessage(DeleteMemo, LANG(\"deleted_note_completed\"), LANG(\"deleted_note_failed\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, function (deleteMemoMu, _ref6) {\n        var deleteMemoLoading = _ref6.loading;\n        return React.createElement(UpdateMemoMu, {\n          mutation: UPDATE_MEMO,\n          awaitRefetchQueries: true,\n          refetchQueries: [getOperationName(GET_MEMO)],\n          onCompleted: function onCompleted(_ref7) {\n            var UpdateMemo = _ref7.UpdateMemo;\n            return onCompletedMessage(UpdateMemo, LANG(\"note_updated\"), LANG(\"note_updated_failed\"));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, function (updateMemoMu, _ref8) {\n          var updateMemoLoading = _ref8.loading;\n          return networkStatus !== 1 ? React.createElement(Memo, Object.assign({\n            mutationLoading: updateMemoLoading || deleteMemoLoading || createMemoLoading,\n            memoType: memoType,\n            houseId: houseId,\n            createMemoMu: createMemoMu,\n            deleteMemoMu: deleteMemoMu,\n            updateMemoMu: updateMemoMu,\n            memos: getMemosData || [],\n            context: context\n          }, prop, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          })) : React.createElement(Preloader, {\n            size: MODAL_PRELOADER_SIZE,\n            loading: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          });\n        });\n      });\n    });\n  }));\n};\n\nexport default MemoWrap;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/Memo/MemoWrap.tsx"],"names":["React","Query","Mutation","queryDataFormater","onCompletedMessage","Memo","GET_MEMO","CREATE_MEMO","DELETE_MEMO","UPDATE_MEMO","getOperationName","MODAL_PRELOADER_SIZE","Preloader","LANG","GetMemoQu","CreateMemoMu","UpdateMemoMu","DeleteMemoMu","MemoWrap","context","memoType","prop","houseId","house","_id","Data","data","getMemoLoading","loading","networkStatus","getMemosData","CreateMemo","createMemoMu","createMemoLoading","DeleteMemo","deleteMemoMu","deleteMemoLoading","UpdateMemo","updateMemoMu","updateMemoLoading"],"mappings":"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","sourcesContent":["import React, * as react from \"react\";\r\nimport {Query, Mutation} from \"react-apollo\";\r\nimport {queryDataFormater, onCompletedMessage} from \"../../utils/utils\";\r\nimport Memo, {IConfigMemo} from \"./Memo\";\r\nimport {\r\n  getMemos,\r\n  getMemosVariables,\r\n  createMemo,\r\n  createMemoVariables,\r\n  updateMemo,\r\n  updateMemoVariables,\r\n  deleteMemoVariables,\r\n  deleteMemo\r\n} from \"../../types/api\";\r\nimport {GET_MEMO, CREATE_MEMO, DELETE_MEMO, UPDATE_MEMO} from \"../../queries\";\r\nimport {getOperationName} from \"apollo-link\";\r\nimport {MemoType, MODAL_PRELOADER_SIZE} from \"../../types/enum\";\r\nimport Preloader from \"../../atoms/preloader/Preloader\";\r\nimport {IContext} from \"../../pages/MiddleServerRouter\";\r\nimport {IUseModal, LANG} from \"../../hooks/hook\";\r\n\r\nexport interface IMemoWrapProps extends IConfigMemo {\r\n  context: IContext;\r\n  memoType: MemoType;\r\n  modalHook?: IUseModal;\r\n}\r\n\r\nclass GetMemoQu extends Query<getMemos, getMemosVariables> {}\r\nclass CreateMemoMu extends Mutation<createMemo, createMemoVariables> {}\r\nclass UpdateMemoMu extends Mutation<updateMemo, updateMemoVariables> {}\r\nclass DeleteMemoMu extends Mutation<deleteMemo, deleteMemoVariables> {}\r\n\r\nconst MemoWrap: React.FC<IMemoWrapProps> = ({context, memoType, ...prop}) => {\r\n  const {\r\n    house: {_id: houseId}\r\n  } = context;\r\n  return (\r\n    <div>\r\n      <GetMemoQu\r\n        skip={!houseId}\r\n        variables={{\r\n          houseId,\r\n          memoType: memoType\r\n        }}\r\n        query={GET_MEMO}\r\n      >\r\n        {({data: Data, loading: getMemoLoading, networkStatus}) => {\r\n          const getMemosData = queryDataFormater(Data, \"GetMemos\", \"memos\", []);\r\n          return (\r\n            <CreateMemoMu\r\n              mutation={CREATE_MEMO}\r\n              awaitRefetchQueries\r\n              refetchQueries={[getOperationName(GET_MEMO)!]}\r\n              onCompleted={({CreateMemo}) =>\r\n                onCompletedMessage(\r\n                  CreateMemo,\r\n                  LANG(\"create_memo_completed\"),\r\n                  LANG(\"create_memo_fail\")\r\n                )\r\n              }\r\n            >\r\n              {(createMemoMu, {loading: createMemoLoading}) => (\r\n                <DeleteMemoMu\r\n                  mutation={DELETE_MEMO}\r\n                  awaitRefetchQueries\r\n                  refetchQueries={[getOperationName(GET_MEMO)!]}\r\n                  onCompleted={({DeleteMemo}) =>\r\n                    onCompletedMessage(\r\n                      DeleteMemo,\r\n                      LANG(\"deleted_note_completed\"),\r\n                      LANG(\"deleted_note_failed\")\r\n                    )\r\n                  }\r\n                >\r\n                  {(deleteMemoMu, {loading: deleteMemoLoading}) => (\r\n                    <UpdateMemoMu\r\n                      mutation={UPDATE_MEMO}\r\n                      awaitRefetchQueries\r\n                      refetchQueries={[getOperationName(GET_MEMO)!]}\r\n                      onCompleted={({UpdateMemo}) =>\r\n                        onCompletedMessage(\r\n                          UpdateMemo,\r\n                          LANG(\"note_updated\"),\r\n                          LANG(\"note_updated_failed\")\r\n                        )\r\n                      }\r\n                    >\r\n                      {(updateMemoMu, {loading: updateMemoLoading}) =>\r\n                        networkStatus !== 1 ? (\r\n                          <Memo\r\n                            mutationLoading={\r\n                              updateMemoLoading ||\r\n                              deleteMemoLoading ||\r\n                              createMemoLoading\r\n                            }\r\n                            memoType={memoType}\r\n                            houseId={houseId}\r\n                            createMemoMu={createMemoMu}\r\n                            deleteMemoMu={deleteMemoMu}\r\n                            updateMemoMu={updateMemoMu}\r\n                            memos={getMemosData || []}\r\n                            context={context}\r\n                            {...prop}\r\n                          />\r\n                        ) : (\r\n                          <Preloader\r\n                            size={MODAL_PRELOADER_SIZE}\r\n                            loading={true}\r\n                          />\r\n                        )\r\n                      }\r\n                    </UpdateMemoMu>\r\n                  )}\r\n                </DeleteMemoMu>\r\n              )}\r\n            </CreateMemoMu>\r\n          );\r\n        }}\r\n      </GetMemoQu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemoWrap;\r\n"]},"metadata":{},"sourceType":"module"}