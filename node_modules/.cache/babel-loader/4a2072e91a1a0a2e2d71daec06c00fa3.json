{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\dailyAssjg\\\\components\\\\DragItem.tsx\";\nimport { useDrag } from \"react-dnd\";\nimport React, { useEffect } from \"react\";\nimport { instanceOfA } from \"../../../utils/utils\";\nimport JDIcon, { IconSize } from \"../../../atoms/icons/Icons\";\nimport { ReactTooltip } from \"../../../atoms/tooltip/Tooltip\";\nimport moment from \"moment\";\nimport classNames from \"classnames\";\nimport Gender from \"../../../pages/bookingHost/assig/components/items/Gender\";\nimport { BookingStatus, PaymentStatus } from \"../../../types/enum\";\nimport { LANG } from \"../../../hooks/hook\";\nimport StatusMarker from \"../../../pages/bookingHost/assig/components/items/StatusMarker\";\n\nvar DragItem = function DragItem(_ref) {\n  var item = _ref.item,\n      place = _ref.place,\n      room = _ref.room,\n      roomType = _ref.roomType;\n  var palceInfo = JSON.stringify({\n    roomTypeId: roomType._id,\n    roomId: room._id,\n    place: place\n  });\n  useEffect(function () {\n    ReactTooltip.rebuild();\n  }); // 빈자리 리턴\n\n  if (!item) {\n    return React.createElement(\"div\", {\n      className: \"dailyAssigItem__itemBlockWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-tip\": palceInfo,\n      \"data-place\": \"top\",\n      \"data-for\": \"placeTooltip\",\n      \"data-event\": \"click\",\n      className: \"dailyAssigItem__itemBlock dailyAssigItem__empty dailyAssigItem__guestBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n  var _useDrag = useDrag({\n    item: item\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      drag = _useDrag2[1];\n\n  return React.createElement(\"div\", {\n    ref: drag,\n    className: \"dailyAssigItem__itemBlockWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, function () {\n    // 방막기가 아닌경우\n    if (instanceOfA(item, \"booking\")) {\n      var booking = item.booking,\n          checkIn = item.checkIn,\n          checkOut = item.checkOut,\n          _id = item._id;\n      var checkInInfo = booking.checkInInfo,\n          status = booking.status,\n          name = booking.name,\n          payment = booking.payment,\n          memo = booking.memo;\n      var paymentStatus = payment.status;\n      var isUnpaid = paymentStatus !== PaymentStatus.COMPLETE;\n      var guestBlockClasses = classNames(\"dailyAssigItem__guest\", undefined, {\n        \"dailyAssigItem__guest--checkIn\": checkInInfo.isIn\n      }, {\n        \"dailyAssigItem__guest--progressing\": status === BookingStatus.PROGRESSING\n      });\n      return React.createElement(\"div\", {\n        \"data-tip\": \"\".concat(moment(checkIn).format(\"MM-DD\".concat(LANG(\"date\"))), \" ~ \").concat(moment(checkOut).format(\"MM-DD\".concat(LANG(\"date\")))),\n        \"data-for\": status === BookingStatus.PROGRESSING ? \"tooltipReadyBlock\" : \"guestCheckInOutToolTip\",\n        className: \"dailyAssigItem__itemBlock \".concat(guestBlockClasses),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"dailyAssigItem__itemName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"dailyAssigItem__gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Gender, {\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(StatusMarker, {\n        isUnpaid: isUnpaid,\n        memo: memo || \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), name)), React.createElement(\"span\", {\n        \"data-tip\": _id,\n        \"data-place\": \"top\",\n        \"data-for\": \"guestTooltip\",\n        \"data-event\": \"click\",\n        id: \"dailyAssigItem__configIconWrapId\".concat(_id),\n        className: \"dailyAssigItem__configIconWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(JDIcon, {\n        icon: \"dotMenuVertical\",\n        size: IconSize.MEDEIUM_SMALL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))); // 방막기 인 경우에\n    } else if (true) {\n      return React.createElement(\"div\", {\n        \"data-tip\": item._id,\n        \"data-place\": \"top\",\n        \"data-for\": \"blockTooltip\",\n        \"data-event\": \"click\",\n        id: \"dailyAssigItem__block\".concat(item._id),\n        className: \"dailyAssigItem__itemBlock dailyAssigItem__blockBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, LANG(\"block_place\"));\n    }\n  }());\n};\n\nexport default DragItem;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/dailyAssjg/components/DragItem.tsx"],"names":["useDrag","React","useEffect","instanceOfA","JDIcon","IconSize","ReactTooltip","moment","classNames","Gender","BookingStatus","PaymentStatus","LANG","StatusMarker","DragItem","item","place","room","roomType","palceInfo","JSON","stringify","roomTypeId","_id","roomId","rebuild","drag","booking","checkIn","checkOut","checkInInfo","status","name","payment","memo","paymentStatus","isUnpaid","COMPLETE","guestBlockClasses","undefined","isIn","PROGRESSING","format","MEDEIUM_SMALL"],"mappings":"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","sourcesContent":["import { useDrag } from \"react-dnd\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  getAllRoomTypeWithGuest_GetAllRoomType_roomTypes_rooms as IR,\r\n  getAllRoomTypeWithGuest_GetGuests_guests as IG,\r\n  getAllRoomTypeWithGuest_GetAllRoomType_roomTypes as IRT,\r\n  getAllRoomTypeWithGuest_GetBlocks_blocks as IB\r\n} from \"../../../types/api\";\r\nimport { instanceOfA } from \"../../../utils/utils\";\r\nimport JDIcon, { IconSize } from \"../../../atoms/icons/Icons\";\r\nimport { ReactTooltip } from \"../../../atoms/tooltip/Tooltip\";\r\nimport moment from \"moment\";\r\nimport classNames from \"classnames\";\r\nimport Gender from \"../../../pages/bookingHost/assig/components/items/Gender\";\r\nimport { BookingStatus, PaymentStatus } from \"../../../types/enum\";\r\nimport { LANG } from \"../../../hooks/hook\";\r\nimport StatusMarker from \"../../../pages/bookingHost/assig/components/items/StatusMarker\";\r\n\r\nexport interface IDragItemProp {\r\n  type: string;\r\n}\r\n\r\ninterface IProps {\r\n  item: (IG & IDragItemProp) | (IB & IDragItemProp) | null;\r\n  roomType: IRT;\r\n  room: IR;\r\n  place: number;\r\n}\r\n\r\nconst DragItem: React.FC<IProps> = ({ item, place, room, roomType }) => {\r\n  const palceInfo = JSON.stringify({\r\n    roomTypeId: roomType._id,\r\n    roomId: room._id,\r\n    place: place\r\n  });\r\n\r\n  useEffect(() => {\r\n    ReactTooltip.rebuild();\r\n  });\r\n\r\n  // 빈자리 리턴\r\n  if (!item) {\r\n    return (\r\n      <div className=\"dailyAssigItem__itemBlockWrap\">\r\n        <div\r\n          data-tip={palceInfo}\r\n          data-place=\"top\"\r\n          data-for=\"placeTooltip\"\r\n          data-event=\"click\"\r\n          className=\"dailyAssigItem__itemBlock dailyAssigItem__empty dailyAssigItem__guestBlock\"\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const [, drag] = useDrag({\r\n    item\r\n  });\r\n\r\n  return (\r\n    <div ref={drag} className=\"dailyAssigItem__itemBlockWrap\">\r\n      {(() => {\r\n        // 방막기가 아닌경우\r\n        if (instanceOfA<IG & IDragItemProp>(item, \"booking\")) {\r\n          const { booking, checkIn, checkOut, _id } = item;\r\n          const { checkInInfo, status, name, payment, memo } = booking;\r\n          const { status: paymentStatus } = payment;\r\n          const isUnpaid = paymentStatus !== PaymentStatus.COMPLETE;\r\n          const guestBlockClasses = classNames(\r\n            \"dailyAssigItem__guest\",\r\n            undefined,\r\n            {\r\n              \"dailyAssigItem__guest--checkIn\": checkInInfo.isIn\r\n            },\r\n            {\r\n              \"dailyAssigItem__guest--progressing\":\r\n                status === BookingStatus.PROGRESSING\r\n            }\r\n          );\r\n          return (\r\n            <div\r\n              data-tip={`${moment(checkIn).format(\r\n                `MM-DD${LANG(\"date\")}`\r\n              )} ~ ${moment(checkOut).format(`MM-DD${LANG(\"date\")}`)}`}\r\n              data-for={\r\n                status === BookingStatus.PROGRESSING\r\n                  ? \"tooltipReadyBlock\"\r\n                  : \"guestCheckInOutToolTip\"\r\n              }\r\n              className={`dailyAssigItem__itemBlock ${guestBlockClasses}`}\r\n            >\r\n              <span className=\"dailyAssigItem__itemName\">\r\n                <span className=\"dailyAssigItem__gender\">\r\n                  <Gender item={item} />\r\n                </span>\r\n                <span>\r\n                  <StatusMarker isUnpaid={isUnpaid} memo={memo || \"\"} />\r\n                  {name}\r\n                </span>\r\n              </span>\r\n              <span\r\n                data-tip={_id}\r\n                data-place=\"top\"\r\n                data-for=\"guestTooltip\"\r\n                data-event=\"click\"\r\n                id={`dailyAssigItem__configIconWrapId${_id}`}\r\n                className=\"dailyAssigItem__configIconWrap\"\r\n              >\r\n                <JDIcon icon=\"dotMenuVertical\" size={IconSize.MEDEIUM_SMALL} />\r\n              </span>\r\n            </div>\r\n          );\r\n          // 방막기 인 경우에\r\n        } else if (true) {\r\n          return (\r\n            <div\r\n              data-tip={item._id}\r\n              data-place=\"top\"\r\n              data-for=\"blockTooltip\"\r\n              data-event=\"click\"\r\n              id={`dailyAssigItem__block${item._id}`}\r\n              className=\"dailyAssigItem__itemBlock dailyAssigItem__blockBlock\"\r\n            >\r\n              {LANG(\"block_place\")}\r\n            </div>\r\n          );\r\n        }\r\n      })()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragItem;\r\n"]},"metadata":{},"sourceType":"module"}