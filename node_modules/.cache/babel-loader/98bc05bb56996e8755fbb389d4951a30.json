{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\resvList\\\\ResvListWrap.tsx\";\nimport React, { Fragment } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport ResvList from \"./ResvList\";\nimport { queryDataFormater, onCompletedMessage } from \"../../../utils/utils\";\nimport { GET_BOOKINGS, DELETE_BOOKING, UPDATE_BOOKING } from \"../../../queries\";\nimport { getOperationName } from \"apollo-link\";\nimport { usePagiNation, LANG } from \"../../../hooks/hook\";\nimport { isNetworkRequestInFlight } from \"apollo-client/core/networkStatus\";\n\nvar UpdateBookingMu =\n/*#__PURE__*/\nfunction (_Mutation) {\n  _inherits(UpdateBookingMu, _Mutation);\n\n  function UpdateBookingMu() {\n    _classCallCheck(this, UpdateBookingMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpdateBookingMu).apply(this, arguments));\n  }\n\n  return UpdateBookingMu;\n}(Mutation);\n\nvar DeleteBookingMu =\n/*#__PURE__*/\nfunction (_Mutation2) {\n  _inherits(DeleteBookingMu, _Mutation2);\n\n  function DeleteBookingMu() {\n    _classCallCheck(this, DeleteBookingMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DeleteBookingMu).apply(this, arguments));\n  }\n\n  return DeleteBookingMu;\n}(Mutation);\n\nvar GetBookingsQuery =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(GetBookingsQuery, _Query);\n\n  function GetBookingsQuery() {\n    _classCallCheck(this, GetBookingsQuery);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GetBookingsQuery).apply(this, arguments));\n  }\n\n  return GetBookingsQuery;\n}(Query);\n\nvar ResvListWrap = function ResvListWrap(_ref) {\n  var context = _ref.context;\n  var house = context.house,\n      houseConfig = context.houseConfig;\n\n  var _usePagiNation = usePagiNation(1),\n      _usePagiNation2 = _slicedToArray(_usePagiNation, 2),\n      page = _usePagiNation2[0],\n      setPage = _usePagiNation2[1];\n\n  var period = houseConfig.pollingPeriod.period;\n  return React.createElement(GetBookingsQuery, {\n    query: GET_BOOKINGS,\n    pollInterval: period,\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      houseId: house._id,\n      page: page,\n      count: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, function (_ref2) {\n    var boookerData = _ref2.data,\n        loading = _ref2.loading,\n        error = _ref2.error,\n        networkStatus = _ref2.networkStatus;\n    var bookings = queryDataFormater(boookerData, \"GetBookings\", \"bookings\", undefined);\n    var pageInfo = queryDataFormater(boookerData, \"GetBookings\", \"pageInfo\", undefined);\n    return React.createElement(DeleteBookingMu, {\n      mutation: DELETE_BOOKING,\n      refetchQueries: [getOperationName(GET_BOOKINGS) || \"\"],\n      onCompleted: function onCompleted(_ref3) {\n        var DeleteBooking = _ref3.DeleteBooking;\n        onCompletedMessage(DeleteBooking, LANG(\"reservation_delete_complete\"), LANG(\"reservation_delete_fail\"));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, function (deleteBookingMu, _ref4) {\n      var deleteBookingLoading = _ref4.loading;\n      return React.createElement(UpdateBookingMu, {\n        mutation: UPDATE_BOOKING,\n        refetchQueries: [getOperationName(GET_BOOKINGS) || \"\"],\n        onCompleted: function onCompleted(_ref5) {\n          var UpdateBooking = _ref5.UpdateBooking;\n          onCompletedMessage(UpdateBooking, LANG(\"reservation_update\"), LANG(\"reservation_update_fail\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, function (updateBookingMu, _ref6) {\n        var updateBookingLoading = _ref6.loading;\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(ResvList, {\n          context: context,\n          pageInfo: pageInfo || undefined,\n          bookingsData: bookings || [],\n          deleteBookingMu: deleteBookingMu,\n          updateBookingMu: updateBookingMu,\n          updateBookingLoading: updateBookingLoading,\n          deleteBookingLoading: deleteBookingLoading,\n          setPage: setPage,\n          networkStatus: networkStatus,\n          loading: isNetworkRequestInFlight(networkStatus),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }));\n      });\n    });\n  });\n};\n\nexport default ResvListWrap;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/resvList/ResvListWrap.tsx"],"names":["React","Fragment","Query","Mutation","ResvList","queryDataFormater","onCompletedMessage","GET_BOOKINGS","DELETE_BOOKING","UPDATE_BOOKING","getOperationName","usePagiNation","LANG","isNetworkRequestInFlight","UpdateBookingMu","DeleteBookingMu","GetBookingsQuery","ResvListWrap","context","house","houseConfig","page","setPage","period","pollingPeriod","houseId","_id","count","boookerData","data","loading","error","networkStatus","bookings","undefined","pageInfo","DeleteBooking","deleteBookingMu","deleteBookingLoading","UpdateBooking","updateBookingMu","updateBookingLoading"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\r\nimport {Query, Mutation} from \"react-apollo\";\r\nimport ResvList from \"./ResvList\";\r\nimport {\r\n  getBookings,\r\n  getBookingsVariables,\r\n  updateBooking,\r\n  updateBookingVariables,\r\n  deleteBooking,\r\n  deleteBookingVariables\r\n} from \"../../../types/api\";\r\nimport {queryDataFormater, onCompletedMessage} from \"../../../utils/utils\";\r\nimport {GET_BOOKINGS, DELETE_BOOKING, UPDATE_BOOKING} from \"../../../queries\";\r\nimport {getOperationName} from \"apollo-link\";\r\nimport {usePagiNation, LANG} from \"../../../hooks/hook\";\r\nimport {isNetworkRequestInFlight} from \"apollo-client/core/networkStatus\";\r\nimport {IContext} from \"../../MiddleServerRouter\";\r\n\r\ninterface IProps {\r\n  context: IContext;\r\n}\r\n\r\nclass UpdateBookingMu extends Mutation<updateBooking, updateBookingVariables> {}\r\nclass DeleteBookingMu extends Mutation<deleteBooking, deleteBookingVariables> {}\r\nclass GetBookingsQuery extends Query<getBookings, getBookingsVariables> {}\r\n\r\nconst ResvListWrap: React.FC<IProps> = ({context}) => {\r\n  const {house, houseConfig} = context;\r\n  const [page, setPage] = usePagiNation(1);\r\n\r\n  const {\r\n    pollingPeriod: {period}\r\n  } = houseConfig;\r\n\r\n  return (\r\n    <GetBookingsQuery\r\n      query={GET_BOOKINGS}\r\n      pollInterval={period}\r\n      notifyOnNetworkStatusChange\r\n      variables={{houseId: house._id, page, count: 20}}\r\n    >\r\n      {({data: boookerData, loading, error, networkStatus}) => {\r\n        const bookings = queryDataFormater(\r\n          boookerData,\r\n          \"GetBookings\",\r\n          \"bookings\",\r\n          undefined\r\n        );\r\n        const pageInfo = queryDataFormater(\r\n          boookerData,\r\n          \"GetBookings\",\r\n          \"pageInfo\",\r\n          undefined\r\n        );\r\n\r\n        return (\r\n          <DeleteBookingMu\r\n            mutation={DELETE_BOOKING}\r\n            refetchQueries={[getOperationName(GET_BOOKINGS) || \"\"]}\r\n            onCompleted={({DeleteBooking}) => {\r\n              onCompletedMessage(\r\n                DeleteBooking,\r\n                LANG(\"reservation_delete_complete\"),\r\n                LANG(\"reservation_delete_fail\")\r\n              );\r\n            }}\r\n          >\r\n            {(deleteBookingMu, {loading: deleteBookingLoading}) => (\r\n              <UpdateBookingMu\r\n                mutation={UPDATE_BOOKING}\r\n                refetchQueries={[getOperationName(GET_BOOKINGS) || \"\"]}\r\n                onCompleted={({UpdateBooking}) => {\r\n                  onCompletedMessage(\r\n                    UpdateBooking,\r\n                    LANG(\"reservation_update\"),\r\n                    LANG(\"reservation_update_fail\")\r\n                  );\r\n                }}\r\n              >\r\n                {(updateBookingMu, {loading: updateBookingLoading}) => (\r\n                  <Fragment>\r\n                    <ResvList\r\n                      context={context}\r\n                      pageInfo={pageInfo || undefined}\r\n                      bookingsData={bookings || []}\r\n                      deleteBookingMu={deleteBookingMu}\r\n                      updateBookingMu={updateBookingMu}\r\n                      updateBookingLoading={updateBookingLoading}\r\n                      deleteBookingLoading={deleteBookingLoading}\r\n                      setPage={setPage}\r\n                      networkStatus={networkStatus}\r\n                      loading={isNetworkRequestInFlight(networkStatus)}\r\n                    />\r\n                  </Fragment>\r\n                )}\r\n              </UpdateBookingMu>\r\n            )}\r\n          </DeleteBookingMu>\r\n        );\r\n      }}\r\n    </GetBookingsQuery>\r\n  );\r\n};\r\n\r\nexport default ResvListWrap;\r\n"]},"metadata":{},"sourceType":"module"}