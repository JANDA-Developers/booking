{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\phoneVerificationModal\\\\PhoneVerificationModal.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport InputText from \"../../atoms/forms/inputText/InputText\";\nimport Button from \"../../atoms/button/Button\";\nimport { useInput, LANG } from \"../../hooks/hook\";\nimport { ErrProtecter } from \"../../utils/utils\";\nimport \"./PhoneVerification.scss\";\nimport JDmodal from \"../../atoms/modal/Modal\";\nimport JDTimer from \"../../atoms/timer/Timer\";\nimport { TimePerMs } from \"../../types/enum\";\nimport Timer from \"react-compound-timer\";\nimport { toast } from \"react-toastify\";\nimport PreloaderModal from \"../../atoms/preloaderModal/PreloaderModal\";\n\nvar PhoneVerification = function PhoneVerification(_ref) {\n  var modalHook = _ref.modalHook,\n      completePhoneVerificationMu = _ref.completePhoneVerificationMu,\n      startPhoneVerificationMu = _ref.startPhoneVerificationMu,\n      phoneNumber = _ref.phoneNumber,\n      muLoading = _ref.muLoading;\n  var keyHook = useInput(\"\");\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isTimeOver = _useState2[0],\n      setTimeOver = _useState2[1];\n\n  useEffect(function () {\n    if (phoneNumber && modalHook.isOpen) {\n      startPhoneVerificationMu({\n        variables: {\n          phoneNumber: phoneNumber\n        }\n      });\n    }\n  }, [phoneNumber]);\n\n  if (muLoading) {\n    return React.createElement(PreloaderModal, {\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(JDmodal, Object.assign({}, modalHook, {\n    className: \"Modal\",\n    overlayClassName: \"Overlay\",\n    ariaHideApp: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, LANG(\"mobile_phone_verification_number\")), React.createElement(JDTimer, {\n    initialTime: TimePerMs.M * 3,\n    direction: \"backward\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, function (_ref2) {\n    var timerState = _ref2.timerState;\n\n    if (timerState === \"STOPPED\") {\n      setTimeOver(true);\n    }\n\n    return React.createElement(\"span\", {\n      className: \"JDtimer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"JDtimer__minute\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Timer.Minutes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), LANG(\"minute\")), React.createElement(\"span\", {\n      className: \"JDtimer__second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Timer.Seconds, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), LANG(\"second\")));\n  }), React.createElement(InputText, Object.assign({}, keyHook, {\n    label: LANG(\"certification_number\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"JDmodal__endSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Button, {\n    thema: \"primary\",\n    label: LANG(\"authenticate\"),\n    onClick: function onClick() {\n      if (muLoading) return;\n\n      if (isTimeOver) {\n        toast.warn(LANG(\"timeout_please_request_again\"));\n      }\n\n      completePhoneVerificationMu({\n        variables: {\n          key: keyHook.value\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })));\n};\n\nexport default ErrProtecter(PhoneVerification);","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/phoneVerificationModal/PhoneVerificationModal.tsx"],"names":["React","useEffect","useState","InputText","Button","useInput","LANG","ErrProtecter","JDmodal","JDTimer","TimePerMs","Timer","toast","PreloaderModal","PhoneVerification","modalHook","completePhoneVerificationMu","startPhoneVerificationMu","phoneNumber","muLoading","keyHook","isTimeOver","setTimeOver","isOpen","variables","M","timerState","warn","key","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport InputText from \"../../atoms/forms/inputText/InputText\";\r\nimport Button from \"../../atoms/button/Button\";\r\nimport {useInput, IUseModal, LANG} from \"../../hooks/hook\";\r\nimport {ErrProtecter} from \"../../utils/utils\";\r\nimport \"./PhoneVerification.scss\";\r\nimport JDmodal from \"../../atoms/modal/Modal\";\r\nimport {MutationFn} from \"react-apollo\";\r\nimport {\r\n  completePhoneVerification,\r\n  completePhoneVerificationVariables,\r\n  startPhoneVerificationWithPhoneNumber,\r\n  startPhoneVerificationWithPhoneNumberVariables\r\n} from \"../../types/api\";\r\nimport JDTimer from \"../../atoms/timer/Timer\";\r\nimport {TimePerMs} from \"../../types/enum\";\r\nimport Timer from \"react-compound-timer\";\r\nimport {toast} from \"react-toastify\";\r\nimport PreloaderModal from \"../../atoms/preloaderModal/PreloaderModal\";\r\n\r\ninterface IProps {\r\n  modalHook: IUseModal<any>;\r\n  startPhoneVerificationMu: MutationFn<\r\n    startPhoneVerificationWithPhoneNumber,\r\n    startPhoneVerificationWithPhoneNumberVariables\r\n  >;\r\n  completePhoneVerificationMu: MutationFn<\r\n    completePhoneVerification,\r\n    completePhoneVerificationVariables\r\n  >;\r\n  phoneNumber: string | undefined;\r\n  muLoading: boolean;\r\n}\r\n\r\nconst PhoneVerification: React.FC<IProps> = ({\r\n  modalHook,\r\n  completePhoneVerificationMu,\r\n  startPhoneVerificationMu,\r\n  phoneNumber,\r\n  muLoading\r\n}) => {\r\n  const keyHook = useInput(\"\");\r\n  const [isTimeOver, setTimeOver] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (phoneNumber && modalHook.isOpen) {\r\n      startPhoneVerificationMu({\r\n        variables: {\r\n          phoneNumber: phoneNumber\r\n        }\r\n      });\r\n    }\r\n  }, [phoneNumber]);\r\n\r\n  if (muLoading) {\r\n    return <PreloaderModal loading={true} />;\r\n  }\r\n\r\n  return (\r\n    <JDmodal\r\n      {...modalHook}\r\n      className=\"Modal\"\r\n      overlayClassName=\"Overlay\"\r\n      ariaHideApp={false}\r\n    >\r\n      <h5>{LANG(\"mobile_phone_verification_number\")}</h5>\r\n      <JDTimer initialTime={TimePerMs.M * 3} direction=\"backward\">\r\n        {({timerState}: any) => {\r\n          if (timerState === \"STOPPED\") {\r\n            setTimeOver(true);\r\n          }\r\n          return (\r\n            <span className=\"JDtimer\">\r\n              <span className=\"JDtimer__minute\">\r\n                <Timer.Minutes />\r\n                {LANG(\"minute\")}\r\n              </span>\r\n              <span className=\"JDtimer__second\">\r\n                <Timer.Seconds />\r\n                {LANG(\"second\")}\r\n              </span>\r\n            </span>\r\n          );\r\n        }}\r\n      </JDTimer>\r\n      <InputText {...keyHook} label={LANG(\"certification_number\")} />\r\n      <div className=\"JDmodal__endSection\">\r\n        <Button\r\n          thema={\"primary\"}\r\n          label={LANG(\"authenticate\")}\r\n          onClick={() => {\r\n            if (muLoading) return;\r\n            if (isTimeOver) {\r\n              toast.warn(LANG(\"timeout_please_request_again\"));\r\n            }\r\n            completePhoneVerificationMu({\r\n              variables: {\r\n                key: keyHook.value\r\n              }\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    </JDmodal>\r\n  );\r\n};\r\n\r\nexport default ErrProtecter(PhoneVerification);\r\n"]},"metadata":{},"sourceType":"module"}