{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\documents\\\\lang\\\\LangPage.tsx\";\nimport React, { Fragment } from \"react\";\nimport { JDlangsSet } from \"../../../langs/JDlang\";\nimport \"./LangPage.scss\";\nimport { instanceOfA } from \"../../../utils/utils\";\n\nvar LangPage = function LangPage() {\n  var primeLang = JDlangsSet[\"kr\"];\n  var keys = Object.keys(primeLang);\n\n  var ErrBlock = function ErrBlock() {\n    return React.createElement(\"div\", {\n      className: \"langPage__value langPage__empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  };\n\n  var render = function render(keySet, langType, word) {\n    // @ts-ignore\n    var value = keySet[word];\n    console.log(value); // @ts-ignore\n\n    if (!primeLang[word]) return;\n    if (!value) return React.createElement(ErrBlock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n\n    if (typeof value === \"string\") {\n      return React.createElement(\"div\", {\n        className: \"langPage__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, value);\n    } else if (instanceOfA(value, \"key\")) {\n      console.log(\"instanceOFA\");\n      return React.createElement(\"div\", {\n        className: \"langPage__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, value);\n    } else if (typeof value === \"object\") {\n      var enums = Object.keys( // @ts-ignore\n      primeLang[word]);\n      return React.createElement(\"div\", {\n        className: \"langPage__value langPage__value--enum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, word), enums.map(function (enumKey, index) {\n        if (!value[enumKey]) return React.createElement(ErrBlock, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n\n        if (typeof value[enumKey] === \"string\") {\n          return React.createElement(\"div\", {\n            className: \"langPage__enums\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, \"\".concat(index, \": \"), value[enumKey]));\n        }\n      }));\n    } else if (typeof value === \"function\") {\n      return React.createElement(\"div\", {\n        className: \"langPage__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, // @ts-ignore\n      value());\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"langPage container container--full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section langPage__wrapAll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"langPage__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, Object.keys(JDlangsSet).map(function (langType, index) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, index === 0 && React.createElement(\"h3\", {\n      className: \"langPage__value langPage__langKey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"KEY\"), React.createElement(\"h3\", {\n      className: \"langPage__value langPage__langKey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, langType));\n  })), keys.map(function (word, rowIndex) {\n    return React.createElement(\"div\", {\n      className: \"langPage__row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"langPage__rowIndex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\".concat(rowIndex)), React.createElement(\"span\", {\n      className: \"langPage__rowKey langPage__value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, word), Object.keys(JDlangsSet).map(function (langType, index) {\n      // @ts-ignore\n      var langSet = JDlangsSet[langType];\n      return render(langSet, langType, word);\n    }));\n  })));\n};\n\nexport default LangPage;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/documents/lang/LangPage.tsx"],"names":["React","Fragment","JDlangsSet","instanceOfA","LangPage","primeLang","keys","Object","ErrBlock","render","keySet","langType","word","value","console","log","enums","map","enumKey","index","rowIndex","langSet"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { JDlangsSet } from \"../../../langs/JDlang\";\r\nimport \"./LangPage.scss\";\r\nimport { instanceOfA } from \"../../../utils/utils\";\r\n\r\nconst LangPage: React.FC = () => {\r\n  const primeLang = JDlangsSet[\"kr\"];\r\n  const keys = Object.keys(primeLang);\r\n\r\n  const ErrBlock = () => <div className=\"langPage__value langPage__empty\" />;\r\n\r\n  const render = (keySet: any, langType: string, word: any) => {\r\n    // @ts-ignore\r\n    const value = keySet[word];\r\n    console.log(value);\r\n    // @ts-ignore\r\n    if (!primeLang[word]) return;\r\n\r\n    if (!value) return <ErrBlock />;\r\n\r\n    if (typeof value === \"string\") {\r\n      return <div className=\"langPage__value\">{value}</div>;\r\n    } else if (instanceOfA<JSX.Element>(value, \"key\")) {\r\n      console.log(\"instanceOFA\");\r\n      return <div className=\"langPage__value\">{value}</div>;\r\n    } else if (typeof value === \"object\") {\r\n      const enums = Object.keys(\r\n        // @ts-ignore\r\n        primeLang[word]\r\n      );\r\n\r\n      return (\r\n        <div className={`langPage__value langPage__value--enum`}>\r\n          <h6>{word}</h6>\r\n          {enums.map((enumKey, index) => {\r\n            if (!value[enumKey]) return <ErrBlock />;\r\n            if (typeof value[enumKey] === \"string\") {\r\n              return (\r\n                <div className=\"langPage__enums\">\r\n                  <div>\r\n                    {`${index}: `}\r\n                    {value[enumKey]}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    } else if (typeof value === \"function\") {\r\n      return (\r\n        <div className=\"langPage__value\">\r\n          {// @ts-ignore\r\n          value()}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"langPage container container--full\">\r\n      <div className=\"docs-section langPage__wrapAll\">\r\n        <div className=\"langPage__row\">\r\n          {Object.keys(JDlangsSet).map((langType, index) => (\r\n            <Fragment>\r\n              {index === 0 && (\r\n                <h3 className=\"langPage__value langPage__langKey\">KEY</h3>\r\n              )}\r\n              <h3 className=\"langPage__value langPage__langKey\">{langType}</h3>\r\n            </Fragment>\r\n          ))}\r\n        </div>\r\n        {keys.map((word, rowIndex) => (\r\n          <div className=\"langPage__row\">\r\n            <span className=\"langPage__rowIndex\">{`${rowIndex}`}</span>\r\n            <span className=\"langPage__rowKey langPage__value\">{word}</span>\r\n            {Object.keys(JDlangsSet).map((langType, index) => {\r\n              // @ts-ignore\r\n              const langSet = JDlangsSet[langType];\r\n              return render(langSet, langType, word);\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LangPage;\r\n"]},"metadata":{},"sourceType":"module"}