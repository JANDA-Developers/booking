{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\dayPicker\\\\component\\\\input\\\\JDdayPickerInput.tsx\";\nimport React, { useRef, useEffect, Fragment } from \"react\";\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport moment from \"moment\";\nimport InputText from \"../../../forms/inputText/InputText\";\nimport \"node_modules/moment/locale/ko\";\nimport { LANG } from \"../../../../hooks/hook\";\nimport { DateFormat } from \"../../../../types/enum\"; // 데이픽커 인풋은 어레인이지를 지원하지 않을려는것만 같다.\n// 무리하게 바꾸었는데 잘 동작할지 모르겠다.\n\n// 👿 이 파일은 전체적으로 타입스크립트 작업이 필요하다.\nvar JDdayPickerInput = function JDdayPickerInput(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      isRange = _ref.isRange,\n      label = _ref.label,\n      readOnly = _ref.readOnly,\n      displayIcon = _ref.displayIcon,\n      dayPickerProps = _ref.dayPickerProps,\n      displayYear = _ref.displayYear,\n      inputClassName = _ref.inputClassName,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? LANG(\"please_select_date\") : _ref$placeholder,\n      _ref$format = _ref.format,\n      format = _ref$format === void 0 ? displayYear ? DateFormat.YYMMDD : DateFormat.MMDD : _ref$format,\n      InputComponent = _ref.inputComponent,\n      disabled = _ref.disabled,\n      props = _objectWithoutProperties(_ref, [\"from\", \"to\", \"isRange\", \"label\", \"readOnly\", \"displayIcon\", \"dayPickerProps\", \"displayYear\", \"inputClassName\", \"placeholder\", \"format\", \"inputComponent\", \"disabled\"]);\n\n  var DayPickerInputRef = useRef(null);\n  var isInitialMount = useRef(true);\n\n  var dateForMatter = function dateForMatter(date, inFormat, locale) {\n    moment.locale(locale);\n\n    if (date) {\n      return moment(date).format(inFormat);\n    }\n\n    return \"\";\n  };\n\n  var handleWindowClickEvent = function handleWindowClickEvent() {\n    var dayPickerRef = DayPickerInputRef.current;\n    if (dayPickerRef) dayPickerRef.hideDayPicker();\n  };\n\n  useEffect(function () {\n    // 상황에따라 DatePicker 투글\n    // 마운트 전인지 검사\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n      return;\n    }\n\n    var dayPickerRef = DayPickerInputRef.current; // 화면을 클릭하면 나갈수 달력을 닫도록 해줌\n\n    if (dayPickerRef) {\n      if (from && to) {\n        dayPickerRef.hideDayPicker();\n      } else {\n        dayPickerRef.showDayPicker();\n      }\n    }\n  }, [from, to]);\n\n  var valueFormatter = function valueFormatter(inFrom, inTo, informat, locale) {\n    if (isRange) {\n      var _formatFrom = dateForMatter(inFrom, informat, locale);\n\n      var formatTo = dateForMatter(inTo, informat, locale); // 이상하게 return ''는 오류를 일으킨다.\n\n      if (_formatFrom === \"\") return \" \";\n      if (formatTo === \"\") return _formatFrom;\n      return \"\".concat(_formatFrom, \" ~ \").concat(formatTo);\n    }\n\n    var formatFrom = dateForMatter(inFrom, informat, locale);\n    return \"\".concat(formatFrom);\n  };\n\n  var MyComponent = React.forwardRef(function (prop, ref) {\n    return InputComponent ? InputComponent(prop) : React.createElement(InputText, Object.assign({\n      ref: ref,\n      wrapClassName: \"DayPicker__inputWrap\",\n      className: \"DayPicker__input \".concat(inputClassName),\n      readOnly: readOnly,\n      disabled: disabled,\n      label: label,\n      icon: label && displayIcon ? \"calendar\" : undefined\n    }, props, prop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(DayPickerInput, {\n    ref: DayPickerInputRef,\n    placeholder: placeholder,\n    dayPickerProps: _objectSpread({}, dayPickerProps),\n    format: format,\n    component: MyComponent,\n    hideOnDayClick: !isRange,\n    value: valueFormatter(from, to, format, \"kr\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }));\n};\n\nexport default JDdayPickerInput;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/dayPicker/component/input/JDdayPickerInput.tsx"],"names":["React","useRef","useEffect","Fragment","DayPickerInput","moment","InputText","LANG","DateFormat","JDdayPickerInput","from","to","isRange","label","readOnly","displayIcon","dayPickerProps","displayYear","inputClassName","placeholder","format","YYMMDD","MMDD","InputComponent","inputComponent","disabled","props","DayPickerInputRef","isInitialMount","dateForMatter","date","inFormat","locale","handleWindowClickEvent","dayPickerRef","current","hideDayPicker","showDayPicker","valueFormatter","inFrom","inTo","informat","formatFrom","formatTo","MyComponent","forwardRef","prop","ref","undefined"],"mappings":"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","sourcesContent":["import { DayPickerProps } from \"react-day-picker\";\r\nimport React, { useRef, useEffect, Fragment } from \"react\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport moment from \"moment\";\r\nimport InputText from \"../../../forms/inputText/InputText\";\r\nimport \"node_modules/moment/locale/ko\";\r\nimport { isEmpty } from \"../../../../utils/utils\";\r\nimport { LANG } from \"../../../../hooks/hook\";\r\nimport { DateFormat } from \"../../../../types/enum\";\r\n// 데이픽커 인풋은 어레인이지를 지원하지 않을려는것만 같다.\r\n// 무리하게 바꾸었는데 잘 동작할지 모르겠다.\r\n\r\ninterface IProps {\r\n  from?: Date | null;\r\n  to?: Date | null;\r\n  isRange?: boolean;\r\n  readOnly?: boolean;\r\n  canSelectSameDate?: boolean;\r\n  format?: string;\r\n  label?: string;\r\n  displayIcon: boolean;\r\n  placeholder?: string;\r\n  inputClassName?: string;\r\n  displayYear?: boolean;\r\n  dayPickerProps: DayPickerProps;\r\n  inputComponent?: any;\r\n  disabled?: boolean;\r\n}\r\n\r\n// 👿 이 파일은 전체적으로 타입스크립트 작업이 필요하다.\r\nconst JDdayPickerInput: React.FC<IProps> = ({\r\n  from,\r\n  to,\r\n  isRange,\r\n  label,\r\n  readOnly,\r\n  displayIcon,\r\n  dayPickerProps,\r\n  displayYear,\r\n  inputClassName,\r\n  placeholder = LANG(\"please_select_date\"),\r\n  format = displayYear ? DateFormat.YYMMDD : DateFormat.MMDD,\r\n  inputComponent: InputComponent,\r\n  disabled,\r\n  ...props\r\n}) => {\r\n  let DayPickerInputRef = useRef<DayPickerInput>(null);\r\n  const isInitialMount = useRef(true);\r\n\r\n  const dateForMatter = (\r\n    date: Date | null | undefined,\r\n    inFormat: string,\r\n    locale: string\r\n  ): string => {\r\n    moment.locale(locale);\r\n    if (date) {\r\n      return moment(date).format(inFormat);\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const handleWindowClickEvent = () => {\r\n    const dayPickerRef = DayPickerInputRef.current;\r\n    if (dayPickerRef) dayPickerRef.hideDayPicker();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 상황에따라 DatePicker 투글\r\n    // 마운트 전인지 검사\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n      return;\r\n    }\r\n\r\n    const dayPickerRef = DayPickerInputRef.current;\r\n    // 화면을 클릭하면 나갈수 달력을 닫도록 해줌\r\n    if (dayPickerRef) {\r\n      if (from && to) {\r\n        dayPickerRef.hideDayPicker();\r\n      } else {\r\n        dayPickerRef.showDayPicker();\r\n      }\r\n    }\r\n  }, [from, to]);\r\n\r\n  const valueFormatter = (\r\n    inFrom: Date | null | undefined,\r\n    inTo: Date | null | undefined,\r\n    informat: string,\r\n    locale: string\r\n  ): string => {\r\n    if (isRange) {\r\n      const formatFrom = dateForMatter(inFrom, informat, locale);\r\n      const formatTo = dateForMatter(inTo, informat, locale);\r\n\r\n      // 이상하게 return ''는 오류를 일으킨다.\r\n      if (formatFrom === \"\") return \" \";\r\n      if (formatTo === \"\") return formatFrom;\r\n      return `${formatFrom} ~ ${formatTo}`;\r\n    }\r\n    const formatFrom = dateForMatter(inFrom, informat, locale);\r\n    return `${formatFrom}`;\r\n  };\r\n\r\n  const MyComponent = React.forwardRef((prop: any, ref) =>\r\n    InputComponent ? (\r\n      InputComponent(prop)\r\n    ) : (\r\n      <InputText\r\n        ref={ref}\r\n        wrapClassName={\"DayPicker__inputWrap\"}\r\n        className={`DayPicker__input ${inputClassName}`}\r\n        readOnly={readOnly}\r\n        disabled={disabled}\r\n        label={label}\r\n        icon={label && displayIcon ? \"calendar\" : undefined}\r\n        {...props}\r\n        {...prop}\r\n      />\r\n    )\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* 😶 REF는 잘 작동하지만 브라우저상 오류를 낸다 이유는... ref가\r\n      그냥 맨껍데기에 적용되서 그렇다는데 아무래도 해결방법은 깃허브에 문의해봐야겠다. */}\r\n      <DayPickerInput\r\n        ref={DayPickerInputRef}\r\n        placeholder={placeholder}\r\n        dayPickerProps={{ ...dayPickerProps }}\r\n        format={format}\r\n        component={MyComponent}\r\n        hideOnDayClick={!isRange}\r\n        value={valueFormatter(from, to, format, \"kr\")}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default JDdayPickerInput;\r\n"]},"metadata":{},"sourceType":"module"}