{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\config\\\\addtiones\\\\systemConfig.tsx\";\nimport React, { useState } from \"react\";\nimport JDLabel from \"../../../../atoms/label/JDLabel\";\nimport JDrange from \"../../../../atoms/forms/range/Range\";\nimport { LANG } from \"../../../../hooks/hook\";\n\nvar SystemDescription = function SystemDescription(_ref) {\n  var updateHouseConfigMu = _ref.updateHouseConfigMu,\n      context = _ref.context;\n  var house = context.house;\n\n  var _useState = useState(house.houseConfig.pollingPeriod ? house.houseConfig.pollingPeriod.period : 0),\n      _useState2 = _slicedToArray(_useState, 2),\n      range = _useState2[0],\n      setRange = _useState2[1];\n\n  var handleRangeChange = function handleRangeChange(value) {\n    if (typeof value !== \"number\") return;\n    setRange(value);\n    updateHouseConfigMu({\n      variables: {\n        houseId: house._id,\n        UpdateHouseConfigParams: {\n          pollingPeriod: {\n            enable: true,\n            period: value\n          }\n        }\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section__box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, LANG(\"default_system_setting\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, LANG(\"polling_period\")), React.createElement(JDLabel, {\n    txt: LANG(\"polling_period_setting\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(JDrange, {\n    onChange: setRange,\n    onChangeComplete: handleRangeChange,\n    value: range,\n    minValue: 10000,\n    maxValue: 180000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, LANG(\"server_will_check_if_there_is_a_new_reservation_once_every_set_number_by_ms\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, LANG(\"if_there_is_a_new_reservation_the_new_reservation_will_be_displayed_without_refreshing_the_screen\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"*\", LANG(\"if_you_have_problems_with_computer_performance_and_frequent_screen_updates_try_setting_a_higher_pooling_frequency\")))));\n};\n\nexport default SystemDescription;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/config/addtiones/systemConfig.tsx"],"names":["React","useState","JDLabel","JDrange","LANG","SystemDescription","updateHouseConfigMu","context","house","houseConfig","pollingPeriod","period","range","setRange","handleRangeChange","value","variables","houseId","_id","UpdateHouseConfigParams","enable"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AAOA,SAASC,IAAT,QAAqB,wBAArB;;AAUA,IAAMC,iBAAmC,GAAG,SAAtCA,iBAAsC,OAGtC;AAAA,MAFJC,mBAEI,QAFJA,mBAEI;AAAA,MADJC,OACI,QADJA,OACI;AAAA,MACIC,KADJ,GACcD,OADd,CACIC,KADJ;;AAAA,kBAEsBP,QAAQ,CAChCO,KAAK,CAACC,WAAN,CAAkBC,aAAlB,GAAkCF,KAAK,CAACC,WAAN,CAAkBC,aAAlB,CAAgCC,MAAlE,GAA2E,CAD3C,CAF9B;AAAA;AAAA,MAEGC,KAFH;AAAA,MAEUC,QAFV;;AAMJ,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAgB;AACxC,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC/BF,IAAAA,QAAQ,CAACE,KAAD,CAAR;AAEAT,IAAAA,mBAAmB,CAAC;AAClBU,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EAAET,KAAK,CAACU,GADN;AAETC,QAAAA,uBAAuB,EAAE;AACvBT,UAAAA,aAAa,EAAE;AACbU,YAAAA,MAAM,EAAE,IADK;AAEbT,YAAAA,MAAM,EAAEI;AAFK;AADQ;AAFhB;AADO,KAAD,CAAnB;AAWD,GAfD;;AAiBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,IAAI,CAAC,wBAAD,CAAX,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAAC,gBAAD,CAAT,CADF,EAEE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,IAAI,CAAC,wBAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAES,QADZ;AAEE,IAAA,gBAAgB,EAAEC,iBAFpB;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,QAAQ,EAAE,KAJZ;AAKE,IAAA,QAAQ,EAAE,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IAAI,CAAC,6EAAD,CADP,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAAC,mGAAD,CADP,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEGA,IAAI,CAAC,mHAAD,CAFP,CAPF,CAVF,CAJF,CADF;AA8BD,CAxDD;;AA0DA,eAAeC,iBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport JDLabel from \"../../../../atoms/label/JDLabel\";\r\nimport JDrange from \"../../../../atoms/forms/range/Range\";\r\nimport { MutationFn } from \"react-apollo\";\r\nimport {\r\n  updateHouseConfig,\r\n  updateHouseConfigVariables\r\n} from \"../../../../types/api\";\r\nimport { IContext } from \"../../../MiddleServerRouter\";\r\nimport { LANG } from \"../../../../hooks/hook\";\r\n\r\ninterface IProps {\r\n  updateHouseConfigMu: MutationFn<\r\n    updateHouseConfig,\r\n    updateHouseConfigVariables\r\n  >;\r\n  context: IContext;\r\n}\r\n\r\nconst SystemDescription: React.FC<IProps> = ({\r\n  updateHouseConfigMu,\r\n  context\r\n}) => {\r\n  const { house } = context;\r\n  const [range, setRange] = useState<any>(\r\n    house.houseConfig.pollingPeriod ? house.houseConfig.pollingPeriod.period : 0\r\n  );\r\n\r\n  const handleRangeChange = (value: any) => {\r\n    if (typeof value !== \"number\") return;\r\n    setRange(value);\r\n\r\n    updateHouseConfigMu({\r\n      variables: {\r\n        houseId: house._id,\r\n        UpdateHouseConfigParams: {\r\n          pollingPeriod: {\r\n            enable: true,\r\n            period: value\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"docs-section__box\">\r\n        <span>{LANG(\"default_system_setting\")}</span>\r\n      </div>\r\n      <div>\r\n        <h6>{LANG(\"polling_period\")}</h6>\r\n        <JDLabel txt={LANG(\"polling_period_setting\")} />\r\n        <JDrange\r\n          onChange={setRange}\r\n          onChangeComplete={handleRangeChange}\r\n          value={range}\r\n          minValue={10000}\r\n          maxValue={180000}\r\n        />\r\n        <p>\r\n          <div className=\"\">\r\n            {LANG(\"server_will_check_if_there_is_a_new_reservation_once_every_set_number_by_ms\")}\r\n          </div>\r\n          <div>\r\n            {LANG(\"if_there_is_a_new_reservation_the_new_reservation_will_be_displayed_without_refreshing_the_screen\")}\r\n          </div>\r\n          <div>\r\n            *\r\n            {LANG(\"if_you_have_problems_with_computer_performance_and_frequent_screen_updates_try_setting_a_higher_pooling_frequency\")}\r\n          </div>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemDescription;\r\n"]},"metadata":{},"sourceType":"module"}