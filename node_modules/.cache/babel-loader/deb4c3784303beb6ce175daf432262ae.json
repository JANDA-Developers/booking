{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\outPages\\\\HM\\\\component\\\\HMmenu.tsx\";\nimport React, { Fragment, useEffect } from \"react\";\nimport ImageUploader from \"../../../../atoms/imageUploader/ImageUploader\";\nimport { useImageUploader, LANG } from \"../../../../hooks/hook\";\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\nimport { DEFAULT_FILE } from \"../../../../types/defaults\";\nimport JDVideo from \"../../../../atoms/video/Video\";\n\nvar HMmenu = function HMmenu(_ref) {\n  var onChangeFile = _ref.onChangeFile,\n      menuData = _ref.menuData,\n      currentLang = _ref.currentLang,\n      host = _ref.host,\n      menu = _ref.menu;\n\n  //   onChangeFile;\n  var sharedPart = function sharedPart() {\n    return React.createElement(\"div\", {\n      className: \"HM__menuTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, menu.name[currentLang]);\n  };\n\n  var imageUploaderHook = useImageUploader(menu.img);\n  useEffect(function () {\n    onChangeFile(imageUploaderHook.file);\n  }, [imageUploaderHook.file]);\n  var file = imageUploaderHook.file;\n\n  var _ref2 = file || DEFAULT_FILE,\n      url = _ref2.url,\n      mimeType = _ref2.mimeType;\n\n  var isVideo = mimeType.includes(\"video\");\n  var isImg = mimeType.includes(\"image\");\n  return !host ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, sharedPart(), isVideo ? React.createElement(JDVideo, {\n    width: \"100%\",\n    height: \"auto\",\n    controls: true,\n    url: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: imageUploaderHook.file ? imageUploaderHook.file.url : \"\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, menu.content[currentLang])) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, sharedPart(), React.createElement(ImageUploader, Object.assign({\n    autoHeight: true,\n    coverImg: true,\n    minHeight: \"150px\"\n  }, imageUploaderHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(InputText, {\n    onChange: function onChange(value) {\n      menu.content[currentLang] = value;\n      host.setMenuData(_toConsumableArray(menuData));\n    },\n    autoHeight: true,\n    value: menu.content[currentLang],\n    placeholder: LANG(\"write_a_description_of_the_menu\"),\n    textarea: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nexport default HMmenu;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/outPages/HM/component/HMmenu.tsx"],"names":["React","Fragment","useEffect","ImageUploader","useImageUploader","LANG","InputText","DEFAULT_FILE","JDVideo","HMmenu","onChangeFile","menuData","currentLang","host","menu","sharedPart","name","imageUploaderHook","img","file","url","mimeType","isVideo","includes","isImg","content","value","setMenuData"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from \"react\";\r\nimport ImageUploader from \"../../../../atoms/imageUploader/ImageUploader\";\r\nimport {\r\n  useImageUploader,\r\n  IuseImageUploader,\r\n  LANG\r\n} from \"../../../../hooks/hook\";\r\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\r\nimport {getHM_GetHM_HM_menus} from \"../../../../types/api\";\r\nimport {Language} from \"../../../../types/enum\";\r\nimport {DEFAULT_FILE} from \"../../../../types/defaults\";\r\nimport JDVideo from \"../../../../atoms/video/Video\";\r\nimport {JdFile} from \"../../../../types/interface\";\r\n\r\ninterface IProps {\r\n  onChangeFile: (file?: JdFile | null) => void;\r\n  host?: {\r\n    setEnableLngList: any;\r\n    setMenuData: React.Dispatch<React.SetStateAction<getHM_GetHM_HM_menus[]>>;\r\n    bgImageHook: IuseImageUploader;\r\n    setTitle: React.Dispatch<string>;\r\n  };\r\n  menu: getHM_GetHM_HM_menus;\r\n  menuData: any;\r\n  currentLang: Language;\r\n}\r\n\r\nconst HMmenu: React.FC<IProps> = ({\r\n  onChangeFile,\r\n  menuData,\r\n  currentLang,\r\n  host,\r\n  menu\r\n}) => {\r\n  //   onChangeFile;\r\n  const sharedPart = () => (\r\n    <div className=\"HM__menuTitle\">{menu.name[currentLang]}</div>\r\n  );\r\n  const imageUploaderHook = useImageUploader(menu.img);\r\n\r\n  useEffect(() => {\r\n    onChangeFile(imageUploaderHook.file);\r\n  }, [imageUploaderHook.file]);\r\n\r\n  const {file} = imageUploaderHook;\r\n  const {url, mimeType} = file || DEFAULT_FILE;\r\n  const isVideo = mimeType.includes(\"video\");\r\n  const isImg = mimeType.includes(\"image\");\r\n\r\n  return !host ? (\r\n    <Fragment>\r\n      {sharedPart()}\r\n      {isVideo ? (\r\n        <JDVideo width=\"100%\" height=\"auto\" controls url={url} />\r\n      ) : (\r\n        <img\r\n          src={imageUploaderHook.file ? imageUploaderHook.file.url : \"\"}\r\n          alt=\"\"\r\n        />\r\n      )}\r\n      <p>{menu.content[currentLang]}</p>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      {sharedPart()}\r\n      <ImageUploader\r\n        autoHeight\r\n        coverImg\r\n        minHeight=\"150px\"\r\n        {...imageUploaderHook}\r\n      />\r\n      <InputText\r\n        onChange={value => {\r\n          menu.content[currentLang] = value;\r\n          host.setMenuData([...menuData]);\r\n        }}\r\n        autoHeight\r\n        value={menu.content[currentLang]}\r\n        placeholder={LANG(\"write_a_description_of_the_menu\")}\r\n        textarea\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HMmenu;\r\n"]},"metadata":{},"sourceType":"module"}