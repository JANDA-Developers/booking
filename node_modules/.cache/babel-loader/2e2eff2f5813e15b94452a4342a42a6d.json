{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\forms\\\\selectBox\\\\SelectBox.tsx\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport \"./SelectBox.scss\";\nimport classNames from \"classnames\";\nimport { LANG } from \"../../../hooks/hook\";\nexport var SelectBoxSize; // Value === selectedOption\n// defaultValue Îäî Í∑∏ Í∞íÏù¥ Î∞îÎÄåÏñ¥ÎèÑ ÏóÖÎç∞Ïù¥Ìä∏ ÎêòÏßÄÏïäÏùÑÍ≤ÉÏûÑ\n\n(function (SelectBoxSize) {\n  SelectBoxSize[\"TWO\"] = \"4rem\";\n  SelectBoxSize[\"FOUR\"] = \"6rem\";\n  SelectBoxSize[\"SIX\"] = \"9rem\";\n  SelectBoxSize[\"FIVE\"] = \"11rem\";\n})(SelectBoxSize || (SelectBoxSize = {}));\n\nvar JDselect = function JDselect(_ref) {\n  var label = _ref.label,\n      disabled = _ref.disabled,\n      selectedOption = _ref.selectedOption,\n      onChange = _ref.onChange,\n      _ref$noOptionsMessage = _ref.noOptionsMessage,\n      _noOptionsMessage = _ref$noOptionsMessage === void 0 ? \"--\" : _ref$noOptionsMessage,\n      rightLabel = _ref.rightLabel,\n      options = _ref.options,\n      mode = _ref.mode,\n      className = _ref.className,\n      size = _ref.size,\n      isOpen = _ref.isOpen,\n      defaultValue = _ref.defaultValue,\n      placeholder = _ref.placeholder,\n      textOverflow = _ref.textOverflow,\n      background = _ref.background,\n      menuItemCenterlize = _ref.menuItemCenterlize,\n      menuCanOverflow = _ref.menuCanOverflow,\n      displayArrow = _ref.displayArrow,\n      borderColor = _ref.borderColor,\n      autoSize = _ref.autoSize,\n      props = _objectWithoutProperties(_ref, [\"label\", \"disabled\", \"selectedOption\", \"onChange\", \"noOptionsMessage\", \"rightLabel\", \"options\", \"mode\", \"className\", \"size\", \"isOpen\", \"defaultValue\", \"placeholder\", \"textOverflow\", \"background\", \"menuItemCenterlize\", \"menuCanOverflow\", \"displayArrow\", \"borderColor\", \"autoSize\"]);\n\n  // üëø Ïù¥Í±∞ „ÖáefaultValueÎûë selectedOptionÏù¥Îûë ÎßéÏù¥ ÌñáÍ∞àÎ¶º„Ö†„Ö†\n  // placeHolder Í∞Ä Î≥¥ÏùºÎ†§Î©¥ value Îäî undefined Ïó¨Ïïº Ìï©ÎãàÎã§.\n  var validSelectedOption;\n  if (selectedOption && selectedOption.value === undefined) validSelectedOption = undefined;else validSelectedOption = selectedOption;\n\n  var handleChange = function handleChange(selectOption) {\n    onChange && onChange(selectOption);\n  };\n\n  var classes = classNames(\"JDselect\", className, {\n    \"JDselect--unDisplayArrow\": displayArrow === false,\n    \"JDselect--disabled\": disabled,\n    \"JDselect--small\": mode === \"small\",\n    \"JDselect--bg\": background === \"white\",\n    \"JDselect--border-primary\": borderColor === \"primary\",\n    \"JDselect--textOverflowVisible\": textOverflow === \"visible\",\n    \"JDselect--menuCanOverflow\": menuCanOverflow,\n    \"JDselect--autoSize\": autoSize,\n    \"JDselect--menuItem-centerlize\": menuItemCenterlize\n  });\n  var selectStyle = {\n    width: size\n  };\n  var deafultPlaceHolder = LANG(\"select\");\n  return React.createElement(\"div\", {\n    style: selectStyle,\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, label !== \"\" ? React.createElement(\"span\", {\n    className: \"JDselect__label JDselect__label--top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, label) : null, React.createElement(Select, Object.assign({}, props, {\n    options: options,\n    value: validSelectedOption,\n    defaultValue: defaultValue,\n    onChange: handleChange,\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    isDisabled: disabled,\n    noOptionsMessage: function noOptionsMessage() {\n      return _noOptionsMessage;\n    },\n    placeholder: placeholder || deafultPlaceHolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), rightLabel && React.createElement(\"span\", {\n    className: \"JDselect__label JDselect__label--right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, rightLabel));\n};\n\nJDselect.defaultProps = {\n  disabled: false,\n  label: \"\",\n  onChange: function onChange() {},\n  selectedOption: undefined,\n  props: {}\n};\nexport default JDselect;","map":{"version":3,"sources":["C:/Users/ÍπÄÎØºÏû¨/Desktop/projects/jd-api-server-client/src/atoms/forms/selectBox/SelectBox.tsx"],"names":["React","Select","classNames","LANG","SelectBoxSize","JDselect","label","disabled","selectedOption","onChange","noOptionsMessage","rightLabel","options","mode","className","size","isOpen","defaultValue","placeholder","textOverflow","background","menuItemCenterlize","menuCanOverflow","displayArrow","borderColor","autoSize","props","validSelectedOption","value","undefined","handleChange","selectOption","classes","selectStyle","width","deafultPlaceHolder","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,kBAAP;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AAGA,SAAQC,IAAR,QAAmB,qBAAnB;AAOA,WAAYC,aAAZ,C,CAOA;AACA;;WARYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a;;AA8BZ,IAAMC,QAA2B,GAAG,SAA9BA,QAA8B,OAuB9B;AAAA,MAtBJC,KAsBI,QAtBJA,KAsBI;AAAA,MArBJC,QAqBI,QArBJA,QAqBI;AAAA,MApBJC,cAoBI,QApBJA,cAoBI;AAAA,MAnBJC,QAmBI,QAnBJA,QAmBI;AAAA,mCAlBJC,gBAkBI;AAAA,MAlBJA,iBAkBI,sCAlBe,IAkBf;AAAA,MAjBJC,UAiBI,QAjBJA,UAiBI;AAAA,MAhBJC,OAgBI,QAhBJA,OAgBI;AAAA,MAfJC,IAeI,QAfJA,IAeI;AAAA,MAdJC,SAcI,QAdJA,SAcI;AAAA,MAbJC,IAaI,QAbJA,IAaI;AAAA,MAZJC,MAYI,QAZJA,MAYI;AAAA,MAXJC,YAWI,QAXJA,YAWI;AAAA,MAVJC,WAUI,QAVJA,WAUI;AAAA,MATJC,YASI,QATJA,YASI;AAAA,MARJC,UAQI,QARJA,UAQI;AAAA,MAPJC,kBAOI,QAPJA,kBAOI;AAAA,MANJC,eAMI,QANJA,eAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MADDC,KACC;;AACJ;AACA;AACA,MAAIC,mBAAJ;AACA,MAAInB,cAAc,IAAIA,cAAc,CAACoB,KAAf,KAAyBC,SAA/C,EACEF,mBAAmB,GAAGE,SAAtB,CADF,KAEKF,mBAAmB,GAAGnB,cAAtB;;AAEL,MAAMsB,YAAY,GAAG,SAAfA,YAAe,CAACC,YAAD,EAAuB;AAC1CtB,IAAAA,QAAQ,IAAIA,QAAQ,CAACsB,YAAD,CAApB;AACD,GAFD;;AAIA,MAAMC,OAAO,GAAG9B,UAAU,CAAC,UAAD,EAAaY,SAAb,EAAwB;AAChD,gCAA4BS,YAAY,KAAK,KADG;AAEhD,0BAAsBhB,QAF0B;AAGhD,uBAAmBM,IAAI,KAAK,OAHoB;AAIhD,oBAAgBO,UAAU,KAAK,OAJiB;AAKhD,gCAA4BI,WAAW,KAAK,SALI;AAMhD,qCAAiCL,YAAY,KAAK,SANF;AAOhD,iCAA6BG,eAPmB;AAQhD,0BAAsBG,QAR0B;AAShD,qCAAiCJ;AATe,GAAxB,CAA1B;AAYA,MAAMY,WAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAEnB;AADgB,GAAzB;AAIA,MAAMoB,kBAAkB,GAAGhC,IAAI,CAAC,QAAD,CAA/B;AAEA,SACE;AAAK,IAAA,KAAK,EAAE8B,WAAZ;AAAyB,IAAA,SAAS,EAAED,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,KAAK,KAAK,EAAV,GACC;AAAM,IAAA,SAAS,EAAC,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDA,KAAxD,CADD,GAEG,IAHN,EAIE,oBAAC,MAAD,oBACMoB,KADN;AAEE,IAAA,OAAO,EAAEd,OAFX;AAGE,IAAA,KAAK,EAAEe,mBAHT;AAIE,IAAA,YAAY,EAAEV,YAJhB;AAKE,IAAA,QAAQ,EAAEa,YALZ;AAME,IAAA,SAAS,EAAC,wBANZ;AAOE,IAAA,eAAe,EAAC,cAPlB;AAQE,IAAA,UAAU,EAAEvB,QARd;AASE,IAAA,gBAAgB,EAAE;AAAA,aAAMG,iBAAN;AAAA,KATpB;AAUE,IAAA,WAAW,EAAEQ,WAAW,IAAIiB,kBAV9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,EAgBGxB,UAAU,IACT;AAAM,IAAA,SAAS,EAAC,wCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,UADH,CAjBJ,CADF;AAwBD,CA7ED;;AA+EAN,QAAQ,CAAC+B,YAAT,GAAwB;AACtB7B,EAAAA,QAAQ,EAAE,KADY;AAEtBD,EAAAA,KAAK,EAAE,EAFe;AAGtBG,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAHI;AAItBD,EAAAA,cAAc,EAAEqB,SAJM;AAKtBH,EAAAA,KAAK,EAAE;AALe,CAAxB;AAQA,eAAerB,QAAf","sourcesContent":["import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"./SelectBox.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {SelectComponentsProps} from \"react-select/lib/Select\";\r\nimport {isEmpty} from \"../../../utils/utils\";\r\nimport {LANG} from \"../../../hooks/hook\";\r\n\r\nexport interface IselectedOption<T = any> {\r\n  label: string;\r\n  value: T;\r\n}\r\n\r\nexport enum SelectBoxSize {\r\n  TWO = \"4rem\",\r\n  FOUR = \"6rem\",\r\n  SIX = \"9rem\",\r\n  FIVE = \"11rem\"\r\n}\r\n\r\n// Value === selectedOption\r\n// defaultValue Îäî Í∑∏ Í∞íÏù¥ Î∞îÎÄåÏñ¥ÎèÑ ÏóÖÎç∞Ïù¥Ìä∏ ÎêòÏßÄÏïäÏùÑÍ≤ÉÏûÑ\r\ninterface Iprops extends SelectComponentsProps {\r\n  label?: string | JSX.Element;\r\n  disabled?: boolean;\r\n  selectedOption?: IselectedOption | null;\r\n  options?: IselectedOption[];\r\n  onChange?(foo: IselectedOption): void;\r\n  className?: string;\r\n  rightLabel?: string;\r\n  props?: any;\r\n  defaultValue?: IselectedOption | null;\r\n  isOpen?: boolean;\r\n  menuCanOverflow?: boolean;\r\n  textOverflow?: \"visible\" | \"hidden\";\r\n  mode?: \"small\";\r\n  size?: SelectBoxSize;\r\n  background?: \"white\";\r\n  borderColor?: \"primary\";\r\n  displayArrow?: boolean;\r\n  menuItemCenterlize?: boolean;\r\n}\r\n\r\nconst JDselect: React.SFC<Iprops> = ({\r\n  label,\r\n  disabled,\r\n  selectedOption,\r\n  onChange,\r\n  noOptionsMessage = \"--\",\r\n  rightLabel,\r\n  options,\r\n  mode,\r\n  className,\r\n  size,\r\n  isOpen,\r\n  defaultValue,\r\n  placeholder,\r\n  textOverflow,\r\n  background,\r\n  menuItemCenterlize,\r\n  menuCanOverflow,\r\n  displayArrow,\r\n  borderColor,\r\n  autoSize,\r\n  // eslint-disable-next-line no-unused-vars\r\n  ...props\r\n}) => {\r\n  // üëø Ïù¥Í±∞ „ÖáefaultValueÎûë selectedOptionÏù¥Îûë ÎßéÏù¥ ÌñáÍ∞àÎ¶º„Ö†„Ö†\r\n  // placeHolder Í∞Ä Î≥¥ÏùºÎ†§Î©¥ value Îäî undefined Ïó¨Ïïº Ìï©ÎãàÎã§.\r\n  let validSelectedOption;\r\n  if (selectedOption && selectedOption.value === undefined)\r\n    validSelectedOption = undefined;\r\n  else validSelectedOption = selectedOption;\r\n\r\n  const handleChange = (selectOption: any) => {\r\n    onChange && onChange(selectOption);\r\n  };\r\n\r\n  const classes = classNames(\"JDselect\", className, {\r\n    \"JDselect--unDisplayArrow\": displayArrow === false,\r\n    \"JDselect--disabled\": disabled,\r\n    \"JDselect--small\": mode === \"small\",\r\n    \"JDselect--bg\": background === \"white\",\r\n    \"JDselect--border-primary\": borderColor === \"primary\",\r\n    \"JDselect--textOverflowVisible\": textOverflow === \"visible\",\r\n    \"JDselect--menuCanOverflow\": menuCanOverflow,\r\n    \"JDselect--autoSize\": autoSize,\r\n    \"JDselect--menuItem-centerlize\": menuItemCenterlize\r\n  });\r\n\r\n  const selectStyle: any = {\r\n    width: size\r\n  };\r\n\r\n  const deafultPlaceHolder = LANG(\"select\");\r\n\r\n  return (\r\n    <div style={selectStyle} className={classes}>\r\n      {label !== \"\" ? (\r\n        <span className=\"JDselect__label JDselect__label--top\">{label}</span>\r\n      ) : null}\r\n      <Select\r\n        {...props}\r\n        options={options}\r\n        value={validSelectedOption}\r\n        defaultValue={defaultValue}\r\n        onChange={handleChange}\r\n        className=\"react-select-container\"\r\n        classNamePrefix=\"react-select\"\r\n        isDisabled={disabled}\r\n        noOptionsMessage={() => noOptionsMessage}\r\n        placeholder={placeholder || deafultPlaceHolder}\r\n      />\r\n      {rightLabel && (\r\n        <span className=\"JDselect__label JDselect__label--right\">\r\n          {rightLabel}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nJDselect.defaultProps = {\r\n  disabled: false,\r\n  label: \"\",\r\n  onChange: () => {},\r\n  selectedOption: undefined,\r\n  props: {}\r\n};\r\n\r\nexport default JDselect;\r\n"]},"metadata":{},"sourceType":"module"}