{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\roomConfig\\\\RoomConfig.tsx\";\nimport React, { Fragment } from \"react\";\nimport \"moment/locale/ko\";\nimport ErrProtecter from \"../../../utils/errProtect\";\nimport Button from \"../../../atoms/button/Button\";\nimport \"./RoomConfig.scss\";\nimport Preloader from \"../../../atoms/preloader/Preloader\";\nimport JDIcon from \"../../../atoms/icons/Icons\";\nimport { useModal, LANG } from \"../../../hooks/hook\";\nimport RoomTypeModalWrap from \"./components/RoomTypeModalWrap\";\nimport RoomModalWrap from \"./components/RoomModalWrap\";\nimport Card from \"../../../atoms/cards/Card\";\nimport JDbox from \"../../../atoms/box/JDbox\";\nimport Help from \"../../../atoms/Help/Help\";\nimport RoomTypeInfo from \"../../../components/roomTypeInfo/RoomTypeInfo\";\n\n// üëø Ïó¨Í∏∞ Î°úÎî©Ï≤òÎ¶¨Î•º Ìï¥Í≤∞Ìï† Î∞©Î≤ïÏù¥ ÏïàÎ≥¥Ïù∏Îã§.\n//  ÏïÑÎßàÎèÑ DragListÏùò ÏûêÏ≤¥Î¨∏Ï†úÏù∏Í≤É Í∞ôÎã§.\nvar RoomConfigNew = function RoomConfigNew(_ref) {\n  var context = _ref.context,\n      roomTypesData = _ref.roomTypesData,\n      refetchQueries = _ref.refetchQueries,\n      loading = _ref.loading;\n  var roomTypeModalHook = useModal(false, {});\n  var roomModalHook = useModal(false, {}); // ÏÉÅÏûê ÌòïÌÉúÏùò [Î∞©] Ï∂úÎ†•\n\n  var getRoomBox = function getRoomBox(recode, room) {\n    return React.createElement(JDbox, {\n      className: \"roomConfig__roomBox\",\n      align: \"flexVcenter\",\n      clickable: true,\n      onClick: function onClick() {\n        roomModalHook.openModal({\n          roomTypeId: recode._id,\n          roomId: room._id\n        });\n      },\n      textAlign: \"center\",\n      key: room._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"roomConfig__roomTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, room.name));\n  };\n\n  return React.createElement(\"div\", {\n    id: \"RoomConfig\",\n    className: \"roomConfig container container--full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, LANG(\"room_setting\")), React.createElement(Button, {\n    onClick: function onClick() {\n      roomTypeModalHook.openModal({\n        mode: \"Create\"\n      });\n    },\n    thema: \"primary\",\n    label: LANG(\"add_roomType\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Preloader, {\n    size: \"large\",\n    noAnimation: true,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), roomTypesData.length === 0 && !loading && React.createElement(\"h4\", {\n    className: \"JDtextColor--placeHolder JDmargin-bottom0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, LANG(\"roomType_dose_not_exsist\")), React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, roomTypesData.map(function (roomType) {\n    return React.createElement(Card, {\n      key: roomType._id,\n      className: \"JDstandard-space0 roomConfig__roomType roomConfig__roomType\".concat(roomType._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"roomConfig__roomCardWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"roomConfig__roomType_titleSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"roomConfig__roomType_titleAndIcons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"JDstandard-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, roomType.name), React.createElement(Help, {\n      icon: \"info\",\n      tooltip: React.createElement(RoomTypeInfo, {\n        roomType: roomType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: function onClick() {\n        roomTypeModalHook.openModal({\n          roomTypeId: roomType._id,\n          mode: \"Modify\"\n        });\n      },\n      mode: \"border\",\n      label: LANG(\"do_modify\"),\n      icon: \"edit\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"roomConfig__roomsWrapWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, roomType.rooms.map(function (room) {\n      var RoomBox = getRoomBox(roomType, room);\n      return React.createElement(Fragment, {\n        key: room._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, RoomBox);\n    }), React.createElement(JDbox, {\n      clickable: true,\n      textAlign: \"center\",\n      mode: \"dashBorder\",\n      onClick: function onClick(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        roomModalHook.openModal({\n          isAddMode: true,\n          roomTypeId: roomType._id\n        });\n      },\n      align: \"flexVcenter\",\n      className: \"roomConfig__addRoomBox\",\n      key: \"add\".concat(roomType._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"roomConfig__roomTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"JDstandard-small-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, LANG(\"add_room\")), React.createElement(JDIcon, {\n      icon: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))))));\n  }))), React.createElement(RoomTypeModalWrap, {\n    context: context,\n    modalHook: roomTypeModalHook,\n    key: roomTypeModalHook.info.roomTypeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(RoomModalWrap, {\n    refetchQueries: refetchQueries,\n    context: context,\n    key: roomModalHook.info.roomId,\n    roomTypeData: roomTypesData,\n    modalHook: roomModalHook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }));\n};\n\nexport default ErrProtecter(RoomConfigNew);","map":{"version":3,"sources":["C:/Users/ÍπÄÎØºÏû¨/Desktop/projects/jd-api-server-client/src/pages/middleServer/roomConfig/RoomConfig.tsx"],"names":["React","Fragment","ErrProtecter","Button","Preloader","JDIcon","useModal","LANG","RoomTypeModalWrap","RoomModalWrap","Card","JDbox","Help","RoomTypeInfo","RoomConfigNew","context","roomTypesData","refetchQueries","loading","roomTypeModalHook","roomModalHook","getRoomBox","recode","room","openModal","roomTypeId","_id","roomId","name","mode","length","map","roomType","rooms","RoomBox","e","preventDefault","stopPropagation","isAddMode","info"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\r\nimport \"moment/locale/ko\";\r\nimport ErrProtecter from \"../../../utils/errProtect\";\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport \"./RoomConfig.scss\";\r\nimport {\r\n  getAllRoomType_GetAllRoomType_roomTypes as IRoomType,\r\n  getAllRoomType_GetAllRoomType_roomTypes,\r\n  changeIndexForRoomType,\r\n  changeIndexForRoomTypeVariables,\r\n  getAllRoomType_GetAllRoomType_roomTypes_rooms\r\n} from \"../../../types/api\";\r\nimport Preloader from \"../../../atoms/preloader/Preloader\";\r\nimport JDIcon from \"../../../atoms/icons/Icons\";\r\nimport {useModal, LANG} from \"../../../hooks/hook\";\r\nimport RoomTypeModalWrap, {\r\n  IRoomTypeModalInfo\r\n} from \"./components/RoomTypeModalWrap\";\r\nimport RoomModalWrap, {IRoomModalInfo} from \"./components/RoomModalWrap\";\r\nimport Card from \"../../../atoms/cards/Card\";\r\nimport JDbox from \"../../../atoms/box/JDbox\";\r\nimport {MutationFn} from \"react-apollo\";\r\nimport {IContext} from \"../../MiddleServerRouter\";\r\nimport Help from \"../../../atoms/Help/Help\";\r\nimport RoomTypeInfo from \"../../../components/roomTypeInfo/RoomTypeInfo\";\r\nimport {PureQueryOptions} from \"apollo-client\";\r\n\r\ninterface IProps {\r\n  items?: any;\r\n  defaultProps: any;\r\n  setConfigMode: any;\r\n  context: IContext;\r\n  loading?: boolean;\r\n  changeIndexForRoomTypeMu: MutationFn<\r\n    changeIndexForRoomType,\r\n    changeIndexForRoomTypeVariables\r\n  >;\r\n  refetchQueries: (PureQueryOptions | string)[];\r\n  roomTypesData: getAllRoomType_GetAllRoomType_roomTypes[];\r\n}\r\n\r\n// üëø Ïó¨Í∏∞ Î°úÎî©Ï≤òÎ¶¨Î•º Ìï¥Í≤∞Ìï† Î∞©Î≤ïÏù¥ ÏïàÎ≥¥Ïù∏Îã§.\r\n//  ÏïÑÎßàÎèÑ DragListÏùò ÏûêÏ≤¥Î¨∏Ï†úÏù∏Í≤É Í∞ôÎã§.\r\nconst RoomConfigNew: React.FC<IProps> = ({\r\n  context,\r\n  roomTypesData,\r\n  refetchQueries,\r\n  loading\r\n}) => {\r\n  const roomTypeModalHook = useModal<IRoomTypeModalInfo>(false, {});\r\n  const roomModalHook = useModal<IRoomModalInfo>(false, {});\r\n\r\n  // ÏÉÅÏûê ÌòïÌÉúÏùò [Î∞©] Ï∂úÎ†•\r\n  const getRoomBox = (\r\n    recode: IRoomType,\r\n    room: getAllRoomType_GetAllRoomType_roomTypes_rooms\r\n  ) => (\r\n    <JDbox\r\n      className=\"roomConfig__roomBox\"\r\n      align=\"flexVcenter\"\r\n      clickable\r\n      onClick={() => {\r\n        roomModalHook.openModal({\r\n          roomTypeId: recode._id,\r\n          roomId: room._id\r\n        });\r\n      }}\r\n      textAlign=\"center\"\r\n      key={room._id}\r\n    >\r\n      <h6 className=\"roomConfig__roomTitle\">{room.name}</h6>\r\n    </JDbox>\r\n  );\r\n\r\n  return (\r\n    <div id=\"RoomConfig\" className=\"roomConfig container container--full\">\r\n      <div className=\"docs-section\">\r\n        <h3>{LANG(\"room_setting\")}</h3>\r\n        <Button\r\n          onClick={() => {\r\n            roomTypeModalHook.openModal({\r\n              mode: \"Create\"\r\n            });\r\n          }}\r\n          thema=\"primary\"\r\n          label={LANG(\"add_roomType\")}\r\n        />\r\n        <div>\r\n          <Preloader size=\"large\" noAnimation loading={loading} />\r\n        </div>\r\n        {/* Î∞©ÌÉÄÏûÖÏù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§. */}\r\n        {roomTypesData.length === 0 && !loading && (\r\n          <h4 className=\"JDtextColor--placeHolder JDmargin-bottom0\">\r\n            {LANG(\"roomType_dose_not_exsist\")}\r\n          </h4>\r\n        )}\r\n        <Fragment>\r\n          {/* Î∞©ÌÉÄÏûÖ Ïπ¥Îìú Ï∂úÎ†• */}\r\n          {roomTypesData.map(roomType => (\r\n            <Card\r\n              key={roomType._id}\r\n              className={`JDstandard-space0 roomConfig__roomType roomConfig__roomType${roomType._id}`}\r\n            >\r\n              <div className=\"roomConfig__roomCardWrap\">\r\n                <div className=\"roomConfig__roomType_titleSection\">\r\n                  <div className=\"roomConfig__roomType_titleAndIcons\">\r\n                    <h5 className=\"JDstandard-space\">{roomType.name}</h5>\r\n                    <Help\r\n                      icon=\"info\"\r\n                      tooltip={<RoomTypeInfo roomType={roomType} />}\r\n                    />\r\n                  </div>\r\n                  <Button\r\n                    onClick={() => {\r\n                      roomTypeModalHook.openModal({\r\n                        roomTypeId: roomType._id,\r\n                        mode: \"Modify\"\r\n                      });\r\n                    }}\r\n                    mode=\"border\"\r\n                    label={LANG(\"do_modify\")}\r\n                    icon={\"edit\"}\r\n                    size=\"small\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"roomConfig__roomsWrapWrap\">\r\n                  {roomType.rooms.map(room => {\r\n                    const RoomBox = getRoomBox(roomType, room);\r\n                    return <Fragment key={room._id}>{RoomBox}</Fragment>;\r\n                  })}\r\n                  {/* add */}\r\n                  <JDbox\r\n                    clickable\r\n                    textAlign=\"center\"\r\n                    mode=\"dashBorder\"\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n                      e.stopPropagation();\r\n                      roomModalHook.openModal({\r\n                        isAddMode: true,\r\n                        roomTypeId: roomType._id\r\n                      });\r\n                    }}\r\n                    align=\"flexVcenter\"\r\n                    className=\"roomConfig__addRoomBox\"\r\n                    key={`add${roomType._id}`}\r\n                  >\r\n                    <h6 className=\"roomConfig__roomTitle\">\r\n                      <span className=\"JDstandard-small-space\">\r\n                        {LANG(\"add_room\")}\r\n                      </span>\r\n                      <JDIcon icon=\"edit\" />\r\n                    </h6>\r\n                  </JDbox>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          ))}\r\n        </Fragment>\r\n      </div>\r\n      <RoomTypeModalWrap\r\n        context={context}\r\n        modalHook={roomTypeModalHook}\r\n        key={roomTypeModalHook.info.roomTypeId}\r\n      />\r\n      <RoomModalWrap\r\n        refetchQueries={refetchQueries}\r\n        context={context}\r\n        key={roomModalHook.info.roomId}\r\n        roomTypeData={roomTypesData}\r\n        modalHook={roomModalHook}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrProtecter(RoomConfigNew);\r\n"]},"metadata":{},"sourceType":"module"}