{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\noti\\\\component\\\\NotiLi.tsx\";\nimport React from \"react\";\nimport { NotiType, NotiLevel } from \"../../../types/enum\";\nimport JDIcon, { IconSize } from \"../../../atoms/icons/Icons\";\nimport classNames from \"classnames\";\nimport JDbadge from \"../../../atoms/badge/Badge\";\nimport CircleIcon from \"../../../atoms/circleIcon/CircleIcon\";\nimport Tooltip from \"../../../atoms/tooltip/Tooltip\";\nimport moment from \"moment\";\nimport { LANG } from \"../../../hooks/hook\";\n\nvar NotiLi = function NotiLi(_ref) {\n  var noti = _ref.noti;\n  var classes = classNames(\"notiLi\", undefined, {\n    \"notiLi--confirmed\": noti.isConfirm\n  });\n\n  var SharedNoti = function SharedNoti() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"notiLi__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"notiLi__title_txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, noti.title), React.createElement(\"div\", {\n      className: \"notiLi__badgeWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, noti.notiLevel === NotiLevel.WARN && React.createElement(JDbadge, {\n      thema: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, LANG(\"caution\")), !noti.isConfirm && React.createElement(JDbadge, {\n      thema: \"new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, LANG(\"new\"))))), React.createElement(\"span\", {\n      className: \"notiLi__msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, noti.msg));\n  };\n\n  var sharedSymbolProp = {\n    className: \"notiLi__symbol\",\n    size: IconSize.MEDEIUM_SMALL\n  };\n  return React.createElement(\"li\", {\n    onClick: function onClick() {},\n    \"data-tip\": moment(noti.createdAt).format(\"MM\".concat(LANG(\"month\"), \" DD\").concat(LANG(\"date\"))),\n    \"data-for\": \"notiCreateDateToolTip\",\n    className: \"notiLi\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, function () {\n    switch (noti.notiType) {\n      case NotiType.TO_ALL:\n        return React.createElement(\"div\", {\n          className: \"notiLi__contents\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(CircleIcon, {\n          thema: \"border\",\n          className: \"notiLi__symbolWrap\",\n          size: sharedSymbolProp.size,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(JDIcon, Object.assign({\n          color: \"primary\"\n        }, sharedSymbolProp, {\n          icon: \"notify\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }))), React.createElement(SharedNoti, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n\n      case NotiType.ELSE:\n        return React.createElement(\"div\", {\n          className: \"notiLi__contents\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(CircleIcon, {\n          className: \"notiLi__symbolWrap\",\n          thema: \"border\",\n          size: sharedSymbolProp.size,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(JDIcon, Object.assign({}, sharedSymbolProp, {\n          icon: \"notify\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }))), React.createElement(SharedNoti, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }));\n      // 노티가 익스파이어 될떄\n\n      default:\n        NotiType.PRODUCT_EXPIRE;\n        return React.createElement(\"div\", {\n          className: \"notiLi__contents\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(CircleIcon, {\n          className: \"notiLi__symbolWrap\",\n          thema: \"border\",\n          size: sharedSymbolProp.size,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(JDIcon, Object.assign({\n          color: \"error\"\n        }, sharedSymbolProp, {\n          icon: \"notify\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }))), React.createElement(SharedNoti, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }));\n    }\n  }(), React.createElement(Tooltip, {\n    type: \"dark\",\n    effect: \"solid\",\n    id: \"NotiCreateDateToolTip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n};\n\nexport default NotiLi;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/noti/component/NotiLi.tsx"],"names":["React","NotiType","NotiLevel","JDIcon","IconSize","classNames","JDbadge","CircleIcon","Tooltip","moment","LANG","NotiLi","noti","classes","undefined","isConfirm","SharedNoti","title","notiLevel","WARN","msg","sharedSymbolProp","className","size","MEDEIUM_SMALL","createdAt","format","notiType","TO_ALL","ELSE","PRODUCT_EXPIRE"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {getNotis_GetNotis_notis} from \"../../../types/api\";\r\nimport {NotiType, NotiLevel} from \"../../../types/enum\";\r\nimport JDIcon, {IconSize} from \"../../../atoms/icons/Icons\";\r\nimport classNames from \"classnames\";\r\nimport JDbadge from \"../../../atoms/badge/Badge\";\r\nimport CircleIcon from \"../../../atoms/circleIcon/CircleIcon\";\r\nimport Tooltip from \"../../../atoms/tooltip/Tooltip\";\r\nimport moment from \"moment\";\r\nimport {LANG} from \"../../../hooks/hook\";\r\n\r\ninterface IProps {\r\n  noti: getNotis_GetNotis_notis;\r\n}\r\n\r\nconst NotiLi: React.FC<IProps> = ({noti}) => {\r\n  const classes = classNames(\"notiLi\", undefined, {\r\n    \"notiLi--confirmed\": noti.isConfirm\r\n  });\r\n\r\n  const SharedNoti = () => (\r\n    <span>\r\n      <div>\r\n        <h6 className=\"notiLi__title\">\r\n          <span className=\"notiLi__title_txt\">{noti.title}</span>\r\n          <div className=\"notiLi__badgeWrap\">\r\n            {noti.notiLevel === NotiLevel.WARN && (\r\n              <JDbadge thema=\"error\">{LANG(\"caution\")}</JDbadge>\r\n            )}\r\n            {!noti.isConfirm && <JDbadge thema=\"new\">{LANG(\"new\")}</JDbadge>}\r\n          </div>\r\n        </h6>\r\n      </div>\r\n      <span className=\"notiLi__msg\">{noti.msg}</span>\r\n    </span>\r\n  );\r\n\r\n  const sharedSymbolProp = {\r\n    className: \"notiLi__symbol\",\r\n    size: IconSize.MEDEIUM_SMALL\r\n  };\r\n\r\n  return (\r\n    <li\r\n      onClick={() => {}}\r\n      data-tip={moment(noti.createdAt).format(\r\n        `MM${LANG(\"month\")} DD${LANG(\"date\")}`\r\n      )}\r\n      data-for=\"notiCreateDateToolTip\"\r\n      className=\"notiLi\"\r\n    >\r\n      {(() => {\r\n        switch (noti.notiType) {\r\n          case NotiType.TO_ALL:\r\n            return (\r\n              <div className=\"notiLi__contents\">\r\n                <CircleIcon\r\n                  thema=\"border\"\r\n                  className=\"notiLi__symbolWrap\"\r\n                  size={sharedSymbolProp.size}\r\n                >\r\n                  <JDIcon color=\"primary\" {...sharedSymbolProp} icon=\"notify\" />\r\n                </CircleIcon>\r\n                <SharedNoti />\r\n              </div>\r\n            );\r\n          case NotiType.ELSE:\r\n            return (\r\n              <div className=\"notiLi__contents\">\r\n                <CircleIcon\r\n                  className=\"notiLi__symbolWrap\"\r\n                  thema=\"border\"\r\n                  size={sharedSymbolProp.size}\r\n                >\r\n                  <JDIcon {...sharedSymbolProp} icon=\"notify\" />\r\n                </CircleIcon>\r\n                <SharedNoti />\r\n              </div>\r\n            );\r\n          // 노티가 익스파이어 될떄\r\n          default:\r\n            NotiType.PRODUCT_EXPIRE;\r\n            return (\r\n              <div className=\"notiLi__contents\">\r\n                <CircleIcon\r\n                  className=\"notiLi__symbolWrap\"\r\n                  thema=\"border\"\r\n                  size={sharedSymbolProp.size}\r\n                >\r\n                  <JDIcon color=\"error\" {...sharedSymbolProp} icon=\"notify\" />\r\n                </CircleIcon>\r\n                <SharedNoti />\r\n              </div>\r\n            );\r\n        }\r\n      })()}\r\n      <Tooltip type=\"dark\" effect=\"solid\" id=\"NotiCreateDateToolTip\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NotiLi;\r\n"]},"metadata":{},"sourceType":"module"}