{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\dailyAssjg\\\\DailyAssig.tsx\";\nimport React from \"react\";\nimport \"./DailyAssig.scss\";\nimport { useModal, LANG } from \"../../hooks/hook\";\nimport JDdayPicker from \"../../atoms/dayPicker/DayPicker\";\nimport BookingModalWrap from \"../bookingModal/BookingModalWrap\";\nimport ArrowDayByDay from \"../../atoms/dayPicker/component/inputComponent/ArrowDayByDay\";\nimport Preloader from \"../../atoms/preloader/Preloader\";\nimport { DragBoxPlace } from \"./components/DragBoxPlace\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport TouchBackend from \"react-dnd-touch-backend\";\nimport GuestTooltip from \"./components/GuestTooltip\";\nimport getDailyAssigUtils from \"../../pages/middleServer/assig/components/dailyAssigUtils\";\nimport { JDtoastModal } from \"../../atoms/modal/Modal\";\nimport { ReactTooltip } from \"../../atoms/tooltipList/TooltipList\";\nimport { PricingType, FLOATING_PRELOADER_SIZE, MODAL_PRELOADER_SIZE } from \"../../types/enum\";\nimport Tooltip from \"../../atoms/tooltip/Tooltip\";\nimport { isMobile } from \"is-mobile\";\nimport PlaceTooltip from \"./components/PlaceTooltip\";\nimport moment from \"moment\";\nimport BlockTooltip from \"./components/BlockTooltip\";\nimport { isEmpty, s4 } from \"../../utils/utils\";\nimport ReadyItemTooltip from \"../../pages/middleServer/assig/components/tooltips/ReadyItemTooltip\";\nimport DayPickerModal from \"../dayPickerModal/DayPickerModal\";\nimport { PortalPreloader } from \"../../utils/portalTo\";\n\nvar DailyAssig = function DailyAssig(_ref) {\n  var context = _ref.context,\n      outDailyAssigContext = _ref.outDailyAssigContext,\n      dailyAssigDataControl = _ref.dailyAssigDataControl;\n  var house = context.house;\n  var allocateMu = outDailyAssigContext.allocateMu,\n      loading = outDailyAssigContext.loading,\n      dayPickerHook = outDailyAssigContext.dayPickerHook,\n      roomTypesData = outDailyAssigContext.roomTypesData,\n      itemDatas = outDailyAssigContext.itemDatas,\n      networkStatus = outDailyAssigContext.networkStatus,\n      calendarPosition = outDailyAssigContext.calendarPosition;\n  var bookingModalHook = useModal(false);\n  var confirmModalHook = useModal(false);\n  var dayPickerModalHook = useModal(false);\n  var createBlockMu = dailyAssigDataControl.createBlockMu,\n      totalMuLoading = dailyAssigDataControl.totalMuLoading,\n      deleteBlockMu = dailyAssigDataControl.deleteBlockMu;\n\n  var handleDrop = function handleDrop(item, room, place) {\n    allocateMu({\n      variables: {\n        guestId: item._id,\n        allocateInfo: {\n          bedIndex: place,\n          roomId: room._id\n        }\n      }\n    });\n  }; // 2차 Context\n\n\n  var dailayAssigContext = Object.assign(outDailyAssigContext, {\n    confirmModalHook: confirmModalHook,\n    bookingModalHook: bookingModalHook,\n    handleDrop: handleDrop\n  });\n  var dailyAssigUtils = getDailyAssigUtils(dailyAssigDataControl, dailayAssigContext);\n  var toogleCheckInOut = dailyAssigUtils.toogleCheckInOut,\n      deleteBookingById = dailyAssigUtils.deleteBookingById;\n\n  var guestTooltipInfoBtnCallBack = function guestTooltipInfoBtnCallBack(targetGuest) {\n    ReactTooltip.hide();\n    bookingModalHook.openModal({\n      bookingId: targetGuest.booking._id\n    });\n  };\n\n  var guestTooltipCheckInCallBack = function guestTooltipCheckInCallBack(targetGuest) {\n    ReactTooltip.hide();\n    toogleCheckInOut(targetGuest);\n  };\n\n  var guestTooltipDeleteCallBack = function guestTooltipDeleteCallBack(targetGuest) {\n    ReactTooltip.hide();\n    deleteBookingById(targetGuest.booking._id, true);\n  };\n\n  var blockTooltipDeleteCallBack = function blockTooltipDeleteCallBack(targetBlock) {\n    ReactTooltip.hide();\n    deleteBlockMu({\n      variables: {\n        blockId: targetBlock._id\n      }\n    });\n  };\n\n  var DailyAssigDayPicker = function DailyAssigDayPicker() {\n    return React.createElement(\"div\", {\n      className: \"dailyAssig__dayPicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(JDdayPicker, Object.assign({\n      isRange: false,\n      input: true,\n      label: LANG(\"calender_date\")\n    }, dayPickerHook, {\n      className: \"JDwaves-effect JDoverflow-visible\",\n      inputComponent: function inputComponent(prop) {\n        return React.createElement(ArrowDayByDay, Object.assign({}, prop, {\n          onClick: function onClick() {\n            dayPickerModalHook.openModal();\n          },\n          format: \"MM\".concat(LANG(\"month\"), \" DD\").concat(LANG(\"date\")),\n          dayPickerHook: dayPickerHook,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(DayPickerModal, Object.assign({\n      isRange: false,\n      modalHook: dayPickerModalHook\n    }, dayPickerHook, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })));\n  };\n\n  var DailyAssigCalendar = function DailyAssigCalendar() {\n    return React.createElement(\"span\", {\n      className: \"dailyAssig__dayPicker--leftTop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(DailyAssigDayPicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"dailyAssigWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dailyAssig__dayPicker--center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, calendarPosition === \"center\" && React.createElement(DailyAssigDayPicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), React.createElement(PortalPreloader, {\n    noAnimation: true,\n    floating: true,\n    size: FLOATING_PRELOADER_SIZE,\n    loading: networkStatus < 7 || totalMuLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(Preloader, {\n    noAnimation: true,\n    size: MODAL_PRELOADER_SIZE,\n    loading: networkStatus === 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(DndProvider, {\n    backend: isMobile() ? TouchBackend : HTML5Backend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dailyAssig\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, roomTypesData.map(function (roomType, index) {\n    return !isEmpty(roomType.rooms) ? React.createElement(\"div\", {\n      key: \"roomType\".concat(roomType._id),\n      className: \"dailyAssig__row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dailyAssig__roomTypeTittle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, index === 0 && calendarPosition === \"inside\" && !isMobile() && React.createElement(DailyAssigCalendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dailyAssig__roomTypeName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, roomType.name)), React.createElement(\"div\", {\n      className: \"dailyAssig__roomsWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, roomType.rooms.map(function (room) {\n      // 방안에있는 게스트들\n      var itemsInRoom = itemDatas.filter(function (guest) {\n        return guest.room && guest.room._id === room._id;\n      }); // 방이 가득찼는지\n\n      var isFull = roomType.pricingType === PricingType.DOMITORY ? itemsInRoom.length === roomType.peopleCountMax : itemsInRoom.length > 1; // 아이템들이 들어갈 자리를 생성\n\n      var places = new Array(roomType.pricingType === PricingType.DOMITORY ? roomType.peopleCountMax : 1).fill([null]); // 아이템들을 자리에 채워줍니다. (이중배열)\n\n      var fillGuestInPlaces = function fillGuestInPlaces(item, bedIndex) {\n        var exisitPlace = places[bedIndex];\n        var tempPlace;\n        if (!exisitPlace) return;\n        tempPlace = [item].concat(_toConsumableArray(exisitPlace)).filter(function (item) {\n          return item !== null;\n        });\n        places[bedIndex] = tempPlace;\n      }; // fillGuests분기호출\n\n\n      itemsInRoom.forEach(function (item) {\n        // @ts-ignore\n        var bedIndex = item.bedIndex || 0;\n        fillGuestInPlaces(item, bedIndex);\n      });\n      return React.createElement(\"div\", {\n        key: \"room\".concat(room._id),\n        className: \"dailyAssig__room\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dailyAssig__roomTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, room.name), places.map(function (place, index) {\n        return React.createElement(DragBoxPlace, {\n          isFull: isFull,\n          key: room._id + index,\n          itemsInPlace: place,\n          onDrop: handleDrop,\n          roomType: roomType,\n          room: room,\n          place: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        });\n      }));\n    }))) : React.createElement(\"span\", {\n      key: s4(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    });\n  }))), React.createElement(PlaceTooltip, {\n    blockRoomBtnCallBack: function blockRoomBtnCallBack(info) {\n      var infoJson = JSON.parse(info);\n      createBlockMu({\n        variables: {\n          bedIndex: infoJson.place,\n          checkIn: dayPickerHook.from,\n          checkOut: moment(dayPickerHook.to).add(1, \"day\").toDate(),\n          houseId: house._id,\n          roomId: infoJson.roomId\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), React.createElement(GuestTooltip, {\n    dailyAssigUtils: dailyAssigUtils,\n    dailyAssigDataControl: dailyAssigDataControl,\n    dailayAssigContext: dailayAssigContext,\n    context: context,\n    checkInBtnCallBack: guestTooltipCheckInCallBack,\n    deleteBtnCallBack: guestTooltipDeleteCallBack,\n    infoBtnCallBack: guestTooltipInfoBtnCallBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), React.createElement(BlockTooltip, {\n    dailyAssigUtils: dailyAssigUtils,\n    dailyAssigDataControl: dailyAssigDataControl,\n    dailayAssigContext: dailayAssigContext,\n    context: context,\n    deleteBtnCallBack: blockTooltipDeleteCallBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }), React.createElement(ReadyItemTooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    id: \"guestCheckInOutToolTip\",\n    type: \"dark\",\n    effect: \"solid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }), React.createElement(JDtoastModal, Object.assign({\n    confirm: true\n  }, confirmModalHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  })), React.createElement(BookingModalWrap, {\n    context: context,\n    modalHook: bookingModalHook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }));\n};\n\nexport default DailyAssig;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/dailyAssjg/DailyAssig.tsx"],"names":["React","useModal","LANG","JDdayPicker","BookingModalWrap","ArrowDayByDay","Preloader","DragBoxPlace","DndProvider","HTML5Backend","TouchBackend","GuestTooltip","getDailyAssigUtils","JDtoastModal","ReactTooltip","PricingType","FLOATING_PRELOADER_SIZE","MODAL_PRELOADER_SIZE","Tooltip","isMobile","PlaceTooltip","moment","BlockTooltip","isEmpty","s4","ReadyItemTooltip","DayPickerModal","PortalPreloader","DailyAssig","context","outDailyAssigContext","dailyAssigDataControl","house","allocateMu","loading","dayPickerHook","roomTypesData","itemDatas","networkStatus","calendarPosition","bookingModalHook","confirmModalHook","dayPickerModalHook","createBlockMu","totalMuLoading","deleteBlockMu","handleDrop","item","room","place","variables","guestId","_id","allocateInfo","bedIndex","roomId","dailayAssigContext","Object","assign","dailyAssigUtils","toogleCheckInOut","deleteBookingById","guestTooltipInfoBtnCallBack","targetGuest","hide","openModal","bookingId","booking","guestTooltipCheckInCallBack","guestTooltipDeleteCallBack","blockTooltipDeleteCallBack","targetBlock","blockId","DailyAssigDayPicker","prop","DailyAssigCalendar","map","roomType","index","rooms","name","itemsInRoom","filter","guest","isFull","pricingType","DOMITORY","length","peopleCountMax","places","Array","fill","fillGuestInPlaces","exisitPlace","tempPlace","forEach","info","infoJson","JSON","parse","checkIn","from","checkOut","to","add","toDate","houseId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./DailyAssig.scss\";\r\nimport {\r\n  getAllRoomTypeWithGuest_GetBlocks_blocks as IB,\r\n  getAllRoomTypeWithGuest_GetGuests_guests as IG,\r\n  getAllRoomTypeWithGuest_GetAllRoomType_roomTypes_rooms as IR\r\n} from \"../../types/api\";\r\nimport { useModal, IUseModal, LANG } from \"../../hooks/hook\";\r\nimport JDdayPicker from \"../../atoms/dayPicker/DayPicker\";\r\nimport BookingModalWrap from \"../bookingModal/BookingModalWrap\";\r\nimport ArrowDayByDay from \"../../atoms/dayPicker/component/inputComponent/ArrowDayByDay\";\r\nimport Preloader from \"../../atoms/preloader/Preloader\";\r\nimport { IContext } from \"../../pages/MiddleServerRouter\";\r\nimport { DragBoxPlace } from \"./components/DragBoxPlace\";\r\nimport { DndProvider, DragObjectWithType } from \"react-dnd\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport TouchBackend from \"react-dnd-touch-backend\";\r\nimport GuestTooltip from \"./components/GuestTooltip\";\r\nimport { IDailyAssigProp } from \"./DailyAssigWrap\";\r\nimport getDailyAssigUtils from \"../../pages/middleServer/assig/components/dailyAssigUtils\";\r\nimport { JDtoastModal } from \"../../atoms/modal/Modal\";\r\nimport { ReactTooltip } from \"../../atoms/tooltipList/TooltipList\";\r\nimport {\r\n  PricingType,\r\n  FLOATING_PRELOADER_SIZE,\r\n  MODAL_PRELOADER_SIZE\r\n} from \"../../types/enum\";\r\nimport Tooltip from \"../../atoms/tooltip/Tooltip\";\r\nimport { isMobile } from \"is-mobile\";\r\nimport { IDailyAssigDataControl } from \"../../pages/middleServer/assig/components/assigIntrerface\";\r\nimport PlaceTooltip from \"./components/PlaceTooltip\";\r\nimport moment from \"moment\";\r\nimport BlockTooltip from \"./components/BlockTooltip\";\r\nimport { isEmpty, instanceOfA, s4 } from \"../../utils/utils\";\r\nimport ReadyItemTooltip from \"../../pages/middleServer/assig/components/tooltips/ReadyItemTooltip\";\r\nimport DayPickerModal from \"../dayPickerModal/DayPickerModal\";\r\nimport { PortalPreloader } from \"../../utils/portalTo\";\r\n\r\nexport interface IDailyAssigContext extends IDailyAssigProp {\r\n  confirmModalHook: IUseModal<any>;\r\n  bookingModalHook: IUseModal<any>;\r\n  handleDrop: (item: IG & DragObjectWithType, room: IR, place: number) => void;\r\n}\r\n\r\ninterface IProps {\r\n  context: IContext;\r\n  dailyAssigDataControl: IDailyAssigDataControl;\r\n  outDailyAssigContext: IDailyAssigProp;\r\n}\r\n\r\nconst DailyAssig: React.FC<IProps> = ({\r\n  context,\r\n  outDailyAssigContext,\r\n  dailyAssigDataControl\r\n}) => {\r\n  const { house } = context;\r\n  const {\r\n    allocateMu,\r\n    loading,\r\n    dayPickerHook,\r\n    roomTypesData,\r\n    itemDatas,\r\n    networkStatus,\r\n    calendarPosition\r\n  } = outDailyAssigContext;\r\n  const bookingModalHook = useModal(false);\r\n  const confirmModalHook = useModal(false);\r\n  const dayPickerModalHook = useModal(false);\r\n  const {\r\n    createBlockMu,\r\n    totalMuLoading,\r\n    deleteBlockMu\r\n  } = dailyAssigDataControl;\r\n\r\n  const handleDrop = (\r\n    item: IG & DragObjectWithType,\r\n    room: IR,\r\n    place: number\r\n  ) => {\r\n    allocateMu({\r\n      variables: {\r\n        guestId: item._id,\r\n        allocateInfo: {\r\n          bedIndex: place,\r\n          roomId: room._id\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 2차 Context\r\n  const dailayAssigContext: IDailyAssigContext = Object.assign(\r\n    outDailyAssigContext,\r\n    {\r\n      confirmModalHook,\r\n      bookingModalHook,\r\n      handleDrop\r\n    }\r\n  );\r\n\r\n  const dailyAssigUtils = getDailyAssigUtils(\r\n    dailyAssigDataControl,\r\n    dailayAssigContext\r\n  );\r\n\r\n  const { toogleCheckInOut, deleteBookingById } = dailyAssigUtils;\r\n\r\n  const guestTooltipInfoBtnCallBack = (targetGuest: IG) => {\r\n    ReactTooltip.hide();\r\n    bookingModalHook.openModal({\r\n      bookingId: targetGuest.booking._id\r\n    });\r\n  };\r\n\r\n  const guestTooltipCheckInCallBack = (targetGuest: IG) => {\r\n    ReactTooltip.hide();\r\n    toogleCheckInOut(targetGuest);\r\n  };\r\n\r\n  const guestTooltipDeleteCallBack = (targetGuest: IG) => {\r\n    ReactTooltip.hide();\r\n    deleteBookingById(targetGuest.booking._id, true);\r\n  };\r\n\r\n  const blockTooltipDeleteCallBack = (targetBlock: IB) => {\r\n    ReactTooltip.hide();\r\n    deleteBlockMu({\r\n      variables: {\r\n        blockId: targetBlock._id\r\n      }\r\n    });\r\n  };\r\n\r\n  const DailyAssigDayPicker = () => (\r\n    <div className=\"dailyAssig__dayPicker\">\r\n      <JDdayPicker\r\n        isRange={false}\r\n        input\r\n        label={LANG(\"calender_date\")}\r\n        {...dayPickerHook}\r\n        className=\"JDwaves-effect JDoverflow-visible\"\r\n        inputComponent={(prop: any) => (\r\n          <ArrowDayByDay\r\n            {...prop}\r\n            onClick={() => {\r\n              dayPickerModalHook.openModal();\r\n            }}\r\n            format={`MM${LANG(\"month\")} DD${LANG(\"date\")}`}\r\n            dayPickerHook={dayPickerHook}\r\n          />\r\n        )}\r\n      />\r\n      <DayPickerModal\r\n        isRange={false}\r\n        modalHook={dayPickerModalHook}\r\n        {...dayPickerHook}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const DailyAssigCalendar = () => (\r\n    <span className=\"dailyAssig__dayPicker--leftTop\">\r\n      <DailyAssigDayPicker />\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div className=\"dailyAssigWrap\">\r\n      <div className=\"dailyAssig__dayPicker--center\">\r\n        {calendarPosition === \"center\" && <DailyAssigDayPicker />}\r\n      </div>\r\n      <PortalPreloader\r\n        noAnimation\r\n        floating\r\n        size={FLOATING_PRELOADER_SIZE}\r\n        loading={networkStatus < 7 || totalMuLoading}\r\n      />\r\n      <Preloader\r\n        noAnimation\r\n        size={MODAL_PRELOADER_SIZE}\r\n        loading={networkStatus === 1}\r\n      />\r\n      <DndProvider backend={isMobile() ? TouchBackend : HTML5Backend}>\r\n        <div className=\"dailyAssig\">\r\n          {roomTypesData.map((roomType, index) =>\r\n            !isEmpty(roomType.rooms) ? (\r\n              <div key={`roomType${roomType._id}`} className=\"dailyAssig__row\">\r\n                <div className=\"dailyAssig__roomTypeTittle\">\r\n                  {index === 0 &&\r\n                    calendarPosition === \"inside\" &&\r\n                    !isMobile() && <DailyAssigCalendar />}\r\n                  <div className=\"dailyAssig__roomTypeName\">\r\n                    {roomType.name}\r\n                  </div>\r\n                </div>\r\n                <div className=\"dailyAssig__roomsWrap\">\r\n                  {roomType.rooms.map(room => {\r\n                    // 방안에있는 게스트들\r\n                    const itemsInRoom = itemDatas.filter(\r\n                      guest => guest.room && guest.room._id === room._id\r\n                    );\r\n\r\n                    // 방이 가득찼는지\r\n                    const isFull =\r\n                      roomType.pricingType === PricingType.DOMITORY\r\n                        ? itemsInRoom.length === roomType.peopleCountMax\r\n                        : itemsInRoom.length > 1;\r\n\r\n                    // 아이템들이 들어갈 자리를 생성\r\n                    const places = new Array(\r\n                      roomType.pricingType === PricingType.DOMITORY\r\n                        ? roomType.peopleCountMax\r\n                        : 1\r\n                    ).fill([null]);\r\n\r\n                    // 아이템들을 자리에 채워줍니다. (이중배열)\r\n                    const fillGuestInPlaces = (item: any, bedIndex: number) => {\r\n                      let exisitPlace = places[bedIndex];\r\n                      let tempPlace;\r\n                      if (!exisitPlace) return;\r\n                      tempPlace = [item, ...exisitPlace].filter(\r\n                        item => item !== null\r\n                      );\r\n                      places[bedIndex] = tempPlace;\r\n                    };\r\n\r\n                    // fillGuests분기호출\r\n                    itemsInRoom.forEach(item => {\r\n                      // @ts-ignore\r\n                      const bedIndex = item.bedIndex || 0;\r\n                      fillGuestInPlaces(item, bedIndex);\r\n                    });\r\n\r\n                    return (\r\n                      <div key={`room${room._id}`} className=\"dailyAssig__room\">\r\n                        <div className=\"dailyAssig__roomTitle\">{room.name}</div>\r\n                        {places.map((place, index) => (\r\n                          <DragBoxPlace\r\n                            isFull={isFull}\r\n                            key={room._id + index}\r\n                            itemsInPlace={place}\r\n                            onDrop={handleDrop}\r\n                            roomType={roomType}\r\n                            room={room}\r\n                            place={index}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <span key={s4()} />\r\n            )\r\n          )}\r\n        </div>\r\n      </DndProvider>\r\n      <PlaceTooltip\r\n        blockRoomBtnCallBack={info => {\r\n          const infoJson = JSON.parse(info);\r\n          createBlockMu({\r\n            variables: {\r\n              bedIndex: infoJson.place,\r\n              checkIn: dayPickerHook.from,\r\n              checkOut: moment(dayPickerHook.to!)\r\n                .add(1, \"day\")\r\n                .toDate(),\r\n              houseId: house._id,\r\n              roomId: infoJson.roomId\r\n            }\r\n          });\r\n        }}\r\n      />\r\n      <GuestTooltip\r\n        dailyAssigUtils={dailyAssigUtils}\r\n        dailyAssigDataControl={dailyAssigDataControl}\r\n        dailayAssigContext={dailayAssigContext}\r\n        context={context}\r\n        checkInBtnCallBack={guestTooltipCheckInCallBack}\r\n        deleteBtnCallBack={guestTooltipDeleteCallBack}\r\n        infoBtnCallBack={guestTooltipInfoBtnCallBack}\r\n      />\r\n      <BlockTooltip\r\n        dailyAssigUtils={dailyAssigUtils}\r\n        dailyAssigDataControl={dailyAssigDataControl}\r\n        dailayAssigContext={dailayAssigContext}\r\n        context={context}\r\n        deleteBtnCallBack={blockTooltipDeleteCallBack}\r\n      />\r\n      <ReadyItemTooltip />\r\n      <Tooltip id=\"guestCheckInOutToolTip\" type=\"dark\" effect=\"solid\" />\r\n      <JDtoastModal confirm {...confirmModalHook} />\r\n      <BookingModalWrap context={context} modalHook={bookingModalHook} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyAssig;\r\n"]},"metadata":{},"sourceType":"module"}