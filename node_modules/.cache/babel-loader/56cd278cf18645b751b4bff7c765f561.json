{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\sms\\\\Sms.tsx\";\nimport React from \"react\";\nimport { IconSize } from \"../../../atoms/icons/Icons\";\nimport Button from \"../../../atoms/button/Button\";\nimport Card from \"../../../atoms/cards/Card\";\nimport { useModal, LANG } from \"../../../hooks/hook\";\nimport { isEmpty, smsMsgParser } from \"../../../utils/utils\";\nimport { Link } from \"react-router-dom\";\nimport SmsTemplateModal from \"./components/SmsTemplateModal\";\nimport { DEFAULT_SMS_INFO } from \"../../../types/defaults\";\nimport Help from \"../../../atoms/Help/Help\";\nimport \"./Sms.scss\";\nimport JDlist from \"../../../atoms/list/List\";\nimport JDpreloader from \"../../../atoms/preloader/Preloader\";\n\nvar Sms = function Sms(_ref) {\n  var smsTemplateMutationes = _ref.smsTemplateMutationes,\n      loading = _ref.loading,\n      smsInfo = _ref.smsInfo,\n      context = _ref.context;\n\n  var _ref2 = smsInfo || DEFAULT_SMS_INFO,\n      smsTemplates = _ref2.smsTemplates;\n\n  var smsTemplateModal = useModal(false); // 로딩상태일때.\n\n  if (!smsInfo) return React.createElement(JDpreloader, {\n    loading: true,\n    page: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  });\n  var house = context.house;\n\n  var handleCreateBtnClick = function handleCreateBtnClick() {\n    smsTemplateModal.openModal({\n      isAdd: true,\n      templateId: \"\"\n    });\n  };\n\n  var handleSmsViewCardClick = function handleSmsViewCardClick(id) {\n    smsTemplateModal.openModal({\n      isAdd: false,\n      templateId: id\n    });\n  };\n\n  var SmsTemplateViewCard = function SmsTemplateViewCard(_ref3) {\n    var template = _ref3.template,\n        prop = _objectWithoutProperties(_ref3, [\"template\"]);\n\n    var smsSendCase = template.smsSendCase;\n\n    var _ref4 = smsSendCase || {\n      enable: false,\n      when: \"\",\n      who: \"\"\n    },\n        enable = _ref4.enable,\n        when = _ref4.when,\n        who = _ref4.who;\n\n    return React.createElement(Card, Object.assign({\n      className: \"sms__templateViewCard\",\n      hover: true\n    }, prop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"JDstandard-small-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, template.formatName, \" \"), React.createElement(Help, {\n      size: IconSize.NORMAL,\n      icon: \"info\",\n      tooltip: React.createElement(JDlist, {\n        contents: [React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, LANG(\"auto_send_whether\"), \" : \", enable ? \"Y\" : \"N\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, LANG(\"auto_send_target\"), \" : \", who, \" \"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, LANG(\"auto_send_condition\"), \" : \", when)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"sms__templateViewCard_smsFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, smsMsgParser(template.smsFormat, LANG(\"SmsReplaceKey\"))));\n  };\n\n  return React.createElement(\"div\", {\n    id: \"sms\",\n    className: \"sms container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"JDstandard-space\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, LANG(\"sms_setting\")), React.createElement(Help, {\n    tooltip: LANG(\"if_you_set_up_an_SMS_template_you_can_conveniently_send_the_template_when_you_send_a_message\"),\n    icon: \"help\",\n    size: IconSize.MEDIUM,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: function onClick() {\n      handleCreateBtnClick();\n    },\n    label: LANG(\"create_template\"),\n    thema: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/smsHistory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Button, {\n    mode: \"border\",\n    icon: \"arrowTo\",\n    label: LANG(\"view_SMS_history\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"docs-section__box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row sms__templateCardWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, isEmpty(smsTemplates) || smsTemplates.map(function (template) {\n    return React.createElement(\"div\", {\n      className: \"col col--float col--full-3 col--lg-4 col--md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(SmsTemplateViewCard, {\n      onClick: function onClick() {\n        handleSmsViewCardClick(template._id);\n      },\n      template: template,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }));\n  })), isEmpty(smsTemplates) && React.createElement(\"h4\", {\n    className: \"JDtextColor--placeHolder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, LANG(\"create_a_new_template\"))), React.createElement(SmsTemplateModal, {\n    key: smsTemplateModal.info.templateId,\n    context: context,\n    smsInfo: smsInfo,\n    smsTemplateMutationes: smsTemplateMutationes,\n    modalHook: smsTemplateModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })));\n};\n\nexport default Sms;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/sms/Sms.tsx"],"names":["React","IconSize","Button","Card","useModal","LANG","isEmpty","smsMsgParser","Link","SmsTemplateModal","DEFAULT_SMS_INFO","Help","JDlist","JDpreloader","Sms","smsTemplateMutationes","loading","smsInfo","context","smsTemplates","smsTemplateModal","house","handleCreateBtnClick","openModal","isAdd","templateId","handleSmsViewCardClick","id","SmsTemplateViewCard","template","prop","smsSendCase","enable","when","who","formatName","NORMAL","smsFormat","MEDIUM","map","_id","info"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {IconSize} from \"../../../atoms/icons/Icons\";\r\n\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport Card from \"../../../atoms/cards/Card\";\r\nimport {useModal, LANG} from \"../../../hooks/hook\";\r\nimport {MutationFn} from \"react-apollo\";\r\nimport {\r\n  updateSmsTemplate,\r\n  updateSmsTemplateVariables,\r\n  deleteSmsTemplate,\r\n  deleteSmsTemplateVariables,\r\n  createSmsTemplate,\r\n  createSmsTemplateVariables,\r\n  getSmsInfo_GetSmsInfo_smsInfo,\r\n  updateSender,\r\n  updateSenderVariables,\r\n  getSmsInfo_GetSmsInfo_smsInfo_smsTemplates\r\n} from \"../../../types/api\";\r\nimport {isEmpty, smsMsgParser} from \"../../../utils/utils\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {IContext} from \"../../MiddleServerRouter\";\r\nimport SmsTemplateModal, {\r\n  ISmsTemplateModalProps\r\n} from \"./components/SmsTemplateModal\";\r\nimport {DEFAULT_SMS_INFO} from \"../../../types/defaults\";\r\nimport Help from \"../../../atoms/Help/Help\";\r\nimport \"./Sms.scss\";\r\nimport JDlist from \"../../../atoms/list/List\";\r\nimport JDpreloader from \"../../../atoms/preloader/Preloader\";\r\n\r\ninterface IProps {\r\n  smsTemplateMutationes: {\r\n    updateSmsTemplateMu: MutationFn<\r\n      updateSmsTemplate,\r\n      updateSmsTemplateVariables\r\n    >;\r\n    deleteSmsTemplateMu: MutationFn<\r\n      deleteSmsTemplate,\r\n      deleteSmsTemplateVariables\r\n    >;\r\n    createSmsTemplateMu: MutationFn<\r\n      createSmsTemplate,\r\n      createSmsTemplateVariables\r\n    >;\r\n    updateSenderMu: MutationFn<updateSender, updateSenderVariables>;\r\n  };\r\n  loading: boolean;\r\n  smsInfo: getSmsInfo_GetSmsInfo_smsInfo | null | undefined;\r\n  context: IContext;\r\n}\r\n\r\nconst Sms: React.FC<IProps> = ({\r\n  smsTemplateMutationes,\r\n  loading,\r\n  smsInfo,\r\n  context\r\n}) => {\r\n  const {smsTemplates} = smsInfo || DEFAULT_SMS_INFO;\r\n  const smsTemplateModal = useModal<ISmsTemplateModalProps>(false);\r\n\r\n  // 로딩상태일때.\r\n  if (!smsInfo) return <JDpreloader loading={true} page />;\r\n\r\n  const {house} = context;\r\n\r\n  const handleCreateBtnClick = () => {\r\n    smsTemplateModal.openModal({\r\n      isAdd: true,\r\n      templateId: \"\"\r\n    });\r\n  };\r\n\r\n  const handleSmsViewCardClick = (id: string) => {\r\n    smsTemplateModal.openModal({\r\n      isAdd: false,\r\n      templateId: id\r\n    });\r\n  };\r\n\r\n  interface IPP {\r\n    template: getSmsInfo_GetSmsInfo_smsInfo_smsTemplates;\r\n    [key: string]: any;\r\n  }\r\n  const SmsTemplateViewCard: React.FC<IPP> = ({template, ...prop}) => {\r\n    const {smsSendCase} = template;\r\n    const {enable, when, who} = smsSendCase || {\r\n      enable: false,\r\n      when: \"\",\r\n      who: \"\"\r\n    };\r\n    return (\r\n      <Card className=\"sms__templateViewCard\" hover {...prop}>\r\n        <h6>\r\n          <span className=\"JDstandard-small-space\">{template.formatName} </span>\r\n          <Help\r\n            size={IconSize.NORMAL}\r\n            icon=\"info\"\r\n            tooltip={\r\n              <JDlist\r\n                contents={[\r\n                  <span>\r\n                    {LANG(\"auto_send_whether\")} : {enable ? \"Y\" : \"N\"}\r\n                  </span>,\r\n                  <span>\r\n                    {LANG(\"auto_send_target\")} : {who}{\" \"}\r\n                  </span>,\r\n                  <span>\r\n                    {LANG(\"auto_send_condition\")} : {when}\r\n                  </span>\r\n                ]}\r\n              />\r\n            }\r\n          />\r\n        </h6>\r\n        <p className=\"sms__templateViewCard_smsFormat\">\r\n          {smsMsgParser(template.smsFormat, LANG(\"SmsReplaceKey\"))}\r\n        </p>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"sms\" className=\"sms container\">\r\n      <div className=\"docs-section\">\r\n        <h3>\r\n          <span className=\"JDstandard-space\">{LANG(\"sms_setting\")}</span>\r\n          <Help\r\n            tooltip={LANG(\r\n              \"if_you_set_up_an_SMS_template_you_can_conveniently_send_the_template_when_you_send_a_message\"\r\n            )}\r\n            icon={\"help\"}\r\n            size={IconSize.MEDIUM}\r\n          />\r\n        </h3>\r\n        <Button\r\n          onClick={() => {\r\n            handleCreateBtnClick();\r\n          }}\r\n          label={LANG(\"create_template\")}\r\n          thema=\"primary\"\r\n        />\r\n        <Link to=\"/smsHistory\">\r\n          <Button\r\n            mode=\"border\"\r\n            icon=\"arrowTo\"\r\n            label={LANG(\"view_SMS_history\")}\r\n          />\r\n        </Link>\r\n        <div className=\"docs-section__box\">\r\n          <div className=\"row sms__templateCardWrap\">\r\n            {isEmpty(smsTemplates) ||\r\n              smsTemplates.map(template => (\r\n                <div className=\"col col--float col--full-3 col--lg-4 col--md-6\">\r\n                  <SmsTemplateViewCard\r\n                    onClick={() => {\r\n                      handleSmsViewCardClick(template._id);\r\n                    }}\r\n                    template={template}\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n          {isEmpty(smsTemplates) && (\r\n            <h4 className=\"JDtextColor--placeHolder\">\r\n              {LANG(\"create_a_new_template\")}\r\n            </h4>\r\n          )}\r\n        </div>\r\n        <SmsTemplateModal\r\n          key={smsTemplateModal.info.templateId}\r\n          context={context}\r\n          smsInfo={smsInfo}\r\n          smsTemplateMutationes={smsTemplateMutationes}\r\n          modalHook={smsTemplateModal}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sms;\r\n"]},"metadata":{},"sourceType":"module"}