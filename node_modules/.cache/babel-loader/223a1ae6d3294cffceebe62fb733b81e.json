{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\outPages\\\\checkReservation\\\\CheckReservation.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport CheckTable from \"./CheckTable\";\nimport { toast } from \"react-toastify\";\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\nimport Button from \"../../../atoms/button/Button\";\nimport { LANG } from \"../../../hooks/hook\";\n\nvar CheckReservation = function CheckReservation(_ref) {\n  var data = _ref.data,\n      refetch = _ref.refetch,\n      loading = _ref.loading;\n\n  var _ref2 = data || {\n    name: \"\",\n    password: \"\",\n    phoneNumber: \"\"\n  },\n      name = _ref2.name,\n      password = _ref2.password,\n      phoneNumber = _ref2.phoneNumber;\n\n  var updateInput = {\n    name: name,\n    password: password || \"\",\n    phoneNumber: phoneNumber\n  };\n\n  var _useState = useState(updateInput),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchInfo = _useState2[0],\n      setSearchInfo = _useState2[1];\n\n  useEffect(function () {\n    setSearchInfo(updateInput);\n  }, []);\n\n  var validater = function validater() {\n    if (!searchInfo.name) {\n      toast.warn(LANG(\"input_your_name_please\"));\n      return false;\n    }\n\n    if (!searchInfo.phoneNumber) {\n      toast.warn(LANG(\"please_enter_your_phone_number\"));\n      return false;\n    }\n\n    if (!searchInfo.password) {\n      toast.warn(\"input_your_password_please\");\n      return false;\n    }\n\n    return true;\n  };\n\n  return React.createElement(\"div\", {\n    id: \"JDreservation\",\n    className: \"JDreservation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, LANG(\"reservation_information\")), React.createElement(\"div\", {\n    className: \"flex-grid-grow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    onChange: function onChange(value) {\n      return setSearchInfo(_objectSpread({}, searchInfo, {\n        name: value\n      }));\n    },\n    value: searchInfo.name,\n    label: LANG(\"name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(InputText, {\n    onChange: function onChange(value) {\n      return setSearchInfo(_objectSpread({}, searchInfo, {\n        phoneNumber: value\n      }));\n    },\n    hyphen: true,\n    value: searchInfo.phoneNumber,\n    label: LANG(\"contact\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(InputText, {\n    onChange: function onChange(value) {\n      return setSearchInfo(_objectSpread({}, searchInfo, {\n        password: value\n      }));\n    },\n    label: LANG(\"password\"),\n    value: searchInfo.password,\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"JDtext-align-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      if (validater()) {\n        refetch({\n          getBookingParam: searchInfo,\n          // @ts-ignore\n          skip: loading\n        });\n      }\n    },\n    label: LANG(\"reservation_lookup\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, LANG(\"reservation_confirm\")), React.createElement(CheckTable, {\n    tableData: data ? [data] : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n};\n\nexport default CheckReservation;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/outPages/checkReservation/CheckReservation.tsx"],"names":["React","useState","useEffect","CheckTable","toast","InputText","Button","LANG","CheckReservation","data","refetch","loading","name","password","phoneNumber","updateInput","searchInfo","setSearchInfo","validater","warn","value","getBookingParam","skip","undefined"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport CheckTable from \"./CheckTable\";\r\nimport {toast} from \"react-toastify\";\r\nimport {\r\n  getBookingForPublic_GetBookingForPublic_booking,\r\n  getBookingForPublicVariables,\r\n  getBookingForPublic\r\n} from \"../../../types/api\";\r\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport {ApolloQueryResult} from \"apollo-client\";\r\nimport {LANG} from \"../../../hooks/hook\";\r\n\r\ninterface Iprops {\r\n  loading: boolean;\r\n  data: getBookingForPublic_GetBookingForPublic_booking | null | undefined;\r\n  refetch: (\r\n    variables?: getBookingForPublicVariables | undefined\r\n  ) => Promise<ApolloQueryResult<getBookingForPublic>>;\r\n}\r\n\r\nconst CheckReservation: React.FC<Iprops> = ({data, refetch, loading}) => {\r\n  const {name, password, phoneNumber} = data || {\r\n    name: \"\",\r\n    password: \"\",\r\n    phoneNumber: \"\"\r\n  };\r\n\r\n  const updateInput = {\r\n    name,\r\n    password: password || \"\",\r\n    phoneNumber\r\n  };\r\n\r\n  const [searchInfo, setSearchInfo] = useState(updateInput);\r\n\r\n  useEffect(() => {\r\n    setSearchInfo(updateInput);\r\n  }, []);\r\n\r\n  const validater = () => {\r\n    if (!searchInfo.name) {\r\n      toast.warn(LANG(\"input_your_name_please\"));\r\n      return false;\r\n    }\r\n    if (!searchInfo.phoneNumber) {\r\n      toast.warn(LANG(\"please_enter_your_phone_number\"));\r\n      return false;\r\n    }\r\n    if (!searchInfo.password) {\r\n      toast.warn(\"input_your_password_please\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div id=\"JDreservation\" className=\"JDreservation\">\r\n      <h6>{LANG(\"reservation_information\")}</h6>\r\n      <div className=\"flex-grid-grow\">\r\n        <InputText\r\n          onChange={value => setSearchInfo({...searchInfo, name: value})}\r\n          value={searchInfo.name}\r\n          label={LANG(\"name\")}\r\n        />\r\n        <InputText\r\n          onChange={value => setSearchInfo({...searchInfo, phoneNumber: value})}\r\n          hyphen\r\n          value={searchInfo.phoneNumber}\r\n          label={LANG(\"contact\")}\r\n        />\r\n        <InputText\r\n          onChange={value => setSearchInfo({...searchInfo, password: value})}\r\n          label={LANG(\"password\")}\r\n          value={searchInfo.password}\r\n          type=\"password\"\r\n        />\r\n      </div>\r\n      <div className=\"JDtext-align-center\">\r\n        <Button\r\n          onClick={() => {\r\n            if (validater()) {\r\n              refetch({\r\n                getBookingParam: searchInfo,\r\n                // @ts-ignore\r\n                skip: loading\r\n              });\r\n            }\r\n          }}\r\n          label={LANG(\"reservation_lookup\")}\r\n        />\r\n      </div>\r\n      <h6>{LANG(\"reservation_confirm\")}</h6>\r\n      <CheckTable tableData={data ? [data] : undefined} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckReservation;\r\n"]},"metadata":{},"sourceType":"module"}