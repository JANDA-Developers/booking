{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MarkerCanvasContext = require('./MarkerCanvasContext');\n\nvar _TimelineMarkersRenderer = require('./TimelineMarkersRenderer');\n\nvar _TimelineMarkersRenderer2 = _interopRequireDefault(_TimelineMarkersRenderer);\n\nvar _TimelineStateContext = require('../timeline/TimelineStateContext');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // expand to fill entire parent container (ScrollElement)\n\n\nvar staticStyles = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n  /**\n   * Renders registered markers and exposes a mouse over listener for\n   * CursorMarkers to subscribe to\n   */\n\n};\n\nvar MarkerCanvas = function (_React$Component) {\n  _inherits(MarkerCanvas, _React$Component);\n\n  function MarkerCanvas() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MarkerCanvas);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MarkerCanvas.__proto__ || Object.getPrototypeOf(MarkerCanvas)).call.apply(_ref, [this].concat(args))), _this), _this.handleMouseMove = function (evt) {\n      if (_this.subscription != null) {\n        var pageX = evt.pageX; // FIXME: dont use getBoundingClientRect. Use passed in scroll amount\n\n        var _this$containerEl$get = _this.containerEl.getBoundingClientRect(),\n            containerLeft = _this$containerEl$get.left; // number of pixels from left we are on canvas\n        // we do this calculation as pageX is based on x from viewport whereas\n        // our canvas can be scrolled left and right and is generally outside\n        // of the viewport.  This calculation is to get how many pixels the cursor\n        // is from left of this element\n\n\n        var canvasX = pageX - containerLeft;\n\n        var date = _this.props.getDateFromLeftOffsetPosition(canvasX);\n\n        _this.subscription({\n          leftOffset: canvasX,\n          date: date,\n          isCursorOverCanvas: true\n        });\n      }\n    }, _this.handleMouseLeave = function () {\n      if (_this.subscription != null) {\n        // tell subscriber that we're not on canvas\n        _this.subscription({\n          leftOffset: 0,\n          date: 0,\n          isCursorOverCanvas: false\n        });\n      }\n    }, _this.handleMouseMoveSubscribe = function (sub) {\n      _this.subscription = sub;\n      return function () {\n        _this.subscription = null;\n      };\n    }, _this.state = {\n      subscribeToMouseOver: _this.handleMouseMoveSubscribe\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(MarkerCanvas, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement(_MarkerCanvasContext.MarkerCanvasProvider, {\n        value: this.state\n      }, _react2.default.createElement('div', {\n        style: staticStyles,\n        onMouseMove: this.handleMouseMove,\n        onMouseLeave: this.handleMouseLeave,\n        ref: function ref(el) {\n          return _this2.containerEl = el;\n        }\n      }, _react2.default.createElement(_TimelineMarkersRenderer2.default, null), this.props.children));\n    }\n  }]);\n\n  return MarkerCanvas;\n}(_react2.default.Component);\n\nMarkerCanvas.propTypes = {\n  getDateFromLeftOffsetPosition: _propTypes2.default.func.isRequired,\n  children: _propTypes2.default.node\n};\n\nvar MarkerCanvasWrapper = function MarkerCanvasWrapper(props) {\n  return _react2.default.createElement(_TimelineStateContext.TimelineStateConsumer, null, function (_ref2) {\n    var getDateFromLeftOffsetPosition = _ref2.getDateFromLeftOffsetPosition;\n    return _react2.default.createElement(MarkerCanvas, _extends({\n      getDateFromLeftOffsetPosition: getDateFromLeftOffsetPosition\n    }, props));\n  });\n};\n\nexports.default = MarkerCanvasWrapper;","map":null,"metadata":{},"sourceType":"script"}