{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\Memo\\\\component\\\\MemoBox.tsx\";\nimport React, { useState, Fragment } from \"react\";\nimport JDbox from \"../../../atoms/box/JDbox\";\nimport JDIcon, { IconSize } from \"../../../atoms/icons/Icons\";\nimport moment from \"moment-timezone\";\nimport textReader from \"../../../utils/textReader\";\nimport MemoTooltip from \"./MemoTooltip\";\nimport MemoEditBox from \"./MemoEditBox\";\nimport { LANG } from \"../../../hooks/hook\";\nmoment.tz.setDefault(\"Asia/Seoul\");\n\nvar MemoBox = function MemoBox(_ref) {\n  var memo = _ref.memo,\n      handleDelete = _ref.handleDelete,\n      handleCreate = _ref.handleCreate,\n      handleUpdate = _ref.handleUpdate,\n      handleImportToogle = _ref.handleImportToogle,\n      add = _ref.add,\n      className = _ref.className;\n  var enableAlert = memo.enableAlert;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  var MessageInMemo = function MessageInMemo() {\n    return add ? React.createElement(\"span\", {\n      className: \"JDstandard-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"JDstandard-small-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, LANG(\"create_new_memo\")), React.createElement(JDIcon, {\n      icon: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })) : React.createElement(\"span\", {\n      className: \"JDstandard-small-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, textReader(memo.text));\n  };\n\n  var ToolTipIcon = function ToolTipIcon() {\n    return React.createElement(\"span\", {\n      \"data-tip\": memo._id,\n      \"data-place\": \"top\",\n      \"data-for\": \"memoTooltip\".concat(memo._id),\n      \"data-event\": \"click\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(JDIcon, {\n      hover: true,\n      icon: \"dotMenuVertical\",\n      size: IconSize.MEDEIUM_SMALL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  };\n\n  var MemoToolAndBadge = function MemoToolAndBadge() {\n    return React.createElement(\"div\", {\n      className: \"JDflex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\".concat(enableAlert || \"JDhoverBox__\", \" zJDflex--vCenter\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(JDIcon, {\n      className: \"JDstandard-small-space \",\n      hover: true,\n      onClick: function onClick() {\n        handleImportToogle(memo);\n      },\n      icon: enableAlert ? \"notify\" : \"unNotify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(ToolTipIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))));\n  };\n\n  var norAddAndEditMode = !add && !editMode;\n  var addAndNotEditMode = add && !editMode; // ⭐️ 메인 리턴\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(JDbox, {\n    tooltip: norAddAndEditMode ? moment(memo.createdAt).local().format(\"작성 MM/DD HH:MM\") : undefined,\n    tooltipDirection: \"left\",\n    className: \"memoBox JDhoverBox \".concat(className),\n    clickable: addAndNotEditMode,\n    onClick: function onClick() {\n      if (add) {\n        setEditMode(true);\n      }\n    },\n    mode: addAndNotEditMode ? \"dashBorder\" : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, editMode ? React.createElement(MemoEditBox, {\n    setEditMode: setEditMode,\n    handleUpdate: handleUpdate,\n    handleCreate: handleCreate,\n    add: add,\n    memo: memo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }) : React.createElement(MessageInMemo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), norAddAndEditMode && React.createElement(MemoToolAndBadge, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(MemoTooltip, {\n    handleClickDelete: handleDelete,\n    handleClickUpdate: function handleClickUpdate() {\n      setEditMode(true);\n    },\n    handleImportToogle: handleImportToogle,\n    memo: memo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n};\n\nexport default MemoBox;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/Memo/component/MemoBox.tsx"],"names":["React","useState","Fragment","JDbox","JDIcon","IconSize","moment","textReader","MemoTooltip","MemoEditBox","LANG","tz","setDefault","MemoBox","memo","handleDelete","handleCreate","handleUpdate","handleImportToogle","add","className","enableAlert","editMode","setEditMode","MessageInMemo","text","ToolTipIcon","_id","MEDEIUM_SMALL","MemoToolAndBadge","norAddAndEditMode","addAndNotEditMode","createdAt","local","format","undefined"],"mappings":"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","sourcesContent":["import React, {useState, Fragment} from \"react\";\r\nimport JDbox from \"../../../atoms/box/JDbox\";\r\nimport {getMemos_GetMemos_memos} from \"../../../types/api\";\r\nimport JDIcon, {IconSize} from \"../../../atoms/icons/Icons\";\r\nimport moment from \"moment-timezone\";\r\nimport textReader from \"../../../utils/textReader\";\r\nimport MemoTooltip from \"./MemoTooltip\";\r\nimport MemoEditBox from \"./MemoEditBox\";\r\nimport {LANG} from \"../../../hooks/hook\";\r\nmoment.tz.setDefault(\"Asia/Seoul\");\r\n\r\ninterface Iprops {\r\n  memo: getMemos_GetMemos_memos;\r\n  handleDelete: (memo: getMemos_GetMemos_memos) => void;\r\n  handleUpdate: (memo: getMemos_GetMemos_memos) => void;\r\n  handleCreate: (memo: getMemos_GetMemos_memos) => void;\r\n  handleImportToogle: (memo: getMemos_GetMemos_memos) => void;\r\n  add?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst MemoBox: React.FC<Iprops> = ({\r\n  memo,\r\n  handleDelete,\r\n  handleCreate,\r\n  handleUpdate,\r\n  handleImportToogle,\r\n  add,\r\n  className\r\n}) => {\r\n  const {enableAlert} = memo;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const MessageInMemo = () =>\r\n    add ? (\r\n      <span className=\"JDstandard-space\">\r\n        <span className=\"JDstandard-small-space\">\r\n          {LANG(\"create_new_memo\")}\r\n        </span>\r\n        <JDIcon icon=\"edit\" />\r\n      </span>\r\n    ) : (\r\n      <span className=\"JDstandard-small-space\">{textReader(memo.text)}</span>\r\n    );\r\n\r\n  const ToolTipIcon = () => (\r\n    <span\r\n      data-tip={memo._id}\r\n      data-place=\"top\"\r\n      data-for={`memoTooltip${memo._id}`}\r\n      data-event=\"click\"\r\n    >\r\n      <JDIcon hover icon=\"dotMenuVertical\" size={IconSize.MEDEIUM_SMALL} />\r\n    </span>\r\n  );\r\n\r\n  const MemoToolAndBadge = () => (\r\n    <div className=\"JDflex\">\r\n      <div>\r\n        <div className={`${enableAlert || \"JDhoverBox__\"} zJDflex--vCenter`}>\r\n          <JDIcon\r\n            className=\"JDstandard-small-space \"\r\n            hover\r\n            onClick={() => {\r\n              handleImportToogle(memo);\r\n            }}\r\n            icon={enableAlert ? \"notify\" : \"unNotify\"}\r\n          />\r\n          <ToolTipIcon />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const norAddAndEditMode = !add && !editMode;\r\n  const addAndNotEditMode = add && !editMode;\r\n  // ⭐️ 메인 리턴\r\n  return (\r\n    <Fragment>\r\n      <JDbox\r\n        tooltip={\r\n          norAddAndEditMode\r\n            ? moment(memo.createdAt)\r\n                .local()\r\n                .format(\"작성 MM/DD HH:MM\")\r\n            : undefined\r\n        }\r\n        tooltipDirection=\"left\"\r\n        className={`memoBox JDhoverBox ${className}`}\r\n        clickable={addAndNotEditMode}\r\n        onClick={() => {\r\n          if (add) {\r\n            setEditMode(true);\r\n          }\r\n        }}\r\n        mode={addAndNotEditMode ? \"dashBorder\" : undefined}\r\n      >\r\n        {editMode ? (\r\n          <MemoEditBox\r\n            setEditMode={setEditMode}\r\n            handleUpdate={handleUpdate}\r\n            handleCreate={handleCreate}\r\n            add={add}\r\n            memo={memo}\r\n          />\r\n        ) : (\r\n          <MessageInMemo />\r\n        )}\r\n        {norAddAndEditMode && <MemoToolAndBadge />}\r\n      </JDbox>\r\n      {/* 툴팁 */}\r\n      <MemoTooltip\r\n        handleClickDelete={handleDelete}\r\n        handleClickUpdate={() => {\r\n          setEditMode(true);\r\n        }}\r\n        handleImportToogle={handleImportToogle}\r\n        memo={memo}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MemoBox;\r\n"]},"metadata":{},"sourceType":"module"}