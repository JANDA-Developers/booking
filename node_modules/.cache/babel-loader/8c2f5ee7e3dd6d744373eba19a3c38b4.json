{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\shortStatisces\\\\DayCheckIn.tsx\";\nimport React from \"react\";\nimport { LANG } from \"../../hooks/hook\";\nimport ArrowDayByDay from \"../../atoms/dayPicker/component/inputComponent/ArrowDayByDay\";\nimport JDdayPicker from \"../../atoms/dayPicker/DayPicker\";\nimport Preloader from \"../../atoms/preloader/Preloader\";\nimport JDgraph from \"../../atoms/graph/graph\";\n\nvar DayCheckIn = function DayCheckIn(_ref) {\n  var context = _ref.context,\n      info = _ref.info,\n      dayPickerHook = _ref.dayPickerHook,\n      viewDayPicker = _ref.viewDayPicker,\n      loading = _ref.loading;\n  if (loading) return React.createElement(Preloader, {\n    loading: loading,\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n  var datasets = {\n    labels: [LANG(\"checkIn\"), LANG(\"un_checkIn\")],\n    datasets: [{\n      data: [info.bookingsCheckInCount, info.bookingsCount - info.bookingsCheckInCount],\n      backgroundColor: [\"#ffee00b3\", \"#CFCFCF\"] // hoverBackgroundColor: getStaticColors(2, {light: true})\n\n    }]\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, dayPickerHook && viewDayPicker && React.createElement(JDdayPicker, Object.assign({\n    isRange: false,\n    input: true,\n    canSelectBeforeDay: false,\n    label: LANG(\"calender_date\")\n  }, dayPickerHook, {\n    className: \"JDwaves-effect JDoverflow-visible\",\n    inputComponent: function inputComponent(prop) {\n      return React.createElement(ArrowDayByDay, Object.assign({}, prop, {\n        format: \"MM\".concat(LANG(\"month\"), \" DD\").concat(LANG(\"date\")),\n        dayPickerHook: dayPickerHook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), info.bookingsCheckInCount, \"/\", info.bookingsCount, React.createElement(JDgraph, {\n    JDtype: \"doughnut\",\n    originalData: info.bookingsCount ? [info.bookingsCount] : [],\n    data: datasets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n};\n\nexport default DayCheckIn;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/shortStatisces/DayCheckIn.tsx"],"names":["React","LANG","ArrowDayByDay","JDdayPicker","Preloader","JDgraph","DayCheckIn","context","info","dayPickerHook","viewDayPicker","loading","datasets","labels","data","bookingsCheckInCount","bookingsCount","backgroundColor","prop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAuBC,IAAvB,QAAkC,kBAAlC;AACA,OAAOC,aAAP,MAA0B,8DAA1B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AAGA,OAAOC,OAAP,MAAoB,yBAApB;;AAiBA,IAAMC,UAA4B,GAAG,SAA/BA,UAA+B,OAM/B;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,OACI,QADJA,OACI;AACJ,MAAIA,OAAJ,EAAa,OAAO,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEA,OAApB;AAA6B,IAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,MAAMC,QAAoC,GAAG;AAC3CC,IAAAA,MAAM,EAAE,CAACZ,IAAI,CAAC,SAAD,CAAL,EAAkBA,IAAI,CAAC,YAAD,CAAtB,CADmC;AAE3CW,IAAAA,QAAQ,EAAE,CACR;AACEE,MAAAA,IAAI,EAAE,CACJN,IAAI,CAACO,oBADD,EAEJP,IAAI,CAACQ,aAAL,GAAqBR,IAAI,CAACO,oBAFtB,CADR;AAKEE,MAAAA,eAAe,EAAE,CAAC,WAAD,EAAc,SAAd,CALnB,CAME;;AANF,KADQ;AAFiC,GAA7C;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,aAAa,IAAIC,aAAjB,IACC,oBAAC,WAAD;AACE,IAAA,OAAO,EAAE,KADX;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,kBAAkB,EAAE,KAHtB;AAIE,IAAA,KAAK,EAAET,IAAI,CAAC,eAAD;AAJb,KAKMQ,aALN;AAME,IAAA,SAAS,EAAC,mCANZ;AAOE,IAAA,cAAc,EAAE,wBAACS,IAAD;AAAA,aACd,oBAAC,aAAD,oBACMA,IADN;AAEE,QAAA,MAAM,cAAOjB,IAAI,CAAC,OAAD,CAAX,gBAA0BA,IAAI,CAAC,MAAD,CAA9B,CAFR;AAGE,QAAA,aAAa,EAAEQ,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADc;AAAA,KAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAkBGD,IAAI,CAACO,oBAlBR,OAkB+BP,IAAI,CAACQ,aAlBpC,EAmBE,oBAAC,OAAD;AACE,IAAA,MAAM,EAAC,UADT;AAEE,IAAA,YAAY,EAAER,IAAI,CAACQ,aAAL,GAAqB,CAACR,IAAI,CAACQ,aAAN,CAArB,GAA4C,EAF5D;AAGE,IAAA,IAAI,EAAEJ,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AA2BD,CAlDD;;AAoDA,eAAeN,UAAf","sourcesContent":["import React from \"react\";\r\nimport {IContext} from \"../../pages/bookingHost/BookingHostRouter\";\r\nimport {getBookings_GetBookings_bookings} from \"../../types/api\";\r\nimport {IUseDayPicker, LANG} from \"../../hooks/hook\";\r\nimport ArrowDayByDay from \"../../atoms/dayPicker/component/inputComponent/ArrowDayByDay\";\r\nimport JDdayPicker from \"../../atoms/dayPicker/DayPicker\";\r\nimport Preloader from \"../../atoms/preloader/Preloader\";\r\nimport {Doughnut, ChartData} from \"react-chartjs-2\";\r\nimport {getStaticColors} from \"../../utils/getStaticColors\";\r\nimport JDgraph from \"../../atoms/graph/graph\";\r\n\r\ninterface IViewConfig {\r\n  dayPickerHook?: IUseDayPicker;\r\n  viewDayPicker?: boolean;\r\n}\r\n\r\ninterface Iprops extends IViewConfig {\r\n  context: IContext;\r\n  loading: boolean;\r\n  info: {\r\n    bookingsCheckInToday: getBookings_GetBookings_bookings[];\r\n    bookingsCount: number;\r\n    bookingsCheckInCount: number;\r\n  };\r\n}\r\n\r\nconst DayCheckIn: React.FC<Iprops> = ({\r\n  context,\r\n  info,\r\n  dayPickerHook,\r\n  viewDayPicker,\r\n  loading\r\n}) => {\r\n  if (loading) return <Preloader loading={loading} size=\"medium\" />;\r\n\r\n  const datasets: ChartData<Chart.ChartData> = {\r\n    labels: [LANG(\"checkIn\"), LANG(\"un_checkIn\")],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          info.bookingsCheckInCount,\r\n          info.bookingsCount - info.bookingsCheckInCount\r\n        ],\r\n        backgroundColor: [\"#ffee00b3\", \"#CFCFCF\"]\r\n        // hoverBackgroundColor: getStaticColors(2, {light: true})\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {dayPickerHook && viewDayPicker && (\r\n        <JDdayPicker\r\n          isRange={false}\r\n          input\r\n          canSelectBeforeDay={false}\r\n          label={LANG(\"calender_date\")}\r\n          {...dayPickerHook}\r\n          className=\"JDwaves-effect JDoverflow-visible\"\r\n          inputComponent={(prop: any) => (\r\n            <ArrowDayByDay\r\n              {...prop}\r\n              format={`MM${LANG(\"month\")} DD${LANG(\"date\")}`}\r\n              dayPickerHook={dayPickerHook}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n      {info.bookingsCheckInCount}/{info.bookingsCount}\r\n      <JDgraph\r\n        JDtype=\"doughnut\"\r\n        originalData={info.bookingsCount ? [info.bookingsCount] : []}\r\n        data={datasets}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayCheckIn;\r\n"]},"metadata":{},"sourceType":"module"}