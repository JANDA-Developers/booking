{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _sortablejs = require('sortablejs');\n\nvar _sortablejs2 = _interopRequireDefault(_sortablejs);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DraggableList = function (_React$Component) {\n  (0, _inherits3[\"default\"])(DraggableList, _React$Component);\n\n  function DraggableList() {\n    (0, _classCallCheck3[\"default\"])(this, DraggableList);\n\n    var _this = (0, _possibleConstructorReturn3[\"default\"])(this, _React$Component.apply(this, arguments));\n\n    _this._current = [];\n\n    _this._sortableGroupDecorator = function (componentBackingInstance) {\n      // check if backing instance not null\n      if (componentBackingInstance) {\n        var _this$props = _this.props,\n            animation = _this$props.animation,\n            _onUpdate = _this$props.onUpdate,\n            prefixCls = _this$props.prefixCls,\n            ghostClass = _this$props.ghostClass,\n            chosenClass = _this$props.chosenClass,\n            dragClass = _this$props.dragClass,\n            disabled = _this$props.disabled; // const ghostClass = ;\n\n        var options = {\n          disabled: disabled,\n          animation: animation,\n          draggable: '.' + prefixCls + '-draggableRow',\n          // group: \"shared\",\n          ghostClass: ghostClass || prefixCls + '-ghost',\n          chosenClass: chosenClass || prefixCls + '-chosen',\n          dragClass: dragClass || prefixCls + '-drag',\n          onUpdate: function onUpdate(evt) {\n            var newIndex = evt.newIndex,\n                oldIndex = evt.oldIndex;\n            var updated = _this._current;\n            var rowData = updated.splice(oldIndex, 1);\n            updated.splice(newIndex, 0, rowData[0]);\n            _this._current = updated;\n            _onUpdate && _onUpdate(evt, updated); // tslint:disable-line\n          }\n        };\n\n        _sortablejs2[\"default\"].create(componentBackingInstance, options);\n      }\n    };\n\n    return _this;\n  }\n\n  DraggableList.prototype.render = function render() {\n    var _props = this.props,\n        style = _props.style,\n        className = _props.className,\n        rowKey = _props.rowKey,\n        rowClassName = _props.rowClassName,\n        prefixCls = _props.prefixCls,\n        dataSource = _props.dataSource,\n        row = _props.row,\n        handles = _props.handles,\n        disabled = _props.disabled;\n    this._current = dataSource;\n    return React.createElement(\"div\", {\n      className: (0, _classnames2[\"default\"])(prefixCls, className),\n      style: style\n    }, React.createElement(\"div\", {\n      ref: this._sortableGroupDecorator\n    }, dataSource.map(function (record, index) {\n      return React.createElement(\"div\", {\n        key: rowKey ? record[rowKey] : index,\n        className: (0, _classnames2[\"default\"])(prefixCls + '-draggableRow', rowClassName),\n        style: {\n          cursor: disabled ? 'default' : 'move'\n        }\n      }, !disabled && handles && React.createElement(\"span\", {\n        className: prefixCls + '-handles'\n      }, \"\\u2630\"), row(record, index));\n    })));\n  };\n\n  return DraggableList;\n}(React.Component);\n\nexports[\"default\"] = DraggableList;\nDraggableList.defaultProps = {\n  disabled: false,\n  handles: true,\n  animation: 150,\n  prefixCls: 'rc-draggable-list'\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}