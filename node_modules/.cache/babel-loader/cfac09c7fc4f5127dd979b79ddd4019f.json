{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\colorPicker\\\\ColorPicker.tsx\";\nimport React from 'react';\nimport { SketchPicker } from 'react-color';\nimport classnames from 'classnames';\nimport './ColorPicker.scss';\nimport JDLabel from '../label/JDLabel';\n\nvar JDcolorPicker = function JDcolorPicker(_ref) {\n  var label = _ref.label,\n      className = _ref.className,\n      colorHook = _ref.colorHook;\n\n  var handleClick = function handleClick() {\n    colorHook.setDisplay(!colorHook.display);\n  };\n\n  var handleClose = function handleClose() {\n    colorHook.setDisplay(false);\n  };\n\n  var handleChange = function handleChange(color) {\n    colorHook.setColor(color.hex);\n  };\n\n  var styleColor = {\n    backgroundColor: colorHook.color\n  };\n  var classNames = classnames('JDcolorPicker', className, {});\n  return React.createElement(\"div\", {\n    className: classNames,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, label && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(JDLabel, {\n    txt: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    tabIndex: 0,\n    role: \"button\",\n    className: \"JDcolorPicker__swatch\",\n    onClick: handleClick,\n    onKeyPress: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"JDcolorPicker__color\",\n    style: styleColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), colorHook.display ? React.createElement(\"div\", {\n    className: \"JDcolorPicker__modalWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"JDcolorPicker__cover\",\n    tabIndex: 0,\n    role: \"button\",\n    onKeyPress: handleClick,\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(SketchPicker, {\n    color: colorHook.color,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })) : null);\n};\n\nexport default JDcolorPicker;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/colorPicker/ColorPicker.tsx"],"names":["React","SketchPicker","classnames","JDLabel","JDcolorPicker","label","className","colorHook","handleClick","setDisplay","display","handleClose","handleChange","color","setColor","hex","styleColor","backgroundColor","classNames"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA0C,aAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,oBAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAQA,IAAMC,aAAgC,GAAG,SAAnCA,aAAmC,OAAqC;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAC5E,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBD,IAAAA,SAAS,CAACE,UAAV,CAAqB,CAACF,SAAS,CAACG,OAAhC;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBJ,IAAAA,SAAS,CAACE,UAAV,CAAqB,KAArB;AACD,GAFD;;AAIA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAwB;AAC3CN,IAAAA,SAAS,CAACO,QAAV,CAAmBD,KAAK,CAACE,GAAzB;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG;AACjBC,IAAAA,eAAe,EAAEV,SAAS,CAACM;AADV,GAAnB;AAIA,MAAMK,UAAU,GAAGhB,UAAU,CAAC,eAAD,EAAkBI,SAAlB,EAA6B,EAA7B,CAA7B;AAEA,SACE;AAAK,IAAA,SAAS,EAAEY,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAME;AAAK,IAAA,QAAQ,EAAE,CAAf;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAC,uBAA1C;AAAkE,IAAA,OAAO,EAAEG,WAA3E;AAAwF,IAAA,UAAU,EAAEA,WAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,KAAK,EAAEQ,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EASGT,SAAS,CAACG,OAAV,GACC;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,UAAU,EAAEF,WAJd;AAKE,IAAA,OAAO,EAAEG,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEJ,SAAS,CAACM,KAA/B;AAAsC,IAAA,QAAQ,EAAED,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADD,GAWG,IApBN,CADF;AAwBD,CA3CD;;AA6CA,eAAeR,aAAf","sourcesContent":["import React from 'react';\r\nimport { SketchPicker, ColorResult } from 'react-color';\r\nimport classnames from 'classnames';\r\nimport { IUseColor } from '../../hooks/hook';\r\nimport './ColorPicker.scss';\r\nimport JDLabel from '../label/JDLabel';\r\n\r\ninterface IProps {\r\n  colorHook: IUseColor;\r\n  className?: string;\r\n  label?: string;\r\n}\r\n\r\nconst JDcolorPicker: React.SFC<IProps> = ({ label, className, colorHook }) => {\r\n  const handleClick = () => {\r\n    colorHook.setDisplay(!colorHook.display);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    colorHook.setDisplay(false);\r\n  };\r\n\r\n  const handleChange = (color: ColorResult) => {\r\n    colorHook.setColor(color.hex);\r\n  };\r\n\r\n  const styleColor = {\r\n    backgroundColor: colorHook.color,\r\n  };\r\n\r\n  const classNames = classnames('JDcolorPicker', className, {});\r\n\r\n  return (\r\n    <div className={classNames}>\r\n      {label && (\r\n        <div>\r\n          <JDLabel txt={label} />\r\n        </div>\r\n      )}\r\n      <div tabIndex={0} role=\"button\" className=\"JDcolorPicker__swatch\" onClick={handleClick} onKeyPress={handleClick}>\r\n        <div className=\"JDcolorPicker__color\" style={styleColor} />\r\n      </div>\r\n      {colorHook.display ? (\r\n        <div className=\"JDcolorPicker__modalWrap\">\r\n          <div\r\n            className=\"JDcolorPicker__cover\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onKeyPress={handleClick}\r\n            onClick={handleClose}\r\n          />\r\n          <SketchPicker color={colorHook.color} onChange={handleChange} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JDcolorPicker;\r\n"]},"metadata":{},"sourceType":"module"}