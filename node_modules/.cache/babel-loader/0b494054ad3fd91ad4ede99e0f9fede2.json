{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\bookingHost\\\\roomConfig\\\\components\\\\RoomModalWrap.tsx\";\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { useInput, LANG } from \"../../../../hooks/hook\";\nimport { ErrProtecter, onCompletedMessage } from \"../../../../utils/utils\";\nimport RoomModal from \"./RoomModal\";\nimport { CREATE_ROOM, DELETE_ROOM, UPDATE_ROOM, GET_ALL_ROOMTYPES } from \"../../../../queries\";\nimport { DEFAULT_ROOMTYPE_ROOM } from \"../../../../types/defaults\";\n\nvar CreateRoomMutation =\n/*#__PURE__*/\nfunction (_Mutation) {\n  _inherits(CreateRoomMutation, _Mutation);\n\n  function CreateRoomMutation() {\n    _classCallCheck(this, CreateRoomMutation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CreateRoomMutation).apply(this, arguments));\n  }\n\n  return CreateRoomMutation;\n}(Mutation);\n\nvar DeleteRoomMutation =\n/*#__PURE__*/\nfunction (_Mutation2) {\n  _inherits(DeleteRoomMutation, _Mutation2);\n\n  function DeleteRoomMutation() {\n    _classCallCheck(this, DeleteRoomMutation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DeleteRoomMutation).apply(this, arguments));\n  }\n\n  return DeleteRoomMutation;\n}(Mutation);\n\nvar UpdateRoomMutation =\n/*#__PURE__*/\nfunction (_Mutation3) {\n  _inherits(UpdateRoomMutation, _Mutation3);\n\n  function UpdateRoomMutation() {\n    _classCallCheck(this, UpdateRoomMutation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpdateRoomMutation).apply(this, arguments));\n  }\n\n  return UpdateRoomMutation;\n}(Mutation);\n\nvar UpdateTimelineWrap = function UpdateTimelineWrap(_ref) {\n  var modalHook = _ref.modalHook,\n      roomTypeData = _ref.roomTypeData,\n      context = _ref.context,\n      outRefetchQueries = _ref.refetchQueries;\n  var house = context.house;\n  var refetchQueries = [{\n    query: GET_ALL_ROOMTYPES,\n    variables: {\n      houseId: house._id\n    }\n  }].concat(_toConsumableArray(outRefetchQueries));\n  var info = modalHook.info;\n  var isAddMode = info.isAddMode; // 오픈한 방의 방타입을 찾음\n\n  var targetRoomType = roomTypeData.find(function (roomType) {\n    return roomType._id === info.roomTypeId;\n  });\n  if (!targetRoomType && !isAddMode) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }); // 오픈한 방을 찾음\n\n  var targetRoom = targetRoomType ? targetRoomType.rooms.find(function (room) {\n    return room._id === info.roomId;\n  }) : DEFAULT_ROOMTYPE_ROOM;\n  if (!targetRoom && !isAddMode) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  });\n  var roomNameHook = useInput(targetRoom ? targetRoom.name : \"\", true);\n  return (// 방타입 생성 뮤테이션\n    React.createElement(CreateRoomMutation, {\n      mutation: CREATE_ROOM,\n      refetchQueries: refetchQueries,\n      variables: {\n        name: roomNameHook.value,\n        roomType: modalHook.info.roomTypeId\n      },\n      onCompleted: function onCompleted(_ref2) {\n        var CreateRoom = _ref2.CreateRoom;\n        onCompletedMessage(CreateRoom, LANG(\"room_create_completed\"), LANG(\"room_create_fail\"));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, function (createRoomMutation) {\n      return React.createElement(DeleteRoomMutation, {\n        mutation: DELETE_ROOM,\n        refetchQueries: refetchQueries,\n        variables: {\n          roomId: modalHook.info.roomId || \"\"\n        },\n        onCompleted: function onCompleted(_ref3) {\n          var DeleteRoom = _ref3.DeleteRoom;\n          onCompletedMessage(DeleteRoom, LANG(\"room_delete_completed\"), LANG(\"room_delete_fail\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, function (deleteRoomMutation, _ref4) {\n        var deleteRoomLoading = _ref4.loading;\n        return React.createElement(UpdateRoomMutation, {\n          mutation: UPDATE_ROOM,\n          refetchQueries: refetchQueries,\n          variables: {\n            roomId: modalHook.info.roomId || \"\",\n            name: roomNameHook.value\n          },\n          onCompleted: function onCompleted(_ref5) {\n            var UpdateRoom = _ref5.UpdateRoom;\n            onCompletedMessage(UpdateRoom, LANG(\"room_update\"), LANG(\"room_update_fail\"));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, function (updateRoomMutation, _ref6) {\n          var loading = _ref6.loading;\n          return React.createElement(RoomModal, {\n            modalHook: modalHook,\n            roomNameHook: roomNameHook,\n            deleteRoomMutation: deleteRoomMutation,\n            createRoomMutation: createRoomMutation,\n            updateRoomMutation: updateRoomMutation,\n            isAddMode: isAddMode,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          });\n        });\n      });\n    })\n  );\n};\n\nexport default ErrProtecter(UpdateTimelineWrap);","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/bookingHost/roomConfig/components/RoomModalWrap.tsx"],"names":["React","Mutation","useInput","LANG","ErrProtecter","onCompletedMessage","RoomModal","CREATE_ROOM","DELETE_ROOM","UPDATE_ROOM","GET_ALL_ROOMTYPES","DEFAULT_ROOMTYPE_ROOM","CreateRoomMutation","DeleteRoomMutation","UpdateRoomMutation","UpdateTimelineWrap","modalHook","roomTypeData","context","outRefetchQueries","refetchQueries","house","query","variables","houseId","_id","info","isAddMode","targetRoomType","find","roomType","roomTypeId","targetRoom","rooms","room","roomId","roomNameHook","name","value","CreateRoom","createRoomMutation","DeleteRoom","deleteRoomMutation","deleteRoomLoading","loading","UpdateRoom","updateRoomMutation"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {ApolloError, PureQueryOptions} from \"apollo-client\";\r\nimport {Mutation} from \"react-apollo\";\r\nimport {useInput, IUseModal, LANG} from \"../../../../hooks/hook\";\r\nimport {\r\n  ErrProtecter,\r\n  onCompletedMessage,\r\n  showError\r\n} from \"../../../../utils/utils\";\r\nimport RoomModal from \"./RoomModal\";\r\nimport {\r\n  createRoom,\r\n  createRoomVariables,\r\n  deleteRoom,\r\n  deleteRoomVariables,\r\n  updateRoom,\r\n  updateRoomVariables,\r\n  getAllRoomType_GetAllRoomType_roomTypes\r\n} from \"../../../../types/api\";\r\nimport {\r\n  CREATE_ROOM,\r\n  DELETE_ROOM,\r\n  UPDATE_ROOM,\r\n  GET_ALL_ROOMTYPES\r\n} from \"../../../../queries\";\r\nimport {DEFAULT_ROOMTYPE_ROOM} from \"../../../../types/defaults\";\r\nimport {IContext} from \"../../BookingHostRouter\";\r\n\r\nclass CreateRoomMutation extends Mutation<createRoom, createRoomVariables> {}\r\nclass DeleteRoomMutation extends Mutation<deleteRoom, deleteRoomVariables> {}\r\nclass UpdateRoomMutation extends Mutation<updateRoom, updateRoomVariables> {}\r\n\r\nexport interface IRoomModalInfo {\r\n  roomId?: string;\r\n  isAddMode?: boolean;\r\n  roomTypeId: string;\r\n}\r\n\r\ninterface IProps {\r\n  modalHook: IUseModal<IRoomModalInfo>;\r\n  roomTypeData: getAllRoomType_GetAllRoomType_roomTypes[];\r\n  context: IContext;\r\n  refetchQueries: (PureQueryOptions | string)[];\r\n}\r\n\r\nconst UpdateTimelineWrap: React.SFC<IProps> = ({\r\n  modalHook,\r\n  roomTypeData,\r\n  context,\r\n  refetchQueries: outRefetchQueries\r\n}) => {\r\n  const {house} = context;\r\n  const refetchQueries = [\r\n    {query: GET_ALL_ROOMTYPES, variables: {houseId: house._id}},\r\n    ...outRefetchQueries\r\n  ];\r\n  const {info} = modalHook;\r\n  const isAddMode = info.isAddMode;\r\n  // 오픈한 방의 방타입을 찾음\r\n  const targetRoomType = roomTypeData.find(\r\n    roomType => roomType._id === info.roomTypeId\r\n  );\r\n  if (!targetRoomType && !isAddMode) return <div />;\r\n\r\n  // 오픈한 방을 찾음\r\n  const targetRoom = targetRoomType\r\n    ? targetRoomType.rooms.find(room => room._id === info.roomId)\r\n    : DEFAULT_ROOMTYPE_ROOM;\r\n\r\n  if (!targetRoom && !isAddMode) return <div />;\r\n  const roomNameHook = useInput(targetRoom ? targetRoom.name : \"\", true);\r\n\r\n  return (\r\n    // 방타입 생성 뮤테이션\r\n    <CreateRoomMutation\r\n      mutation={CREATE_ROOM}\r\n      refetchQueries={refetchQueries}\r\n      variables={{\r\n        name: roomNameHook.value,\r\n        roomType: modalHook.info.roomTypeId\r\n      }}\r\n      onCompleted={({CreateRoom}: createRoom) => {\r\n        onCompletedMessage(\r\n          CreateRoom,\r\n          LANG(\"room_create_completed\"),\r\n          LANG(\"room_create_fail\")\r\n        );\r\n      }}\r\n    >\r\n      {createRoomMutation => (\r\n        <DeleteRoomMutation\r\n          mutation={DELETE_ROOM}\r\n          refetchQueries={refetchQueries}\r\n          variables={{\r\n            roomId: modalHook.info.roomId || \"\"\r\n          }}\r\n          onCompleted={({DeleteRoom}: deleteRoom) => {\r\n            onCompletedMessage(\r\n              DeleteRoom,\r\n              LANG(\"room_delete_completed\"),\r\n              LANG(\"room_delete_fail\")\r\n            );\r\n          }}\r\n        >\r\n          {(deleteRoomMutation, {loading: deleteRoomLoading}) => (\r\n            <UpdateRoomMutation\r\n              mutation={UPDATE_ROOM}\r\n              refetchQueries={refetchQueries}\r\n              variables={{\r\n                roomId: modalHook.info.roomId || \"\",\r\n                name: roomNameHook.value\r\n              }}\r\n              onCompleted={({UpdateRoom}: updateRoom) => {\r\n                onCompletedMessage(\r\n                  UpdateRoom,\r\n                  LANG(\"room_update\"),\r\n                  LANG(\"room_update_fail\")\r\n                );\r\n              }}\r\n            >\r\n              {(updateRoomMutation, {loading}) => (\r\n                <RoomModal\r\n                  modalHook={modalHook}\r\n                  roomNameHook={roomNameHook}\r\n                  deleteRoomMutation={deleteRoomMutation}\r\n                  createRoomMutation={createRoomMutation}\r\n                  updateRoomMutation={updateRoomMutation}\r\n                  isAddMode={isAddMode}\r\n                />\r\n              )}\r\n            </UpdateRoomMutation>\r\n          )}\r\n        </DeleteRoomMutation>\r\n      )}\r\n    </CreateRoomMutation>\r\n  );\r\n};\r\n\r\nexport default ErrProtecter(UpdateTimelineWrap);\r\n"]},"metadata":{},"sourceType":"module"}