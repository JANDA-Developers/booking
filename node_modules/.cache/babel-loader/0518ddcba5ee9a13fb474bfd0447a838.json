{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\bookingHost\\\\assig\\\\components\\\\tooltips\\\\ItemMenuTooltip.tsx\";\nimport React, { Fragment } from \"react\";\nimport TooltipList, { ReactTooltip } from \"../../../../../atoms/tooltipList/TooltipList\";\nimport Button from \"../../../../../atoms/button/Button\";\nimport { BookingStatus } from \"../../../../../types/enum\";\nimport { LANG } from \"../../../../../hooks/hook\";\n\nvar ItemMenuTooltip = function ItemMenuTooltip(_ref) {\n  var _ref$assigHooks = _ref.assigHooks,\n      guestValue = _ref$assigHooks.guestValue,\n      bookingModal = _ref$assigHooks.bookingModal,\n      blockOpModal = _ref$assigHooks.blockOpModal,\n      houseConfig = _ref.assigContext.houseConfig,\n      _ref$assigUtils = _ref.assigUtils,\n      deleteBookingById = _ref$assigUtils.deleteBookingById,\n      getBookingIdByGuestId = _ref$assigUtils.getBookingIdByGuestId,\n      toogleCheckInOut = _ref$assigUtils.toogleCheckInOut;\n  return React.createElement(TooltipList, {\n    unPadding: true,\n    getContent: function getContent(guestId) {\n      var targetGuest = guestValue.find(function (guest) {\n        return guest.id === guestId;\n      });\n      if (!targetGuest) return;\n      var isProgressing = targetGuest.status === BookingStatus.PROGRESSING;\n      return React.createElement(\"ul\", {\n        className: \"tooltipList__ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, !isProgressing && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          ReactTooltip.hide();\n          toogleCheckInOut(guestId);\n        },\n        label: targetGuest.checkInInfo ? LANG(\"checkOut\") : LANG(\"checkIn\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          ReactTooltip.hide();\n          deleteBookingById(getBookingIdByGuestId(guestId), true);\n        },\n        label: LANG(\"delete\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), houseConfig.assigTimeline.itemBlockOp.useColor && React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          ReactTooltip.hide();\n          blockOpModal.openModal(targetGuest);\n        },\n        label: LANG(\"color_set\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          ReactTooltip.hide();\n          bookingModal.openModal({\n            bookingId: targetGuest.bookingId\n          });\n        },\n        label: LANG(\"view_info\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    },\n    id: \"itemTooltip\",\n    className: \"itemTooltip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n};\n\nexport default ItemMenuTooltip;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/bookingHost/assig/components/tooltips/ItemMenuTooltip.tsx"],"names":["React","Fragment","TooltipList","ReactTooltip","Button","BookingStatus","LANG","ItemMenuTooltip","assigHooks","guestValue","bookingModal","blockOpModal","houseConfig","assigContext","assigUtils","deleteBookingById","getBookingIdByGuestId","toogleCheckInOut","guestId","targetGuest","find","guest","id","isProgressing","status","PROGRESSING","hide","checkInInfo","assigTimeline","itemBlockOp","useColor","openModal","bookingId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,IACEC,YADF,QAEO,8CAFP;AAGA,OAAOC,MAAP,MAAmB,oCAAnB;AAMA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,IAAT,QAAqB,2BAArB;;AAQA,IAAMC,eAAiC,GAAG,SAApCA,eAAoC,OAIpC;AAAA,6BAHJC,UAGI;AAAA,MAHUC,UAGV,mBAHUA,UAGV;AAAA,MAHsBC,YAGtB,mBAHsBA,YAGtB;AAAA,MAHoCC,YAGpC,mBAHoCA,YAGpC;AAAA,MAFYC,WAEZ,QAFJC,YAEI,CAFYD,WAEZ;AAAA,6BADJE,UACI;AAAA,MADUC,iBACV,mBADUA,iBACV;AAAA,MAD6BC,qBAC7B,mBAD6BA,qBAC7B;AAAA,MADoDC,gBACpD,mBADoDA,gBACpD;AACJ,SACE,oBAAC,WAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,UAAU,EAAE,oBAACC,OAAD,EAAqB;AAC/B,UAAMC,WAAW,GAAGV,UAAU,CAACW,IAAX,CAAgB,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,EAAN,KAAaJ,OAAjB;AAAA,OAArB,CAApB;AACA,UAAI,CAACC,WAAL,EAAkB;AAClB,UAAMI,aAAa,GAAGJ,WAAW,CAACK,MAAZ,KAAuBnB,aAAa,CAACoB,WAA3D;AACA,aACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACF,aAAD,IACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbpB,UAAAA,YAAY,CAACuB,IAAb;AACAT,UAAAA,gBAAgB,CAACC,OAAD,CAAhB;AACD,SAJH;AAKE,QAAA,KAAK,EACHC,WAAW,CAACQ,WAAZ,GACIrB,IAAI,CAAC,UAAD,CADR,GAEIA,IAAI,CAAC,SAAD,CARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbH,UAAAA,YAAY,CAACuB,IAAb;AACAX,UAAAA,iBAAiB,CAACC,qBAAqB,CAACE,OAAD,CAAtB,EAAiC,IAAjC,CAAjB;AACD,SAJH;AAKE,QAAA,KAAK,EAAEZ,IAAI,CAAC,QAAD,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAdF,CAFJ,EA2BGM,WAAW,CAACgB,aAAZ,CAA2BC,WAA3B,CAAwCC,QAAxC,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb3B,UAAAA,YAAY,CAACuB,IAAb;AACAf,UAAAA,YAAY,CAACoB,SAAb,CAAuBZ,WAAvB;AACD,SAJH;AAKE,QAAA,KAAK,EAAEb,IAAI,CAAC,WAAD,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA5BJ,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbH,UAAAA,YAAY,CAACuB,IAAb;AACAhB,UAAAA,YAAY,CAACqB,SAAb,CAAuB;AACrBC,YAAAA,SAAS,EAAEb,WAAW,CAACa;AADF,WAAvB;AAGD,SANH;AAOE,QAAA,KAAK,EAAE1B,IAAI,CAAC,WAAD,CAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAtCF,CADF;AAoDD,KA1DH;AA2DE,IAAA,EAAE,EAAC,aA3DL;AA4DE,IAAA,SAAS,EAAC,aA5DZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgED,CArED;;AAsEA,eAAeC,eAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport TooltipList, {\r\n  ReactTooltip\r\n} from \"../../../../../atoms/tooltipList/TooltipList\";\r\nimport Button from \"../../../../../atoms/button/Button\";\r\nimport {\r\n  IAssigTimelineHooks,\r\n  IAssigTimelineUtils,\r\n  IAssigTimelineContext\r\n} from \"../../helpers/assigIntrerface\";\r\nimport { BookingStatus } from \"../../../../../types/enum\";\r\nimport { LANG } from \"../../../../../hooks/hook\";\r\n\r\ninterface IProps {\r\n  assigHooks: IAssigTimelineHooks;\r\n  assigUtils: IAssigTimelineUtils;\r\n  assigContext: IAssigTimelineContext;\r\n}\r\n\r\nconst ItemMenuTooltip: React.FC<IProps> = ({\r\n  assigHooks: { guestValue, bookingModal, blockOpModal },\r\n  assigContext: { houseConfig },\r\n  assigUtils: { deleteBookingById, getBookingIdByGuestId, toogleCheckInOut }\r\n}) => {\r\n  return (\r\n    <TooltipList\r\n      unPadding\r\n      getContent={(guestId: string) => {\r\n        const targetGuest = guestValue.find(guest => guest.id === guestId);\r\n        if (!targetGuest) return;\r\n        const isProgressing = targetGuest.status === BookingStatus.PROGRESSING;\r\n        return (\r\n          <ul className=\"tooltipList__ul\">\r\n            {!isProgressing && (\r\n              <Fragment>\r\n                <li>\r\n                  <Button\r\n                    onClick={() => {\r\n                      ReactTooltip.hide();\r\n                      toogleCheckInOut(guestId);\r\n                    }}\r\n                    label={\r\n                      targetGuest.checkInInfo\r\n                        ? LANG(\"checkOut\")\r\n                        : LANG(\"checkIn\")\r\n                    }\r\n                  />\r\n                </li>\r\n                <li>\r\n                  <Button\r\n                    onClick={() => {\r\n                      ReactTooltip.hide();\r\n                      deleteBookingById(getBookingIdByGuestId(guestId), true);\r\n                    }}\r\n                    label={LANG(\"delete\")}\r\n                  />\r\n                </li>\r\n              </Fragment>\r\n            )}\r\n            {houseConfig.assigTimeline!.itemBlockOp!.useColor && (\r\n              <li>\r\n                <Button\r\n                  onClick={() => {\r\n                    ReactTooltip.hide();\r\n                    blockOpModal.openModal(targetGuest);\r\n                  }}\r\n                  label={LANG(\"color_set\")}\r\n                />\r\n              </li>\r\n            )}\r\n            <li>\r\n              <Button\r\n                onClick={() => {\r\n                  ReactTooltip.hide();\r\n                  bookingModal.openModal({\r\n                    bookingId: targetGuest.bookingId\r\n                  });\r\n                }}\r\n                label={LANG(\"view_info\")}\r\n              />\r\n            </li>\r\n          </ul>\r\n        );\r\n      }}\r\n      id=\"itemTooltip\"\r\n      className=\"itemTooltip\"\r\n    />\r\n  );\r\n};\r\nexport default ItemMenuTooltip;\r\n"]},"metadata":{},"sourceType":"module"}