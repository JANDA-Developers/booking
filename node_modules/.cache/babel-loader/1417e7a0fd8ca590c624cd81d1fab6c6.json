{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\bookingHost\\\\resvList\\\\ResvList.tsx\";\nimport React, { useState, Fragment } from \"react\";\nimport selectTableHOC from \"react-table/lib/hoc/selectTable\";\nimport JDtable, { ReactTableDefault } from \"../../../atoms/table/Table\";\nimport CheckBox from \"../../../atoms/forms/checkBox/CheckBox\";\nimport Button from \"../../../atoms/button/Button\";\nimport JDIcon, { IconSize } from \"../../../atoms/icons/Icons\";\nimport { useModal, LANG } from \"../../../hooks/hook\";\nimport BookingModalWrap from \"../../../components/bookingModal/BookingModalWrap\";\nimport JDbox from \"../../../atoms/box/JDbox\";\nimport { to4YMMDD } from \"../../../utils/setMidNight\";\nimport autoHyphen from \"../../../utils/autoFormat\";\nimport { JDtoastModal } from \"../../../atoms/modal/Modal\";\nimport { PaymentStatus, PricingType, BookingStatus, FLOATING_PRELOADER_SIZE, DateFormat } from \"../../../types/enum\";\nimport moment from \"moment\";\nimport JDbadge from \"../../../atoms/badge/Badge\";\nimport \"./ResvList.scss\";\nimport JDPagination from \"../../../atoms/pagination/Pagination\";\nimport { autoComma } from \"../../../utils/utils\";\nimport SendSMSmodalWrap from \"../../../components/smsModal/SendSmsModalWrap\";\nimport Preloader from \"../../../atoms/preloader/Preloader\";\nimport ConfirmBadgeWrap from \"../../../components/confirmBadge/ConfirmBadgeWrap\";\nimport textReader from \"../../../utils/textReader\";\nimport { getRoomSelectInfo } from \"../../../utils/typeChanger\";\nimport { inOr } from \"../../../utils/C\";\nimport { toast } from \"react-toastify\";\n\nvar ResvList = function ResvList(_ref) {\n  var pageInfo = _ref.pageInfo,\n      bookingsData = _ref.bookingsData,\n      loading = _ref.loading,\n      updateBookingMu = _ref.updateBookingMu,\n      deleteBookingMu = _ref.deleteBookingMu,\n      setPage = _ref.setPage,\n      networkStatus = _ref.networkStatus,\n      context = _ref.context;\n  var newBookingMarkEnable = context.houseConfig.bookingConfig.newBookingMark.enable,\n      JDlang = context.JDlang;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      checkedIds = _useState2[0],\n      setCheckedIds = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectAll = _useState4[0],\n      setSelectAll = _useState4[1];\n\n  var bookingModalHook = useModal(false);\n  var alertModalHook = useModal(false);\n  var sendSmsModalHook = useModal(false); //   여기에 key가 들어오면 id배열에서 찾아서 넣거나 제거해줌\n\n  var onToogleRow = function onToogleRow(key) {\n    if (checkedIds.includes(key)) {\n      setCheckedIds(_toConsumableArray(checkedIds.filter(function (value) {\n        return value !== key;\n      })));\n    } else {\n      setCheckedIds([].concat(_toConsumableArray(checkedIds), [key]));\n    }\n  }; //    모든 라인들에대한 아이디를 투글함\n\n\n  var onToogleAllRow = function onToogleAllRow(flag) {\n    var bookingIds = bookingsData.map(function (booking) {\n      return booking._id;\n    });\n    var updateSelecetedes = bookingIds.map(function (id) {\n      return checkedIds.includes(id) ? \"\" : id;\n    });\n    setCheckedIds(updateSelecetedes);\n    setSelectAll(flag);\n  };\n\n  var handleDeleteBookingBtnClick = function handleDeleteBookingBtnClick() {\n    alertModalHook.openModal({\n      txt: \"\".concat(LANG(\"nextResv\")).concat(checkedIds.length).concat(LANG(\"checkDelete\"))\n    });\n  };\n\n  var handleCancleBookingBtnClick = function handleCancleBookingBtnClick() {\n    checkedIds.forEach(function (id) {\n      updateBookingMu({\n        variables: {\n          bookingId: id,\n          params: {\n            bookingStatus: BookingStatus.CANCEL\n          }\n        }\n      });\n    });\n  };\n\n  var handleSendSmsBtnClick = function handleSendSmsBtnClick() {\n    var receivers = checkedIds.map(function (id) {\n      var target = bookingsData.find(function (booking) {\n        return booking._id === id;\n      });\n\n      if (target) {\n        return target.phoneNumber;\n      } else {\n        return 0;\n      }\n    });\n\n    if (checkedIds.length !== receivers.length) {\n      toast.warn(\"JD1114 ERR\");\n    }\n\n    sendSmsModalHook.openModal({\n      receivers: receivers.filter(function (receiver) {\n        return receiver;\n      }),\n      bookingIds: checkedIds\n    });\n  };\n\n  var handleCompleteBookingBtnClick = function handleCompleteBookingBtnClick() {\n    checkedIds.forEach(function (id) {\n      updateBookingMu({\n        variables: {\n          bookingId: id,\n          params: {\n            bookingStatus: BookingStatus.COMPLETE\n          }\n        }\n      });\n    });\n  };\n\n  var deleteModalCallBackFn = function deleteModalCallBackFn(flag) {\n    if (flag) {\n      checkedIds.forEach(function (bookingId) {\n        deleteBookingMu({\n          variables: {\n            bookingId: bookingId\n          }\n        });\n      });\n      setCheckedIds([]);\n    }\n  };\n\n  var TableColumns = [{\n    Header: LANG(\"reservation_did_date\"),\n    accessor: \"createdAt\",\n    Cell: function Cell(_ref2) {\n      var value = _ref2.value;\n      return React.createElement(\"div\", {\n        className: \"resvList__createdAt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, moment(value).local().format(DateFormat.WITH_TIME));\n    }\n  }, {\n    Header: LANG(\"accommodation_info\"),\n    accessor: \"roomTypes\",\n    Cell: function Cell(_ref3) {\n      var value = _ref3.value,\n          original = _ref3.original;\n      var roomTypes = value;\n      var selectInfoes = getRoomSelectInfo(original.guests, roomTypes);\n      return selectInfoes.map(function (selectInfo) {\n        return React.createElement(JDbox, {\n          size: \"small\",\n          textAlign: \"center\",\n          key: \"\".concat(original._id).concat(selectInfo.roomTypeId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, selectInfo.roomTypeName, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, function () {\n          var _selectInfo$count = selectInfo.count,\n              female = _selectInfo$count.female,\n              male = _selectInfo$count.male,\n              roomCount = _selectInfo$count.roomCount;\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, selectInfo.pricingType === PricingType.DOMITORY ? React.createElement(Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, female !== 0 && React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, female, LANG(\"female\"), \" \"), male !== 0 && React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          }, male, LANG(\"male\"))) : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }, roomCount));\n        }()));\n      });\n    }\n  }, {\n    Header: LANG(\"checkIn\"),\n    accessor: \"_id\",\n    Cell: function Cell(_ref4) {\n      var original = _ref4.original;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, to4YMMDD(original.checkIn));\n    }\n  }, {\n    Header: LANG(\"checkOut\"),\n    accessor: \"_id\",\n    Cell: function Cell(_ref5) {\n      var original = _ref5.original;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, to4YMMDD(original.checkOut));\n    }\n  }, {\n    Header: function Header() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, LANG(\"booker_name\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), LANG(\"contact\"));\n    },\n    accessor: \"name\",\n    Cell: function Cell(_ref6) {\n      var original = _ref6.original;\n      var Booking = original;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, Booking.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), autoHyphen(Booking.phoneNumber));\n    }\n  }, {\n    Header: function Header() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, LANG(\"usage_amount\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), LANG(\"payment_status\"));\n    },\n    accessor: \"payment\",\n    Cell: function Cell(_ref7) {\n      var original = _ref7.original;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, autoComma(original.payment.totalPrice), LANG(\"money_unit\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"resvList__paymentStatus \".concat(original.payment.status === PaymentStatus.PROGRESSING && \"resvList__paymentStatus--notYet\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, LANG(\"PaymentStatus\", original.payment.status)));\n    }\n  }, {\n    Header: LANG(\"memo\"),\n    accessor: \"memo\",\n    minWidth: 200,\n    Cell: function Cell(_ref8) {\n      var value = _ref8.value;\n      return React.createElement(\"div\", {\n        className: \"JDscrool resvList__memo \".concat(value && value.length > 20 && \"resvList__memo--full\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, textReader(value));\n    }\n  }, {\n    Header: LANG(\"status\"),\n    accessor: \"_id\",\n    Cell: function Cell(_ref9) {\n      var original = _ref9.original;\n      var isNew = original.isNew,\n          isConfirm = original.isConfirm,\n          _id = original._id,\n          status = original.status,\n          payment = original.payment,\n          checkInInfo = original.checkInInfo;\n      var isCancled = status === BookingStatus.CANCEL;\n      var isProgressing = status === BookingStatus.PROGRESSING;\n      var isComplete = status === BookingStatus.COMPLETE;\n      var paymentStatus = payment.status;\n      var isPaied = paymentStatus === PaymentStatus.COMPLETE;\n      var isCheckIn = checkInInfo.isIn;\n      return React.createElement(\"div\", {\n        className: \"resvList__statusBadgesWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, newBookingMarkEnable && React.createElement(ConfirmBadgeWrap, {\n        className: \"JDstandard-space0\",\n        show: isNew && !isConfirm,\n        bookingId: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), isCheckIn && React.createElement(JDbadge, {\n        thema: \"new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, LANG(\"new\")), isCancled && React.createElement(JDbadge, {\n        thema: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, LANG(\"cancel\")), isProgressing && React.createElement(JDbadge, {\n        thema: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, LANG(\"proceeding\")), isProgressing || isPaied || React.createElement(JDbadge, {\n        thema: \"warn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, LANG(\"unPaid\")));\n    }\n  }, {\n    Header: LANG(\"detail\"),\n    accessor: \"_id\",\n    width: 60,\n    Cell: function Cell(_ref10) {\n      var value = _ref10.value;\n      return React.createElement(JDIcon, {\n        onClick: function onClick() {\n          bookingModalHook.openModal({\n            bookingId: value\n          });\n        },\n        size: IconSize.MEDIUM,\n        hover: true,\n        icon: \"person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      });\n    }\n  }];\n\n  var selectInputCompoent = function selectInputCompoent(_ref11) {\n    var checked = _ref11.checked,\n        id = _ref11.id;\n    var inId = id.replace(\"select-\", \"\");\n\n    var onChange = function onChange(flag) {\n      onToogleRow(inId);\n    };\n\n    return React.createElement(CheckBox, {\n      size: \"small\",\n      onChange: onChange,\n      checked: checked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    });\n  };\n\n  var selectAllInputComponentProps = function selectAllInputComponentProps(_ref12) {\n    var checked = _ref12.checked;\n    return React.createElement(CheckBox, {\n      onChange: onToogleAllRow,\n      checked: checked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    });\n  };\n\n  var SelectableJDtable = selectTableHOC(JDtable);\n  return React.createElement(\"div\", {\n    id: \"resvList\",\n    className: \"resvList container container--full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, LANG(\"bookingList\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    onClick: handleCancleBookingBtnClick,\n    label: LANG(\"cancelBooking\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleSendSmsBtnClick,\n    size: \"small\",\n    label: LANG(\"sendSMS\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleDeleteBookingBtnClick,\n    size: \"small\",\n    thema: \"error\",\n    label: LANG(\"delete_booking\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  })), networkStatus === 1 && loading ? React.createElement(Preloader, {\n    size: \"large\",\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }) : React.createElement(SelectableJDtable, Object.assign({}, ReactTableDefault, {\n    // 아래 숫자는 요청하는 쿼리와 같아야합니다.\n    defaultPageSize: 20,\n    toggleAll: function toggleAll() {},\n    toggleSelection: onToogleRow,\n    SelectAllInputComponent: selectAllInputComponentProps,\n    SelectInputComponent: selectInputCompoent,\n    isCheckable: true,\n    align: \"center\",\n    data: bookingsData,\n    selectAll: selectAll,\n    isSelected: function isSelected(key) {\n      return checkedIds.includes(key);\n    },\n    columns: TableColumns,\n    keyField: \"_id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  })), React.createElement(Preloader, {\n    size: FLOATING_PRELOADER_SIZE,\n    floating: true,\n    loading: networkStatus !== 1 && loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }), React.createElement(JDPagination, {\n    onPageChange: function onPageChange(_ref13) {\n      var selected = _ref13.selected;\n      setPage(selected + 1);\n    },\n    pageCount: inOr(pageInfo, \"totalPage\", 1),\n    pageRangeDisplayed: 1,\n    marginPagesDisplayed: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }), React.createElement(BookingModalWrap, {\n    key: \"\".concat(bookingModalHook.info.bookingId || \"BookingModaldefaultId\"),\n    modalHook: bookingModalHook,\n    context: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }), React.createElement(JDtoastModal, Object.assign({\n    confirm: true,\n    confirmCallBackFn: deleteModalCallBackFn\n  }, alertModalHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  })), React.createElement(SendSMSmodalWrap, {\n    modalHook: sendSmsModalHook,\n    context: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  })));\n};\n\nexport default ResvList;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/bookingHost/resvList/ResvList.tsx"],"names":["React","useState","Fragment","selectTableHOC","JDtable","ReactTableDefault","CheckBox","Button","JDIcon","IconSize","useModal","LANG","BookingModalWrap","JDbox","to4YMMDD","autoHyphen","JDtoastModal","PaymentStatus","PricingType","BookingStatus","FLOATING_PRELOADER_SIZE","DateFormat","moment","JDbadge","JDPagination","autoComma","SendSMSmodalWrap","Preloader","ConfirmBadgeWrap","textReader","getRoomSelectInfo","inOr","toast","ResvList","pageInfo","bookingsData","loading","updateBookingMu","deleteBookingMu","setPage","networkStatus","context","newBookingMarkEnable","houseConfig","bookingConfig","newBookingMark","enable","JDlang","checkedIds","setCheckedIds","selectAll","setSelectAll","bookingModalHook","alertModalHook","sendSmsModalHook","onToogleRow","key","includes","filter","value","onToogleAllRow","flag","bookingIds","map","booking","_id","updateSelecetedes","id","handleDeleteBookingBtnClick","openModal","txt","length","handleCancleBookingBtnClick","forEach","variables","bookingId","params","bookingStatus","CANCEL","handleSendSmsBtnClick","receivers","target","find","phoneNumber","warn","receiver","handleCompleteBookingBtnClick","COMPLETE","deleteModalCallBackFn","TableColumns","Header","accessor","Cell","local","format","WITH_TIME","original","roomTypes","selectInfoes","guests","selectInfo","roomTypeId","roomTypeName","count","female","male","roomCount","pricingType","DOMITORY","checkIn","checkOut","Booking","name","payment","totalPrice","status","PROGRESSING","minWidth","isNew","isConfirm","checkInInfo","isCancled","isProgressing","isComplete","paymentStatus","isPaied","isCheckIn","isIn","width","MEDIUM","selectInputCompoent","checked","inId","replace","onChange","selectAllInputComponentProps","SelectableJDtable","selected","info"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport selectTableHOC, {\r\n  SelectInputComponentProps,\r\n  SelectAllInputComponentProps\r\n} from \"react-table/lib/hoc/selectTable\";\r\nimport JDtable, {\r\n  ReactTableDefault,\r\n  JDcolumn\r\n} from \"../../../atoms/table/Table\";\r\nimport CheckBox from \"../../../atoms/forms/checkBox/CheckBox\";\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport JDIcon, { IconSize } from \"../../../atoms/icons/Icons\";\r\nimport { useModal, LANG } from \"../../../hooks/hook\";\r\nimport BookingModalWrap from \"../../../components/bookingModal/BookingModalWrap\";\r\nimport { IPageInfo, IBooking, IRoomType } from \"../../../types/interface\";\r\nimport JDbox from \"../../../atoms/box/JDbox\";\r\nimport { to4YMMDD } from \"../../../utils/setMidNight\";\r\nimport { MutationFn } from \"react-apollo\";\r\nimport {\r\n  deleteBooking,\r\n  deleteBookingVariables,\r\n  updateBookingVariables,\r\n  updateBooking\r\n} from \"../../../types/api\";\r\nimport autoHyphen from \"../../../utils/autoFormat\";\r\nimport { JDtoastModal } from \"../../../atoms/modal/Modal\";\r\nimport {\r\n  PaymentStatus,\r\n  PricingType,\r\n  BookingStatus,\r\n  FLOATING_PRELOADER_SIZE,\r\n  DateFormat\r\n} from \"../../../types/enum\";\r\nimport moment from \"moment\";\r\nimport JDbadge from \"../../../atoms/badge/Badge\";\r\nimport \"./ResvList.scss\";\r\nimport JDPagination from \"../../../atoms/pagination/Pagination\";\r\nimport { autoComma } from \"../../../utils/utils\";\r\nimport SendSMSmodalWrap, {\r\n  IModalSMSinfo\r\n} from \"../../../components/smsModal/SendSmsModalWrap\";\r\nimport Preloader from \"../../../atoms/preloader/Preloader\";\r\nimport ConfirmBadgeWrap from \"../../../components/confirmBadge/ConfirmBadgeWrap\";\r\nimport textReader from \"../../../utils/textReader\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport { IContext } from \"../BookingHostRouter\";\r\nimport { getRoomSelectInfo } from \"../../../utils/typeChanger\";\r\nimport { inOr } from \"../../../utils/C\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface IProps {\r\n  pageInfo: IPageInfo | undefined;\r\n  bookingsData: IBooking[];\r\n  loading: boolean;\r\n  updateBookingLoading: boolean;\r\n  deleteBookingLoading: boolean;\r\n  context: IContext;\r\n  networkStatus: NetworkStatus;\r\n  setPage(page: number): void;\r\n  deleteBookingMu: MutationFn<deleteBooking, deleteBookingVariables>;\r\n  updateBookingMu: MutationFn<updateBooking, updateBookingVariables>;\r\n}\r\n\r\nconst ResvList: React.SFC<IProps> = ({\r\n  pageInfo,\r\n  bookingsData,\r\n  loading,\r\n  updateBookingMu,\r\n  deleteBookingMu,\r\n  setPage,\r\n  networkStatus,\r\n  context\r\n}) => {\r\n  const {\r\n    houseConfig: {\r\n      bookingConfig: {\r\n        newBookingMark: { enable: newBookingMarkEnable }\r\n      }\r\n    },\r\n    JDlang\r\n  } = context;\r\n\r\n  const [checkedIds, setCheckedIds] = useState<string[]>([]);\r\n  const [selectAll, setSelectAll]: any = useState(false);\r\n  const bookingModalHook = useModal(false);\r\n  const alertModalHook = useModal(false);\r\n  const sendSmsModalHook = useModal<IModalSMSinfo>(false);\r\n\r\n  //   여기에 key가 들어오면 id배열에서 찾아서 넣거나 제거해줌\r\n  const onToogleRow = (key: string) => {\r\n    if (checkedIds.includes(key)) {\r\n      setCheckedIds([...checkedIds.filter(value => value !== key)]);\r\n    } else {\r\n      setCheckedIds([...checkedIds, key]);\r\n    }\r\n  };\r\n\r\n  //    모든 라인들에대한 아이디를 투글함\r\n  const onToogleAllRow = (flag: boolean) => {\r\n    const bookingIds = bookingsData.map(booking => booking._id);\r\n    const updateSelecetedes = bookingIds.map(id =>\r\n      checkedIds.includes(id) ? \"\" : id\r\n    );\r\n    setCheckedIds(updateSelecetedes);\r\n    setSelectAll(flag);\r\n  };\r\n\r\n  const handleDeleteBookingBtnClick = () => {\r\n    alertModalHook.openModal({\r\n      txt: `${LANG(\"nextResv\")}${checkedIds.length}${LANG(\"checkDelete\")}`\r\n    });\r\n  };\r\n\r\n  const handleCancleBookingBtnClick = () => {\r\n    checkedIds.forEach(id => {\r\n      updateBookingMu({\r\n        variables: {\r\n          bookingId: id,\r\n          params: {\r\n            bookingStatus: BookingStatus.CANCEL\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleSendSmsBtnClick = () => {\r\n    const receivers = checkedIds.map(id => {\r\n      const target = bookingsData.find(booking => booking._id === id);\r\n      if (target) {\r\n        return target.phoneNumber;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n\r\n    if (checkedIds.length !== receivers.length) {\r\n      toast.warn(\"JD1114 ERR\");\r\n    }\r\n\r\n    sendSmsModalHook.openModal({\r\n      receivers: receivers.filter(receiver => receiver),\r\n      bookingIds: checkedIds\r\n    });\r\n  };\r\n\r\n  const handleCompleteBookingBtnClick = () => {\r\n    checkedIds.forEach(id => {\r\n      updateBookingMu({\r\n        variables: {\r\n          bookingId: id,\r\n          params: {\r\n            bookingStatus: BookingStatus.COMPLETE\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const deleteModalCallBackFn = (flag: boolean) => {\r\n    if (flag) {\r\n      checkedIds.forEach(bookingId => {\r\n        deleteBookingMu({\r\n          variables: {\r\n            bookingId: bookingId\r\n          }\r\n        });\r\n      });\r\n      setCheckedIds([]);\r\n    }\r\n  };\r\n\r\n  const TableColumns: JDcolumn<IBooking>[] = [\r\n    {\r\n      Header: LANG(\"reservation_did_date\"),\r\n      accessor: \"createdAt\",\r\n      Cell: ({ value }) => {\r\n        return (\r\n          <div className=\"resvList__createdAt\">\r\n            {moment(value)\r\n              .local()\r\n              .format(DateFormat.WITH_TIME)}\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      Header: LANG(\"accommodation_info\"),\r\n      accessor: \"roomTypes\",\r\n      Cell: ({ value, original }) => {\r\n        const roomTypes: IRoomType[] = value;\r\n        const selectInfoes = getRoomSelectInfo(original.guests, roomTypes);\r\n\r\n        return selectInfoes.map(selectInfo => (\r\n          <JDbox\r\n            size=\"small\"\r\n            textAlign=\"center\"\r\n            key={`${original._id}${selectInfo.roomTypeId}`}\r\n          >\r\n            {selectInfo.roomTypeName}\r\n            <br />\r\n            <span>\r\n              {(() => {\r\n                const { female, male, roomCount } = selectInfo.count;\r\n                return (\r\n                  <span>\r\n                    {selectInfo.pricingType === PricingType.DOMITORY ? (\r\n                      <Fragment>\r\n                        {female !== 0 && (\r\n                          <span>\r\n                            {female}\r\n                            {LANG(\"female\")}{\" \"}\r\n                          </span>\r\n                        )}\r\n                        {male !== 0 && (\r\n                          <span>\r\n                            {male}\r\n                            {LANG(\"male\")}\r\n                          </span>\r\n                        )}\r\n                      </Fragment>\r\n                    ) : (\r\n                      <span>{roomCount}</span>\r\n                    )}\r\n                  </span>\r\n                );\r\n              })()}\r\n            </span>\r\n          </JDbox>\r\n        ));\r\n      }\r\n    },\r\n    {\r\n      Header: LANG(\"checkIn\"),\r\n      accessor: \"_id\",\r\n      Cell: ({ original }) => <div>{to4YMMDD(original.checkIn)}</div>\r\n    },\r\n    {\r\n      Header: LANG(\"checkOut\"),\r\n      accessor: \"_id\",\r\n      Cell: ({ original }) => <div>{to4YMMDD(original.checkOut)}</div>\r\n    },\r\n    {\r\n      Header: () => (\r\n        <div>\r\n          {LANG(\"booker_name\")}\r\n          <br />\r\n          {LANG(\"contact\")}\r\n        </div>\r\n      ),\r\n      accessor: \"name\",\r\n      Cell: ({ original }) => {\r\n        const Booking: IBooking = original;\r\n        return (\r\n          <div>\r\n            {Booking.name}\r\n            <br />\r\n            {autoHyphen(Booking.phoneNumber)}\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      Header: () => (\r\n        <div>\r\n          {LANG(\"usage_amount\")}\r\n          <br />\r\n          {LANG(\"payment_status\")}\r\n        </div>\r\n      ),\r\n      accessor: \"payment\",\r\n      Cell: ({ original }) => (\r\n        <div>\r\n          <span>\r\n            {autoComma(original.payment.totalPrice)}\r\n            {LANG(\"money_unit\")}\r\n          </span>\r\n          <br />\r\n          <span\r\n            className={`resvList__paymentStatus ${original.payment.status ===\r\n              PaymentStatus.PROGRESSING && \"resvList__paymentStatus--notYet\"}`}\r\n          >\r\n            {LANG(\"PaymentStatus\", original.payment.status)}\r\n          </span>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      Header: LANG(\"memo\"),\r\n      accessor: \"memo\",\r\n      minWidth: 200,\r\n      Cell: ({ value }) => (\r\n        <div\r\n          className={`JDscrool resvList__memo ${value &&\r\n            value.length > 20 &&\r\n            \"resvList__memo--full\"}`}\r\n        >\r\n          {textReader(value)}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      Header: LANG(\"status\"),\r\n      accessor: \"_id\",\r\n      Cell: ({ original }) => {\r\n        const {\r\n          isNew,\r\n          isConfirm,\r\n          _id,\r\n          status,\r\n          payment,\r\n          checkInInfo\r\n        } = original;\r\n        const isCancled = status === BookingStatus.CANCEL;\r\n        const isProgressing = status === BookingStatus.PROGRESSING;\r\n        const isComplete = status === BookingStatus.COMPLETE;\r\n        const { status: paymentStatus } = payment;\r\n        const isPaied = paymentStatus === PaymentStatus.COMPLETE;\r\n        const isCheckIn = checkInInfo.isIn;\r\n\r\n        return (\r\n          <div className=\"resvList__statusBadgesWrap\">\r\n            {newBookingMarkEnable && (\r\n              <ConfirmBadgeWrap\r\n                className=\"JDstandard-space0\"\r\n                show={isNew && !isConfirm}\r\n                bookingId={_id}\r\n              />\r\n            )}\r\n            {isCheckIn && <JDbadge thema={\"new\"}>{LANG(\"new\")}</JDbadge>}\r\n            {isCancled && <JDbadge thema={\"error\"}>{LANG(\"cancel\")}</JDbadge>}\r\n            {isProgressing && (\r\n              <JDbadge thema={\"grey\"}>{LANG(\"proceeding\")}</JDbadge>\r\n            )}\r\n            {/* {isComplete && (\r\n              <JDbadge thema={\"positive\"}>{LANG(\"good_status\")}</JDbadge>\r\n            )} */}\r\n            {isProgressing || isPaied || (\r\n              <JDbadge thema={\"warn\"}>{LANG(\"unPaid\")}</JDbadge>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      Header: LANG(\"detail\"),\r\n      accessor: \"_id\",\r\n      width: 60,\r\n      Cell: ({ value }) => (\r\n        <JDIcon\r\n          onClick={() => {\r\n            bookingModalHook.openModal({\r\n              bookingId: value\r\n            });\r\n          }}\r\n          size={IconSize.MEDIUM}\r\n          hover\r\n          icon=\"person\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const selectInputCompoent = ({ checked, id }: SelectInputComponentProps) => {\r\n    const inId = id.replace(\"select-\", \"\");\r\n    const onChange = (flag: boolean) => {\r\n      onToogleRow(inId);\r\n    };\r\n\r\n    return <CheckBox size=\"small\" onChange={onChange} checked={checked} />;\r\n  };\r\n\r\n  const selectAllInputComponentProps = ({\r\n    checked\r\n  }: SelectAllInputComponentProps) => (\r\n    <CheckBox onChange={onToogleAllRow} checked={checked} />\r\n  );\r\n\r\n  const SelectableJDtable = selectTableHOC(JDtable);\r\n  return (\r\n    <div id=\"resvList\" className=\"resvList container container--full\">\r\n      <div className=\"docs-section\">\r\n        <h3>{LANG(\"bookingList\")}</h3>\r\n        <div>\r\n          <Button\r\n            size=\"small\"\r\n            onClick={handleCancleBookingBtnClick}\r\n            label={LANG(\"cancelBooking\")}\r\n          />\r\n          <Button\r\n            onClick={handleSendSmsBtnClick}\r\n            size=\"small\"\r\n            label={LANG(\"sendSMS\")}\r\n          />\r\n          <Button\r\n            onClick={handleDeleteBookingBtnClick}\r\n            size=\"small\"\r\n            thema=\"error\"\r\n            label={LANG(\"delete_booking\")}\r\n          />\r\n        </div>\r\n        {networkStatus === 1 && loading ? (\r\n          <Preloader size=\"large\" loading={true} />\r\n        ) : (\r\n          <SelectableJDtable\r\n            {...ReactTableDefault}\r\n            // 아래 숫자는 요청하는 쿼리와 같아야합니다.\r\n            defaultPageSize={20}\r\n            toggleAll={() => {}}\r\n            toggleSelection={onToogleRow}\r\n            SelectAllInputComponent={selectAllInputComponentProps}\r\n            SelectInputComponent={selectInputCompoent}\r\n            isCheckable\r\n            align=\"center\"\r\n            data={bookingsData}\r\n            selectAll={selectAll}\r\n            isSelected={(key: string) => checkedIds.includes(key)}\r\n            columns={TableColumns}\r\n            keyField=\"_id\"\r\n          />\r\n        )}\r\n        <Preloader\r\n          size={FLOATING_PRELOADER_SIZE}\r\n          floating\r\n          loading={networkStatus !== 1 && loading}\r\n        />\r\n        <JDPagination\r\n          onPageChange={({ selected }: { selected: number }) => {\r\n            setPage(selected + 1);\r\n          }}\r\n          pageCount={inOr(pageInfo, \"totalPage\", 1)}\r\n          pageRangeDisplayed={1}\r\n          marginPagesDisplayed={4}\r\n        />\r\n        <BookingModalWrap\r\n          key={`${bookingModalHook.info.bookingId || \"BookingModaldefaultId\"}`}\r\n          modalHook={bookingModalHook}\r\n          context={context}\r\n        />\r\n        <JDtoastModal\r\n          confirm\r\n          confirmCallBackFn={deleteModalCallBackFn}\r\n          {...alertModalHook}\r\n        />\r\n        <SendSMSmodalWrap modalHook={sendSmsModalHook} context={context} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResvList;\r\n"]},"metadata":{},"sourceType":"module"}