{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\utils\\\\queryFormater.tsx\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport isEmpty from \"./isEmptyData\";\nimport ToastError from \"../components/toasts/ErrorToast\";\nimport { isIncludeKr } from \"./onCompletedMessage\";\n\nfunction queryDataFormater(data, queryName, dataName, falsyReturn) {\n  if (!isEmpty(data)) {\n    if (!isEmpty(data[queryName])) {\n      var inData = data[queryName];\n\n      if (dataName) {\n        if (inData[dataName]) {\n          return inData[dataName];\n        }\n      }\n\n      if (inData.error) {\n        if (isIncludeKr(inData.error)) {\n          toast.warn(inData.error);\n        } else {\n          toast.warn(React.createElement(ToastError, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }));\n        }\n\n        return falsyReturn;\n      }\n\n      return inData;\n    }\n  } // console.error('queryDataFormater: EMPTY DATA');\n\n\n  return falsyReturn;\n} // 페이지네이션 ok error 처리,\n// 순수정보까지 도달하게해줌\n//  원본 data 객체 찾기 기능이 있음\n\n\nexport default queryDataFormater; // export {copyFindReplace};","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/utils/queryFormater.tsx"],"names":["React","toast","isEmpty","ToastError","isIncludeKr","queryDataFormater","data","queryName","dataName","falsyReturn","inData","error","warn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;;AAEA,SAASC,iBAAT,CACEC,IADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,WAJF,EAKgD;AAC9C,MAAI,CAACP,OAAO,CAACI,IAAD,CAAZ,EAAoB;AAClB,QAAI,CAACJ,OAAO,CAACI,IAAI,CAACC,SAAD,CAAL,CAAZ,EAA+B;AAC7B,UAAMG,MAAW,GAAGJ,IAAI,CAACC,SAAD,CAAxB;;AACA,UAAIC,QAAJ,EAAc;AACZ,YAAIE,MAAM,CAACF,QAAD,CAAV,EAAsB;AACpB,iBAAOE,MAAM,CAACF,QAAD,CAAb;AACD;AACF;;AACD,UAAIE,MAAM,CAACC,KAAX,EAAkB;AAChB,YAAIP,WAAW,CAACM,MAAM,CAACC,KAAR,CAAf,EAA+B;AAC7BV,UAAAA,KAAK,CAACW,IAAN,CAAWF,MAAM,CAACC,KAAlB;AACD,SAFD,MAEO;AACLV,UAAAA,KAAK,CAACW,IAAN,CAAW,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AACD,eAAOH,WAAP;AACD;;AACD,aAAOC,MAAP;AACD;AACF,GAnB6C,CAoB9C;;;AACA,SAAOD,WAAP;AACD,C,CAED;AACA;AACA;;;AAEA,eAAeJ,iBAAf,C,CACA","sourcesContent":["import React from \"react\";\r\nimport {toast} from \"react-toastify\";\r\nimport isEmpty from \"./isEmptyData\";\r\nimport ToastError from \"../components/toasts/ErrorToast\";\r\nimport {isIncludeKr} from \"./onCompletedMessage\";\r\n\r\nfunction queryDataFormater<T, K extends keyof T, C extends keyof T[K], D>(\r\n  data: T | undefined,\r\n  queryName: K,\r\n  dataName: C | undefined,\r\n  falsyReturn: D\r\n): C extends undefined ? T[K] | D : T[K][C] | D {\r\n  if (!isEmpty(data)) {\r\n    if (!isEmpty(data[queryName])) {\r\n      const inData: any = data[queryName];\r\n      if (dataName) {\r\n        if (inData[dataName]) {\r\n          return inData[dataName];\r\n        }\r\n      }\r\n      if (inData.error) {\r\n        if (isIncludeKr(inData.error)) {\r\n          toast.warn(inData.error);\r\n        } else {\r\n          toast.warn(<ToastError />);\r\n        }\r\n        return falsyReturn as any;\r\n      }\r\n      return inData;\r\n    }\r\n  }\r\n  // console.error('queryDataFormater: EMPTY DATA');\r\n  return falsyReturn as any;\r\n}\r\n\r\n// 페이지네이션 ok error 처리,\r\n// 순수정보까지 도달하게해줌\r\n//  원본 data 객체 찾기 기능이 있음\r\n\r\nexport default queryDataFormater;\r\n// export {copyFindReplace};\r\n"]},"metadata":{},"sourceType":"module"}