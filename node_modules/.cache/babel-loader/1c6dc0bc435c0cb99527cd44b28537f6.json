{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\tooltipList\\\\TooltipList.tsx\";\nimport OutReactTooltip from \"react-tooltip\";\nimport $ from \"jquery\";\nimport React, { useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport ErrProtecter from \"../../utils/errProtect\";\nimport \"./TooltipList.scss\";\n\nvar ToolTipList = function ToolTipList(_ref) {\n  var tooltipRef = _ref.tooltipRef,\n      scrollNodeClass = _ref.scrollNodeClass,\n      children = _ref.children,\n      unPadding = _ref.unPadding,\n      className = _ref.className,\n      mode = _ref.mode,\n      props = _objectWithoutProperties(_ref, [\"tooltipRef\", \"scrollNodeClass\", \"children\", \"unPadding\", \"className\", \"mode\"]);\n\n  var defualtProps = {\n    hover: true,\n    globalEventOff: \"click\",\n    border: true\n  };\n  var classes = classNames(\"tooltipList\", className, {\n    \"tooltipList--unPadding\": unPadding,\n    \"tooltipList--noraml\": !mode\n  }); // 스크롤시 닫치게해줌\n\n  useEffect(function () {\n    if (tooltipRef) {\n      $(\".\".concat(scrollNodeClass)).on(\"scroll\", function () {\n        OutReactTooltip.hide(tooltipRef.current);\n      });\n    }\n  }, []);\n  return React.createElement(OutReactTooltip, Object.assign({\n    className: classes\n  }, props, {\n    effect: \"solid\"\n  }, defualtProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), children);\n};\n\nexport default ErrProtecter(ToolTipList);\nexport var ReactTooltip = OutReactTooltip;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/tooltipList/TooltipList.tsx"],"names":["OutReactTooltip","$","React","useEffect","classNames","ErrProtecter","ToolTipList","tooltipRef","scrollNodeClass","children","unPadding","className","mode","props","defualtProps","hover","globalEventOff","border","classes","on","hide","current","ReactTooltip"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,eAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAeC,SAAf,QAAuC,OAAvC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAO,oBAAP;;AAUA,IAAMC,WAA8B,GAAG,SAAjCA,WAAiC,OAQjC;AAAA,MAPJC,UAOI,QAPJA,UAOI;AAAA,MANJC,eAMI,QANJA,eAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,IADY;AAEnBC,IAAAA,cAAc,EAAE,OAFG;AAGnBC,IAAAA,MAAM,EAAE;AAHW,GAArB;AAMA,MAAMC,OAAO,GAAGd,UAAU,CAAC,aAAD,EAAgBO,SAAhB,EAA2B;AACnD,8BAA0BD,SADyB;AAEnD,2BAAuB,CAACE;AAF2B,GAA3B,CAA1B,CAPI,CAYJ;;AACAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,UAAJ,EAAgB;AACdN,MAAAA,CAAC,YAAKO,eAAL,EAAD,CAAyBW,EAAzB,CAA4B,QAA5B,EAAsC,YAAM;AAC1CnB,QAAAA,eAAe,CAACoB,IAAhB,CAAqBb,UAAU,CAACc,OAAhC;AACD,OAFD;AAGD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,SACE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAEH;AADb,KAEML,KAFN;AAGE,IAAA,MAAM,EAAC;AAHT,KAIMC,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGL,QANH,CADF;AAUD,CAvCD;;AAyCA,eAAeJ,YAAY,CAACC,WAAD,CAA3B;AACA,OAAO,IAAMgB,YAAY,GAAGtB,eAArB","sourcesContent":["import OutReactTooltip from \"react-tooltip\";\r\nimport $ from \"jquery\";\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport ErrProtecter from \"../../utils/errProtect\";\r\nimport \"./TooltipList.scss\";\r\n\r\ninterface IProps extends OutReactTooltip.Props {\r\n  className?: string;\r\n  scrollNodeClass?: string;\r\n  tooltipRef?: React.MutableRefObject<any>;\r\n  unPadding?: boolean;\r\n  mode?: \"custom\";\r\n}\r\n\r\nconst ToolTipList: React.SFC<IProps> = ({\r\n  tooltipRef,\r\n  scrollNodeClass,\r\n  children,\r\n  unPadding,\r\n  className,\r\n  mode,\r\n  ...props\r\n}) => {\r\n  const defualtProps = {\r\n    hover: true,\r\n    globalEventOff: \"click\",\r\n    border: true\r\n  };\r\n\r\n  const classes = classNames(\"tooltipList\", className, {\r\n    \"tooltipList--unPadding\": unPadding,\r\n    \"tooltipList--noraml\": !mode\r\n  });\r\n\r\n  // 스크롤시 닫치게해줌\r\n  useEffect(() => {\r\n    if (tooltipRef) {\r\n      $(`.${scrollNodeClass}`).on(\"scroll\", () => {\r\n        OutReactTooltip.hide(tooltipRef.current);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <OutReactTooltip\r\n      className={classes}\r\n      {...props}\r\n      effect=\"solid\"\r\n      {...defualtProps}\r\n    >\r\n      {children}\r\n    </OutReactTooltip>\r\n  );\r\n};\r\n\r\nexport default ErrProtecter(ToolTipList);\r\nexport const ReactTooltip = OutReactTooltip;\r\n"]},"metadata":{},"sourceType":"module"}