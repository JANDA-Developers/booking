{"ast":null,"code":"import { GuestTypeAdd } from \"./assigIntrerface\";\nimport { BookingStatus, PaymentStatus } from \"../../../../types/enum\";\nimport { instanceOfA } from \"../../../../utils/utils\";\nimport moment from \"moment\";\nimport { DEFAULT_BLOCK_OP } from \"../../../../types/defaults\"; //  TODO: 메모를 사용해서 데이터를 아끼자\n// 게스트 데이터를 달력에서 쓸수있는 Item 데이터로 변경 절차\n\nexport var guestsDataManufacturer = function guestsDataManufacturer(allGuestsData) {\n  var alloCateItems = [];\n  if (!allGuestsData) return alloCateItems;\n  var guestsData = allGuestsData.filter(function (guest) {\n    return guest.booking.status !== BookingStatus.CANCEL;\n  });\n  guestsData.forEach(function (guestData, index) {\n    if (guestData && guestData.booking && guestData.roomType && guestData.room) {\n      var gender = null;\n      var bedIndex = 0;\n      var _id = guestData._id,\n          roomType = guestData.roomType,\n          booking = guestData.booking,\n          room = guestData.room;\n      var bookingId = booking._id,\n          checkInInfo = booking.checkInInfo,\n          isNew = booking.isNew,\n          isConfirm = booking.isConfirm,\n          status = booking.status,\n          name = booking.name,\n          checkIn = booking.checkIn,\n          checkOut = booking.checkOut,\n          memo = booking.memo,\n          payment = booking.payment;\n      var paymentStatus = payment.status;\n      var isUnpaid = paymentStatus !== PaymentStatus.COMPLETE;\n\n      if (instanceOfA(guestData, \"gender\")) {\n        gender = guestData.gender;\n        bedIndex = guestData.bedIndex;\n      }\n\n      var pushItem = {\n        id: _id,\n        itemIndex: index,\n        name: name,\n        loading: false,\n        bookingId: bookingId,\n        checkInInfo: checkInInfo.isIn,\n        gender: gender,\n        status: status,\n        roomTypeId: roomType._id,\n        showNewBadge: isNew && !isConfirm,\n        roomId: room._id,\n        temp: true,\n        group: room._id + bedIndex,\n        start: moment(checkIn).valueOf(),\n        end: moment(checkOut).valueOf(),\n        canSelect: true,\n        canMove: status !== BookingStatus.PROGRESSING,\n        type: GuestTypeAdd.GUEST,\n        bedIndex: bedIndex,\n        memo: memo || undefined,\n        isUnpaid: isUnpaid,\n        blockOption: Object.assign({}, guestData.blockOption || DEFAULT_BLOCK_OP),\n        showEffect: false\n      };\n      alloCateItems.push(pushItem);\n    }\n  });\n  return alloCateItems;\n};","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/assig/components/guestsDataManufacturer.tsx"],"names":["GuestTypeAdd","BookingStatus","PaymentStatus","instanceOfA","moment","DEFAULT_BLOCK_OP","guestsDataManufacturer","allGuestsData","alloCateItems","guestsData","filter","guest","booking","status","CANCEL","forEach","guestData","index","roomType","room","gender","bedIndex","_id","bookingId","checkInInfo","isNew","isConfirm","name","checkIn","checkOut","memo","payment","paymentStatus","isUnpaid","COMPLETE","pushItem","id","itemIndex","loading","isIn","roomTypeId","showNewBadge","roomId","temp","group","start","valueOf","end","canSelect","canMove","PROGRESSING","type","GUEST","undefined","blockOption","Object","assign","showEffect","push"],"mappings":"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","sourcesContent":["import { IAssigItem, GuestTypeAdd } from \"./assigIntrerface\";\r\nimport { BookingStatus, Gender, PaymentStatus } from \"../../../../types/enum\";\r\nimport { instanceOfA } from \"../../../../utils/utils\";\r\nimport { IGuestD, IGuest } from \"../../../../types/interface\";\r\nimport moment from \"moment\";\r\nimport { DEFAULT_BLOCK_OP } from \"../../../../types/defaults\";\r\n\r\n//  TODO: 메모를 사용해서 데이터를 아끼자\r\n// 게스트 데이터를 달력에서 쓸수있는 Item 데이터로 변경 절차\r\nexport const guestsDataManufacturer = (allGuestsData: IGuest[]) => {\r\n  const alloCateItems: IAssigItem[] = [];\r\n  if (!allGuestsData) return alloCateItems;\r\n\r\n  const guestsData = allGuestsData.filter(\r\n    guest => guest.booking.status !== BookingStatus.CANCEL\r\n  );\r\n\r\n  guestsData.forEach((guestData, index) => {\r\n    if (\r\n      guestData &&\r\n      guestData.booking &&\r\n      guestData.roomType &&\r\n      guestData.room\r\n    ) {\r\n      let gender: Gender | null = null;\r\n      let bedIndex = 0;\r\n      const { _id, roomType, booking, room } = guestData;\r\n      const {\r\n        _id: bookingId,\r\n        checkInInfo,\r\n        isNew,\r\n        isConfirm,\r\n        status,\r\n        name,\r\n        checkIn,\r\n        checkOut,\r\n        memo,\r\n        payment\r\n      } = booking;\r\n\r\n      const { status: paymentStatus } = payment;\r\n      const isUnpaid = paymentStatus !== PaymentStatus.COMPLETE;\r\n\r\n      if (instanceOfA<IGuestD>(guestData, \"gender\")) {\r\n        gender = guestData.gender;\r\n        bedIndex = guestData.bedIndex;\r\n      }\r\n      const pushItem: IAssigItem = {\r\n        id: _id,\r\n        itemIndex: index,\r\n        name: name,\r\n        loading: false,\r\n        bookingId: bookingId,\r\n        checkInInfo: checkInInfo.isIn,\r\n        gender: gender,\r\n        status: status,\r\n        roomTypeId: roomType._id,\r\n        showNewBadge: isNew && !isConfirm,\r\n        roomId: room._id,\r\n        temp: true,\r\n        group: room._id + bedIndex,\r\n        start: moment(checkIn).valueOf(),\r\n        end: moment(checkOut).valueOf(),\r\n        canSelect: true,\r\n        canMove: status !== BookingStatus.PROGRESSING,\r\n        type: GuestTypeAdd.GUEST,\r\n        bedIndex: bedIndex,\r\n        memo: memo || undefined,\r\n        isUnpaid,\r\n        blockOption: Object.assign(\r\n          {},\r\n          guestData.blockOption || DEFAULT_BLOCK_OP\r\n        ),\r\n        showEffect: false\r\n      };\r\n      alloCateItems.push(pushItem);\r\n    }\r\n  });\r\n\r\n  return alloCateItems;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}