{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\Memo\\\\component\\\\MemoEditBox.tsx\";\nimport React, { useState } from \"react\";\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\nimport Button from \"../../../atoms/button/Button\";\nimport CheckBox from \"../../../atoms/forms/checkBox/CheckBox\";\nimport { LANG } from \"../../../hooks/hook\";\n\nvar MemoEditBox = function MemoEditBox(_ref) {\n  var memo = _ref.memo,\n      handleCreate = _ref.handleCreate,\n      handleUpdate = _ref.handleUpdate,\n      add = _ref.add,\n      setEditMode = _ref.setEditMode;\n\n  var _useState = useState(memo.enableAlert),\n      _useState2 = _slicedToArray(_useState, 2),\n      enableAlert = _useState2[0],\n      setenableAlert = _useState2[1];\n\n  var _useState3 = useState(memo.text),\n      _useState4 = _slicedToArray(_useState3, 2),\n      memoText = _useState4[0],\n      SetMemoText = _useState4[1];\n\n  return React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    label: LANG(\"memo_content\"),\n    size: \"fullWidth\",\n    textarea: true,\n    autoHeight: true,\n    value: memoText,\n    onChange: SetMemoText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"JDflex--vCenter JDflex--between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"JDflex--vCenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"data-tip\": \"\",\n    \"data-for\": \"siginificantExplicateTooltip\",\n    className: \"JDstandard-space\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, LANG(\"noti_setting\")), React.createElement(CheckBox, {\n    className: \"JDstandard-margin0\",\n    onChange: setenableAlert,\n    checked: enableAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(Button, {\n    thema: \"primary\",\n    size: \"small\",\n    label: LANG(\"completed\"),\n    onClick: function onClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      setEditMode(false); // üëø assing or ÏÉàÎ°úÏö¥ Î™®ÎìàÏùÑ Ïç®Î≥¥Ïûê\n\n      memo.text = memoText;\n      memo.enableAlert = enableAlert;\n\n      if (add) {\n        handleCreate(memo);\n      } else {\n        handleUpdate(memo);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};\n\nexport default MemoEditBox;","map":{"version":3,"sources":["C:/Users/ÍπÄÎØºÏû¨/Desktop/projects/jd-api-server-client/src/components/Memo/component/MemoEditBox.tsx"],"names":["React","useState","InputText","Button","CheckBox","LANG","MemoEditBox","memo","handleCreate","handleUpdate","add","setEditMode","enableAlert","setenableAlert","text","memoText","SetMemoText","flex","e","preventDefault","stopPropagation"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,QAAP,MAAqB,wCAArB;AACA,SAAQC,IAAR,QAAmB,qBAAnB;;AAUA,IAAMC,WAA6B,GAAG,SAAhCA,WAAgC,OAMhC;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,GAEI,QAFJA,GAEI;AAAA,MADJC,WACI,QADJA,WACI;;AAAA,kBACkCV,QAAQ,CAACM,IAAI,CAACK,WAAN,CAD1C;AAAA;AAAA,MACGA,WADH;AAAA,MACgBC,cADhB;;AAAA,mBAE4BZ,QAAQ,CAACM,IAAI,CAACO,IAAN,CAFpC;AAAA;AAAA,MAEGC,QAFH;AAAA,MAEaC,WAFb;;AAIJ,SACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEZ,IAAI,CAAC,cAAD,CADb;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,UAAU,MAJZ;AAKE,IAAA,KAAK,EAAEU,QALT;AAME,IAAA,QAAQ,EAAEC,WANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,gBAAS,EADX;AAEE,gBAAS,8BAFX;AAGE,IAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGX,IAAI,CAAC,cAAD,CALP,CADF,EAQE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,QAAQ,EAAEQ,cAFZ;AAGE,IAAA,OAAO,EAAED,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEP,IAAI,CAAC,WAAD,CAHb;AAIE,IAAA,OAAO,EAAE,iBAAAa,CAAC,EAAI;AACZA,MAAAA,CAAC,CAACC,cAAF;AACAD,MAAAA,CAAC,CAACE,eAAF;AACAT,MAAAA,WAAW,CAAC,KAAD,CAAX,CAHY,CAIZ;;AACAJ,MAAAA,IAAI,CAACO,IAAL,GAAYC,QAAZ;AACAR,MAAAA,IAAI,CAACK,WAAL,GAAmBA,WAAnB;;AACA,UAAIF,GAAJ,EAAS;AACPF,QAAAA,YAAY,CAACD,IAAD,CAAZ;AACD,OAFD,MAEO;AACLE,QAAAA,YAAY,CAACF,IAAD,CAAZ;AACD;AACF,KAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CATF,CADF;AA8CD,CAxDD;;AAyDA,eAAeD,WAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\r\nimport {getMemos_GetMemos_memos} from \"../../../types/api\";\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport CheckBox from \"../../../atoms/forms/checkBox/CheckBox\";\r\nimport {LANG} from \"../../../hooks/hook\";\r\n\r\ninterface Iprops {\r\n  memo: getMemos_GetMemos_memos;\r\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\r\n  handleCreate: (memo: getMemos_GetMemos_memos) => void;\r\n  handleUpdate: (memo: getMemos_GetMemos_memos) => void;\r\n  add?: boolean;\r\n}\r\n\r\nconst MemoEditBox: React.FC<Iprops> = ({\r\n  memo,\r\n  handleCreate,\r\n  handleUpdate,\r\n  add,\r\n  setEditMode\r\n}) => {\r\n  const [enableAlert, setenableAlert] = useState(memo.enableAlert);\r\n  const [memoText, SetMemoText] = useState(memo.text);\r\n\r\n  return (\r\n    <div style={{flex: 1}}>\r\n      <InputText\r\n        label={LANG(\"memo_content\")}\r\n        size=\"fullWidth\"\r\n        textarea\r\n        autoHeight\r\n        value={memoText}\r\n        onChange={SetMemoText}\r\n      />\r\n      <div className=\"JDflex--vCenter JDflex--between\">\r\n        <span className=\"JDflex--vCenter\">\r\n          <span\r\n            data-tip=\"\"\r\n            data-for=\"siginificantExplicateTooltip\"\r\n            className=\"JDstandard-space\"\r\n          >\r\n            {LANG(\"noti_setting\")}\r\n          </span>\r\n          <CheckBox\r\n            className=\"JDstandard-margin0\"\r\n            onChange={setenableAlert}\r\n            checked={enableAlert}\r\n          />\r\n        </span>\r\n        <Button\r\n          thema=\"primary\"\r\n          size=\"small\"\r\n          label={LANG(\"completed\")}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setEditMode(false);\r\n            // üëø assing or ÏÉàÎ°úÏö¥ Î™®ÎìàÏùÑ Ïç®Î≥¥Ïûê\r\n            memo.text = memoText;\r\n            memo.enableAlert = enableAlert;\r\n            if (add) {\r\n              handleCreate(memo);\r\n            } else {\r\n              handleUpdate(memo);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MemoEditBox;\r\n"]},"metadata":{},"sourceType":"module"}