{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\dailyAssjg\\\\components\\\\DragBoxPlace.tsx\";\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport DragItem from \"./DragItem\";\nimport classNames from \"classnames\";\nimport { instanceOfA, s4 } from \"../../../utils/utils\";\nexport var DragBoxPlace = function DragBoxPlace(_ref) {\n  var room = _ref.room,\n      onDrop = _ref.onDrop,\n      itemsInPlace = _ref.itemsInPlace,\n      isFull = _ref.isFull,\n      roomType = _ref.roomType,\n      place = _ref.place;\n\n  var _useDrop = useDrop({\n    accept: roomType._id,\n    drop: function drop(item) {\n      return onDrop(item, room, place);\n    },\n    collect: function collect(monitor) {\n      // ⭐️⭐️⭐️ (물어볼가치가 있다면 && 드래그중 && 해당아이템을 이미 물어보지 않았다면) => query\n      return {\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop()\n      };\n    }\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      _useDrop2$ = _useDrop2[0],\n      isOver = _useDrop2$.isOver,\n      canDrop = _useDrop2$.canDrop,\n      drop = _useDrop2[1];\n\n  var dragItemManufacter = function dragItemManufacter(item) {\n    if (!item) return null;\n\n    if (instanceOfA(item, \"roomType\")) {\n      return Object.assign({\n        type: item.roomType._id\n      }, item);\n    } else {\n      return Object.assign({\n        type: \"block\"\n      }, item);\n    }\n  };\n\n  var classes = classNames(\"dailyAssig__place\", undefined, {\n    \"dailyAssig__place--full\": isFull,\n    \"dailyAssig__place--canDrop\": canDrop,\n    \"dailyAssig__place--canAssigAndOver\": canDrop && isOver || isFull\n  });\n  return React.createElement(\"div\", {\n    className: classes,\n    ref: drop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, itemsInPlace.map(function (item) {\n    return React.createElement(DragItem, {\n      key: item === null ? s4() : item._id,\n      item: dragItemManufacter(item),\n      roomType: roomType,\n      room: room,\n      place: place,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  }));\n};\nexport default DragBoxPlace;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/dailyAssjg/components/DragBoxPlace.tsx"],"names":["React","useDrop","DragItem","classNames","instanceOfA","s4","DragBoxPlace","room","onDrop","itemsInPlace","isFull","roomType","place","accept","_id","drop","item","collect","monitor","isOver","canDrop","dragItemManufacter","Object","assign","type","classes","undefined","map"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAA0C,WAA1C;AAOA,OAAOC,QAAP,MAAsC,YAAtC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,WAAR,EAAqBC,EAArB,QAA8B,sBAA9B;AAWA,OAAO,IAAMC,YAAqC,GAAG,SAAxCA,YAAwC,OAO/C;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,KACI,QADJA,KACI;;AAAA,iBAC8BX,OAAO,CAAC;AACxCY,IAAAA,MAAM,EAAEF,QAAQ,CAACG,GADuB;AAExCC,IAAAA,IAAI,EAAE,cAACC,IAAD;AAAA,aAAeR,MAAM,CAACQ,IAAD,EAAOT,IAAP,EAAaK,KAAb,CAArB;AAAA,KAFkC;AAGxCK,IAAAA,OAAO,EAAE,iBAAAC,OAAO,EAAI;AAClB;AACA,aAAO;AACLC,QAAAA,MAAM,EAAED,OAAO,CAACC,MAAR,EADH;AAELC,QAAAA,OAAO,EAAEF,OAAO,CAACE,OAAR;AAFJ,OAAP;AAID;AATuC,GAAD,CADrC;AAAA;AAAA;AAAA,MACID,MADJ,cACIA,MADJ;AAAA,MACYC,OADZ,cACYA,OADZ;AAAA,MACsBL,IADtB;;AAaJ,MAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBL,IADyB,EAE8B;AACvD,QAAI,CAACA,IAAL,EAAW,OAAO,IAAP;;AACX,QAAIZ,WAAW,CAAKY,IAAL,EAAW,UAAX,CAAf,EAAuC;AACrC,aAAOM,MAAM,CAACC,MAAP,CAAc;AAACC,QAAAA,IAAI,EAAER,IAAI,CAACL,QAAL,CAAcG;AAArB,OAAd,EAAyCE,IAAzC,CAAP;AACD,KAFD,MAEO;AACL,aAAOM,MAAM,CAACC,MAAP,CAAc;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAd,EAA+BR,IAA/B,CAAP;AACD;AACF,GATD;;AAWA,MAAMS,OAAO,GAAGtB,UAAU,CAAC,mBAAD,EAAsBuB,SAAtB,EAAiC;AACzD,+BAA2BhB,MAD8B;AAEzD,kCAA8BU,OAF2B;AAGzD,0CAAuCA,OAAO,IAAID,MAAZ,IAAuBT;AAHJ,GAAjC,CAA1B;AAMA,SACE;AAAK,IAAA,SAAS,EAAEe,OAAhB;AAAyB,IAAA,GAAG,EAAEV,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,YAAY,CAACkB,GAAb,CAAiB,UAAAX,IAAI,EAAI;AACxB,WACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,IAAI,KAAK,IAAT,GAAgBX,EAAE,EAAlB,GAAuBW,IAAI,CAACF,GADnC;AAEE,MAAA,IAAI,EAAEO,kBAAkB,CAACL,IAAD,CAF1B;AAGE,MAAA,QAAQ,EAAEL,QAHZ;AAIE,MAAA,IAAI,EAAEJ,IAJR;AAKE,MAAA,KAAK,EAAEK,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVA,CADH,CADF;AAeD,CApDM;AAsDP,eAAeN,YAAf","sourcesContent":["import React from \"react\";\r\nimport {useDrop, DragObjectWithType} from \"react-dnd\";\r\nimport {\r\n  getAllRoomTypeWithGuest_GetAllRoomType_roomTypes_rooms as IR,\r\n  getAllRoomTypeWithGuest_GetGuests_guests as IG,\r\n  getAllRoomTypeWithGuest_GetAllRoomType_roomTypes as IRT,\r\n  getAllRoomTypeWithGuest_GetBlocks_blocks as IB\r\n} from \"../../../types/api\";\r\nimport DragItem, {IDragItemProp} from \"./DragItem\";\r\nimport classNames from \"classnames\";\r\nimport {instanceOfA, s4} from \"../../../utils/utils\";\r\n\r\ninterface IDragBoxPlace {\r\n  room: IR;\r\n  onDrop: (item: IG & DragObjectWithType, room: IR, place: number) => void;\r\n  itemsInPlace: (IG | IB | null)[];\r\n  roomType: IRT;\r\n  isFull: boolean;\r\n  place: number;\r\n}\r\n\r\nexport const DragBoxPlace: React.FC<IDragBoxPlace> = ({\r\n  room,\r\n  onDrop,\r\n  itemsInPlace,\r\n  isFull,\r\n  roomType,\r\n  place\r\n}) => {\r\n  const [{isOver, canDrop}, drop] = useDrop({\r\n    accept: roomType._id,\r\n    drop: (item: any) => onDrop(item, room, place),\r\n    collect: monitor => {\r\n      // ⭐️⭐️⭐️ (물어볼가치가 있다면 && 드래그중 && 해당아이템을 이미 물어보지 않았다면) => query\r\n      return {\r\n        isOver: monitor.isOver(),\r\n        canDrop: monitor.canDrop()\r\n      };\r\n    }\r\n  });\r\n\r\n  const dragItemManufacter = (\r\n    item: IG | IB | null\r\n  ): (IG & IDragItemProp) | (IB & IDragItemProp) | null => {\r\n    if (!item) return null;\r\n    if (instanceOfA<IG>(item, \"roomType\")) {\r\n      return Object.assign({type: item.roomType._id}, item);\r\n    } else {\r\n      return Object.assign({type: \"block\"}, item);\r\n    }\r\n  };\r\n\r\n  const classes = classNames(\"dailyAssig__place\", undefined, {\r\n    \"dailyAssig__place--full\": isFull,\r\n    \"dailyAssig__place--canDrop\": canDrop,\r\n    \"dailyAssig__place--canAssigAndOver\": (canDrop && isOver) || isFull\r\n  });\r\n\r\n  return (\r\n    <div className={classes} ref={drop}>\r\n      {itemsInPlace.map(item => {\r\n        return (\r\n          <DragItem\r\n            key={item === null ? s4() : item._id}\r\n            item={dragItemManufacter(item)}\r\n            roomType={roomType}\r\n            room={room}\r\n            place={place}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragBoxPlace;\r\n"]},"metadata":{},"sourceType":"module"}