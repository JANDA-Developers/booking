{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\Memo\\\\Memo.tsx\";\nimport React, { useEffect } from \"react\";\nimport MemoBox from \"./component/MemoBox\";\nimport { isEmpty, s4 } from \"../../utils/utils\";\nimport { DEFAULT_MEMO } from \"../../types/defaults\";\nimport \"./Memo.scss\";\nimport Preloader from \"../../atoms/preloader/Preloader\";\nimport isLast from \"../../utils/isLast\";\nimport JDToolTip, { ReactTooltip } from \"../../atoms/tooltip/Tooltip\";\nimport { LANG } from \"../../hooks/hook\";\n\nvar Memo = function Memo(_ref) {\n  var memos = _ref.memos,\n      context = _ref.context,\n      createMemoMu = _ref.createMemoMu,\n      deleteMemoMu = _ref.deleteMemoMu,\n      updateMemoMu = _ref.updateMemoMu,\n      mutationLoading = _ref.mutationLoading,\n      houseId = _ref.houseId,\n      memoType = _ref.memoType,\n      showOnlyAlert = _ref.showOnlyAlert;\n\n  var handleCreate = function handleCreate(memo) {\n    if (!memo.text) return;\n    createMemoMu({\n      variables: {\n        houseId: houseId,\n        createMemoParams: {\n          memoType: memoType,\n          text: memo.text,\n          title: memo.title,\n          enableAlert: memo.enableAlert\n        }\n      }\n    });\n  };\n\n  var handleDelete = function handleDelete(memo) {\n    deleteMemoMu({\n      variables: {\n        memoId: memo._id\n      }\n    });\n  };\n\n  var handleUpdate = function handleUpdate(memo) {\n    if (!memo.text) return;\n    updateMemoMu({\n      variables: {\n        memoId: memo._id,\n        updateMemoParams: {\n          memoType: memoType,\n          text: memo.text,\n          title: memo.title,\n          enableAlert: !memo.enableAlert\n        }\n      }\n    });\n  };\n\n  var handleImportToogle = function handleImportToogle(memo) {\n    updateMemoMu({\n      variables: {\n        memoId: memo._id,\n        updateMemoParams: {\n          memoType: memoType,\n          text: memo.text,\n          enableAlert: !memo.enableAlert\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    ReactTooltip.rebuild();\n  });\n  var sharedMemoBoxProps = {\n    handleImportToogle: handleImportToogle,\n    handleCreate: handleCreate,\n    handleDelete: handleDelete,\n    handleUpdate: handleUpdate\n  };\n\n  var filteredMemos = function () {\n    if (showOnlyAlert) return memos.filter(function (memo) {\n      return memo.enableAlert;\n    });\n    return memos;\n  }();\n\n  return React.createElement(\"div\", {\n    className: \"memo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(MemoBox, Object.assign({}, sharedMemoBoxProps, {\n    memo: DEFAULT_MEMO,\n    add: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }))), React.createElement(JDToolTip, {\n    type: \"dark\",\n    effect: \"solid\",\n    id: \"siginificantExplicateTooltip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, LANG(\"the_memo_gives_an_alarm_on_the_next_connection\")), React.createElement(Preloader, {\n    floating: true,\n    size: \"tiny\",\n    loading: mutationLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), !isEmpty(filteredMemos) ? filteredMemos.map(function (memo, index) {\n    return React.createElement(MemoBox, Object.assign({\n      className: isLast(index, memos) ? \"JDmargin-bottom0\" : undefined\n    }, sharedMemoBoxProps, {\n      key: s4(),\n      memo: memo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }));\n  }) : React.createElement(\"span\", {\n    className: \"JDtextColor--placeHolder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, LANG(\"no_notes_are_currently_created\")));\n};\n\nexport default Memo;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/Memo/Memo.tsx"],"names":["React","useEffect","MemoBox","isEmpty","s4","DEFAULT_MEMO","Preloader","isLast","JDToolTip","ReactTooltip","LANG","Memo","memos","context","createMemoMu","deleteMemoMu","updateMemoMu","mutationLoading","houseId","memoType","showOnlyAlert","handleCreate","memo","text","variables","createMemoParams","title","enableAlert","handleDelete","memoId","_id","handleUpdate","updateMemoParams","handleImportToogle","rebuild","sharedMemoBoxProps","filteredMemos","filter","map","index","undefined"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {\r\n  createMemo,\r\n  createMemoVariables,\r\n  deleteMemo,\r\n  deleteMemoVariables,\r\n  updateMemo,\r\n  updateMemoVariables,\r\n  getMemos_GetMemos_memos\r\n} from \"../../types/api\";\r\nimport {MutationFn} from \"react-apollo\";\r\nimport {MemoType} from \"../../types/enum\";\r\nimport MemoBox from \"./component/MemoBox\";\r\nimport {isEmpty, s4} from \"../../utils/utils\";\r\nimport {DEFAULT_MEMO} from \"../../types/defaults\";\r\nimport \"./Memo.scss\";\r\nimport Preloader from \"../../atoms/preloader/Preloader\";\r\nimport isLast from \"../../utils/isLast\";\r\nimport JDToolTip, {ReactTooltip} from \"../../atoms/tooltip/Tooltip\";\r\nimport {useModal, LANG} from \"../../hooks/hook\";\r\nimport MemoAlertModal from \"./component/MemoAlertModal\";\r\nimport {IContext} from \"../../pages/bookingHost/BookingHostRouter\";\r\n\r\nexport interface IConfigMemo {\r\n  showOnlyAlert?: boolean;\r\n}\r\n\r\ninterface Iprops {\r\n  createMemoMu: MutationFn<createMemo, createMemoVariables>;\r\n  deleteMemoMu: MutationFn<deleteMemo, deleteMemoVariables>;\r\n  updateMemoMu: MutationFn<updateMemo, updateMemoVariables>;\r\n  mutationLoading: boolean;\r\n  memos: getMemos_GetMemos_memos[];\r\n  houseId: string;\r\n  memoType: MemoType;\r\n  context: IContext;\r\n}\r\n\r\nconst Memo: React.FC<Iprops & IConfigMemo> = ({\r\n  memos,\r\n  context,\r\n  createMemoMu,\r\n  deleteMemoMu,\r\n  updateMemoMu,\r\n  mutationLoading,\r\n  houseId,\r\n  memoType,\r\n  showOnlyAlert\r\n}) => {\r\n  const handleCreate = (memo: getMemos_GetMemos_memos) => {\r\n    if (!memo.text) return;\r\n    createMemoMu({\r\n      variables: {\r\n        houseId,\r\n        createMemoParams: {\r\n          memoType,\r\n          text: memo.text,\r\n          title: memo.title,\r\n          enableAlert: memo.enableAlert\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDelete = (memo: getMemos_GetMemos_memos) => {\r\n    deleteMemoMu({\r\n      variables: {\r\n        memoId: memo._id\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleUpdate = (memo: getMemos_GetMemos_memos) => {\r\n    if (!memo.text) return;\r\n    updateMemoMu({\r\n      variables: {\r\n        memoId: memo._id,\r\n        updateMemoParams: {\r\n          memoType,\r\n          text: memo.text,\r\n          title: memo.title,\r\n          enableAlert: !memo.enableAlert\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleImportToogle = (memo: getMemos_GetMemos_memos) => {\r\n    updateMemoMu({\r\n      variables: {\r\n        memoId: memo._id,\r\n        updateMemoParams: {\r\n          memoType,\r\n          text: memo.text,\r\n          enableAlert: !memo.enableAlert\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    ReactTooltip.rebuild();\r\n  });\r\n\r\n  const sharedMemoBoxProps = {\r\n    handleImportToogle,\r\n    handleCreate,\r\n    handleDelete,\r\n    handleUpdate\r\n  };\r\n\r\n  const filteredMemos = (() => {\r\n    if (showOnlyAlert) return memos.filter(memo => memo.enableAlert);\r\n    return memos;\r\n  })();\r\n\r\n  return (\r\n    <div className=\"memo\">\r\n      <div>\r\n        <MemoBox {...sharedMemoBoxProps} memo={DEFAULT_MEMO} add={true} />\r\n      </div>\r\n      <JDToolTip type=\"dark\" effect=\"solid\" id=\"siginificantExplicateTooltip\">\r\n        {LANG(\"the_memo_gives_an_alarm_on_the_next_connection\")}\r\n      </JDToolTip>\r\n      <Preloader floating size={\"tiny\"} loading={mutationLoading} />\r\n      {!isEmpty(filteredMemos) ? (\r\n        filteredMemos.map((memo, index) => (\r\n          <MemoBox\r\n            className={isLast(index, memos) ? \"JDmargin-bottom0\" : undefined}\r\n            {...sharedMemoBoxProps}\r\n            key={s4()}\r\n            memo={memo}\r\n          />\r\n        ))\r\n      ) : (\r\n        <span className=\"JDtextColor--placeHolder\">\r\n          {LANG(\"no_notes_are_currently_created\")}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Memo;\r\n"]},"metadata":{},"sourceType":"module"}