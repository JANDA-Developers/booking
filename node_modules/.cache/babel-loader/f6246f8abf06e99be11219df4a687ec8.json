{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\bookingHost\\\\roomConfig\\\\components\\\\RoomTypeModal.tsx\";\n\n/* eslint-disable react/prop-types */\nimport React, { useState, Fragment } from \"react\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"../../../../atoms/modal/Modal\";\nimport SelectBox from \"../../../../atoms/forms/selectBox/SelectBox\";\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\nimport Button from \"../../../../atoms/button/Button\";\nimport JDLabel from \"../../../../atoms/label/JDLabel\";\nimport ImageUploader from \"../../../../atoms/imageUploader/ImageUploader\";\nimport { MAX_PEOPLE_COUNT_OP_FN, ROOM_GENDER_OP, PRICING_TYPE_OP } from \"../../../../types/enum\";\nimport { useImageUploader, useModal, LANG } from \"../../../../hooks/hook\";\nimport Preloader from \"../../../../atoms/preloader/Preloader\";\nimport PriceWarnModal from \"../../../../components/priceWarnModal.tsx/PriceWarnModal\";\n\nvar RoomTypeModal = function RoomTypeModal(_ref) {\n  var modalHook = _ref.modalHook,\n      context = _ref.context,\n      loading = _ref.loading,\n      mode = _ref.mode,\n      mutationLoading = _ref.mutationLoading,\n      onCreateFn = _ref.onCreateFn,\n      onUpdateFn = _ref.onUpdateFn,\n      onDelteFn = _ref.onDelteFn,\n      createRoomTypeMutation = _ref.createRoomTypeMutation,\n      deleteRoomTypeMutation = _ref.deleteRoomTypeMutation,\n      updateRoomTypeMutation = _ref.updateRoomTypeMutation,\n      roomTypeData = _ref.roomTypeData;\n  var house = context.house;\n  var isCreate = mode === \"Create\";\n  var priceWarnModal = useModal(false);\n  var roomImageHook = useImageUploader(roomTypeData.img); // 룸타입 벨류\n\n  var _useState = useState({\n    name: roomTypeData.name,\n    description: roomTypeData.description,\n    pricingType: {\n      label: LANG(roomTypeData.pricingType),\n      value: roomTypeData.pricingType\n    },\n    peopleCount: {\n      label: \"\".concat(roomTypeData.peopleCount).concat(LANG(\"person_unit\")),\n      value: roomTypeData.peopleCount\n    },\n    roomGender: {\n      label: LANG(\"RoomGender\", roomTypeData.roomGender),\n      value: roomTypeData.roomGender\n    },\n    peopleCountMax: {\n      label: \"\".concat(roomTypeData.peopleCountMax).concat(LANG(\"person_unit\")),\n      value: roomTypeData.peopleCountMax\n    },\n    defaultPrice: roomTypeData.defaultPrice || 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var updateRoomTypeValue = {\n    houseId: house._id,\n    name: value.name,\n    img: roomImageHook.file || undefined,\n    pricingType: value.pricingType.value,\n    roomGender: value.roomGender.value,\n    peopleCount: value.peopleCountMax.value,\n    peopleCountMax: value.peopleCountMax.value,\n    description: value.description,\n    defaultPrice: value.defaultPrice\n  };\n\n  var validater = function validater(fn) {\n    if (value) if (value.name === \"\") {\n      toast.warn(LANG(\"enter_room_type_name\"));\n      return false;\n    }\n\n    if (value.peopleCountMax.value < 1) {\n      toast.warn(LANG(\"capacity_must_be_at_least_1_person\"));\n      return false;\n    }\n\n    if (!value.defaultPrice) {\n      toast.warn(LANG(\"please_enter_a_base_price\"));\n      return false;\n    }\n\n    if (value.defaultPrice < 1000) {\n      var callBackFn = function callBackFn(flag) {\n        if (flag) {\n          fn();\n        }\n      };\n\n      priceWarnModal.openModal({\n        confirmCallBackFn: callBackFn\n      });\n      return false;\n    }\n\n    fn();\n    return true;\n  };\n\n  var onCreateRoomType =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              validater(createRoomType);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onCreateRoomType() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var createRoomType = function createRoomType() {\n    onCreateFn && onCreateFn();\n    createRoomTypeMutation({\n      variables: {\n        params: updateRoomTypeValue\n      }\n    });\n    modalHook.closeModal();\n  };\n\n  var onDeleteRoomType =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              deleteRoomTypeMutation();\n              modalHook.closeModal();\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onDeleteRoomType() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onUpdateRoomType =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var updateFn;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              updateFn = function updateFn() {\n                updateRoomTypeMutation({\n                  variables: {\n                    params: {\n                      defaultPrice: updateRoomTypeValue.defaultPrice,\n                      description: updateRoomTypeValue.description,\n                      img: updateRoomTypeValue.img,\n                      name: updateRoomTypeValue.name,\n                      peopleCount: updateRoomTypeValue.peopleCountMax,\n                      peopleCountMax: updateRoomTypeValue.peopleCountMax\n                    },\n                    roomTypeId: modalHook.info.roomTypeId || \"\"\n                  }\n                });\n                modalHook.closeModal();\n              };\n\n              validater(updateFn);\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onUpdateRoomType() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onChangePeople = function onChangePeople(inValue) {\n    setValue(_objectSpread({}, value, {\n      peopleCountMax: inValue\n    }));\n  };\n\n  var maxPeopleCountOption = MAX_PEOPLE_COUNT_OP_FN();\n  return React.createElement(Modal, Object.assign({\n    overlayClassName: \"Overlay\",\n    center: false // 이거 제거 필요\n    ,\n    className: \"Modal\"\n  }, modalHook, {\n    style: {\n      content: {\n        maxWidth: \"600px\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), loading || mutationLoading ? React.createElement(Preloader, {\n    loading: loading || mutationLoading,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-grid__col col--full-6 col--lg-6 col--md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    label: LANG(\"room_type_name\"),\n    value: value.name,\n    onChange: function onChange(inValue) {\n      setValue(_objectSpread({}, value, {\n        name: inValue\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"JDz-index-3 flex-grid__col JDz-index-4 col--full-6 col--lg-6 col--md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(SelectBox, {\n    label: LANG(\"capacity\"),\n    disabled: false,\n    onChange: onChangePeople,\n    options: maxPeopleCountOption,\n    selectedOption: value.peopleCountMax,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"flex-grid__col JDz-index-3 col--full-6 col--lg-6 col--md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(SelectBox, {\n    label: LANG(\"select_roomType\"),\n    disabled: mode === \"Modify\",\n    onChange: function onChange(inValue) {\n      setValue(_objectSpread({}, value, {\n        pricingType: inValue\n      }));\n    },\n    options: PRICING_TYPE_OP,\n    selectedOption: value.pricingType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"flex-grid__col JDz-index-2 col--full-6 col--lg-6 col--md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(SelectBox, {\n    label: LANG(\"select_roomGender\"),\n    disabled: !isCreate,\n    onChange: function onChange(inValue) {\n      setValue(_objectSpread({}, value, {\n        roomGender: inValue\n      }));\n    },\n    options: ROOM_GENDER_OP,\n    selectedOption: value.roomGender,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"flex-grid__col flex-grid__col--vertical col--full-12 col--lg-12 col--md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(JDLabel, {\n    txt: LANG(\"roomPic\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), React.createElement(ImageUploader, Object.assign({}, roomImageHook, {\n    minHeight: \"200px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"flex-grid__col col--full-6 col--lg-6 col--md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    onChange: function onChange(inValue) {\n      setValue(_objectSpread({}, value, {\n        description: inValue\n      }));\n    },\n    value: value.description,\n    textarea: true,\n    label: LANG(\"room_type_desc\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"flex-grid__col col--full-6 col--lg-6 col--md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    onChange: function onChange(inValue) {\n      setValue(_objectSpread({}, value, {\n        defaultPrice: inValue\n      }));\n    },\n    comma: true,\n    value: value.defaultPrice,\n    label: LANG(\"basic_room_price\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"JDsmall-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"* \", LANG(\"appliedby_default_in_periods_with_no_price_set\")))), React.createElement(\"div\", {\n    className: \"JDmodal__endSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(Button, {\n    thema: \"primary\",\n    label: isCreate ? LANG(\"do_create\") : LANG(\"do_copy\"),\n    size: \"small\",\n    onClick: onCreateRoomType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }), React.createElement(Button, {\n    thema: \"primary\",\n    label: LANG(\"do_modify\"),\n    size: \"small\",\n    disabled: isCreate,\n    onClick: onUpdateRoomType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), React.createElement(Button, {\n    thema: \"error\",\n    label: LANG(\"do_delete\"),\n    size: \"small\",\n    disabled: isCreate,\n    onClick: onDeleteRoomType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  })), React.createElement(PriceWarnModal, {\n    modalHook: priceWarnModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  })));\n};\n\nexport default RoomTypeModal;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/bookingHost/roomConfig/components/RoomTypeModal.tsx"],"names":["React","useState","Fragment","toast","Modal","SelectBox","InputText","Button","JDLabel","ImageUploader","MAX_PEOPLE_COUNT_OP_FN","ROOM_GENDER_OP","PRICING_TYPE_OP","useImageUploader","useModal","LANG","Preloader","PriceWarnModal","RoomTypeModal","modalHook","context","loading","mode","mutationLoading","onCreateFn","onUpdateFn","onDelteFn","createRoomTypeMutation","deleteRoomTypeMutation","updateRoomTypeMutation","roomTypeData","house","isCreate","priceWarnModal","roomImageHook","img","name","description","pricingType","label","value","peopleCount","roomGender","peopleCountMax","defaultPrice","setValue","updateRoomTypeValue","houseId","_id","file","undefined","validater","fn","warn","callBackFn","flag","openModal","confirmCallBackFn","onCreateRoomType","createRoomType","variables","params","closeModal","onDeleteRoomType","onUpdateRoomType","updateFn","roomTypeId","info","onChangePeople","inValue","maxPeopleCountOption","content","maxWidth"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport { MutationFn } from \"react-apollo\";\r\nimport React, { useState, Fragment, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"../../../../atoms/modal/Modal\";\r\nimport SelectBox, {\r\n  IselectedOption\r\n} from \"../../../../atoms/forms/selectBox/SelectBox\";\r\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\r\nimport Button from \"../../../../atoms/button/Button\";\r\nimport JDLabel from \"../../../../atoms/label/JDLabel\";\r\nimport ImageUploader from \"../../../../atoms/imageUploader/ImageUploader\";\r\nimport {\r\n  MAX_PEOPLE_COUNT_OP_FN,\r\n  ROOM_GENDER_OP,\r\n  PRICING_TYPE_OP\r\n} from \"../../../../types/enum\";\r\nimport {\r\n  IUseModal,\r\n  useImageUploader,\r\n  useModal,\r\n  LANG\r\n} from \"../../../../hooks/hook\";\r\nimport {\r\n  createRoomType,\r\n  createRoomTypeVariables,\r\n  deleteRoomType,\r\n  deleteRoomTypeVariables,\r\n  updateRoomType,\r\n  updateRoomTypeVariables,\r\n  getRoomTypeById_GetRoomTypeById_roomType as IRoomType\r\n} from \"../../../../types/api\";\r\nimport { IDefaultRoomType, IRoomTypeModalInfo } from \"./RoomTypeModalWrap\";\r\nimport Preloader from \"../../../../atoms/preloader/Preloader\";\r\nimport { IContext } from \"../../BookingHostRouter\";\r\nimport PriceWarnModal from \"../../../../components/priceWarnModal.tsx/PriceWarnModal\";\r\n\r\ninterface IProps {\r\n  context: IContext;\r\n  createRoomTypeMutation: MutationFn<createRoomType, createRoomTypeVariables>;\r\n  deleteRoomTypeMutation: MutationFn<deleteRoomType, deleteRoomTypeVariables>;\r\n  updateRoomTypeMutation: MutationFn<updateRoomType, updateRoomTypeVariables>;\r\n  onCreateFn?: any;\r\n  onUpdateFn?: any;\r\n  onDelteFn?: any;\r\n  loading: boolean;\r\n  mode: \"Create\" | \"Modify\";\r\n  mutationLoading: boolean;\r\n  modalHook: IUseModal<IRoomTypeModalInfo>;\r\n  roomTypeData: IRoomType | IDefaultRoomType;\r\n}\r\n\r\nconst RoomTypeModal: React.SFC<IProps> = ({\r\n  modalHook,\r\n  context,\r\n  loading,\r\n  mode,\r\n  mutationLoading,\r\n  onCreateFn,\r\n  onUpdateFn,\r\n  onDelteFn,\r\n  createRoomTypeMutation,\r\n  deleteRoomTypeMutation,\r\n  updateRoomTypeMutation,\r\n  roomTypeData\r\n}) => {\r\n  const { house } = context;\r\n  const isCreate = mode === \"Create\";\r\n  const priceWarnModal = useModal(false);\r\n  const roomImageHook = useImageUploader(roomTypeData.img);\r\n  // 룸타입 벨류\r\n  const [value, setValue] = useState({\r\n    name: roomTypeData.name,\r\n    description: roomTypeData.description,\r\n    pricingType: {\r\n      label: LANG(roomTypeData.pricingType),\r\n      value: roomTypeData.pricingType\r\n    },\r\n    peopleCount: {\r\n      label: `${roomTypeData.peopleCount}${LANG(\"person_unit\")}`,\r\n      value: roomTypeData.peopleCount\r\n    },\r\n    roomGender: {\r\n      label: LANG(\"RoomGender\", roomTypeData.roomGender),\r\n      value: roomTypeData.roomGender\r\n    },\r\n    peopleCountMax: {\r\n      label: `${roomTypeData.peopleCountMax}${LANG(\"person_unit\")}`,\r\n      value: roomTypeData.peopleCountMax\r\n    },\r\n    defaultPrice: roomTypeData.defaultPrice || 0\r\n  });\r\n\r\n  const updateRoomTypeValue = {\r\n    houseId: house._id,\r\n    name: value.name,\r\n    img: roomImageHook.file || undefined,\r\n    pricingType: value.pricingType.value,\r\n    roomGender: value.roomGender.value,\r\n    peopleCount: value.peopleCountMax.value,\r\n    peopleCountMax: value.peopleCountMax.value,\r\n    description: value.description,\r\n    defaultPrice: value.defaultPrice\r\n  };\r\n\r\n  const validater = (fn: any) => {\r\n    if (value)\r\n      if (value.name === \"\") {\r\n        toast.warn(LANG(\"enter_room_type_name\"));\r\n        return false;\r\n      }\r\n    if (value.peopleCountMax.value < 1) {\r\n      toast.warn(LANG(\"capacity_must_be_at_least_1_person\"));\r\n      return false;\r\n    }\r\n\r\n    if (!value.defaultPrice) {\r\n      toast.warn(LANG(\"please_enter_a_base_price\"));\r\n      return false;\r\n    }\r\n    if (value.defaultPrice < 1000) {\r\n      const callBackFn = (flag: boolean) => {\r\n        if (flag) {\r\n          fn();\r\n        }\r\n      };\r\n      priceWarnModal.openModal({\r\n        confirmCallBackFn: callBackFn\r\n      });\r\n      return false;\r\n    }\r\n    fn();\r\n    return true;\r\n  };\r\n\r\n  const onCreateRoomType = async () => {\r\n    validater(createRoomType);\r\n  };\r\n\r\n  const createRoomType = () => {\r\n    onCreateFn && onCreateFn();\r\n    createRoomTypeMutation({\r\n      variables: {\r\n        params: updateRoomTypeValue\r\n      }\r\n    });\r\n    modalHook.closeModal();\r\n  };\r\n\r\n  const onDeleteRoomType = async () => {\r\n    deleteRoomTypeMutation();\r\n    modalHook.closeModal();\r\n  };\r\n\r\n  const onUpdateRoomType = async () => {\r\n    const updateFn = () => {\r\n      updateRoomTypeMutation({\r\n        variables: {\r\n          params: {\r\n            defaultPrice: updateRoomTypeValue.defaultPrice,\r\n            description: updateRoomTypeValue.description,\r\n            img: updateRoomTypeValue.img,\r\n            name: updateRoomTypeValue.name,\r\n            peopleCount: updateRoomTypeValue.peopleCountMax,\r\n            peopleCountMax: updateRoomTypeValue.peopleCountMax\r\n          },\r\n          roomTypeId: modalHook.info.roomTypeId || \"\"\r\n        }\r\n      });\r\n      modalHook.closeModal();\r\n    };\r\n\r\n    validater(updateFn);\r\n  };\r\n\r\n  const onChangePeople = (inValue: any) => {\r\n    setValue({ ...value, peopleCountMax: inValue });\r\n  };\r\n\r\n  const maxPeopleCountOption = MAX_PEOPLE_COUNT_OP_FN();\r\n\r\n  return (\r\n    <Modal\r\n      overlayClassName=\"Overlay\"\r\n      center={false} // 이거 제거 필요\r\n      className=\"Modal\"\r\n      {...modalHook}\r\n      style={{\r\n        content: {\r\n          maxWidth: \"600px\"\r\n        }\r\n      }}\r\n    >\r\n      {loading || mutationLoading ? (\r\n        <Preloader loading={loading || mutationLoading} size=\"large\" />\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"flex-grid\">\r\n            <div className=\"flex-grid__col col--full-6 col--lg-6 col--md-12\">\r\n              <InputText\r\n                label={LANG(\"room_type_name\")}\r\n                value={value.name}\r\n                onChange={(inValue: any) => {\r\n                  setValue({ ...value, name: inValue });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"JDz-index-3 flex-grid__col JDz-index-4 col--full-6 col--lg-6 col--md-12\">\r\n              <SelectBox\r\n                label={LANG(\"capacity\")}\r\n                disabled={false}\r\n                onChange={onChangePeople}\r\n                options={maxPeopleCountOption}\r\n                selectedOption={value.peopleCountMax}\r\n              />\r\n            </div>\r\n            <div className=\"flex-grid__col JDz-index-3 col--full-6 col--lg-6 col--md-12\">\r\n              <SelectBox\r\n                label={LANG(\"select_roomType\")}\r\n                disabled={mode === \"Modify\"}\r\n                onChange={(inValue: any) => {\r\n                  setValue({ ...value, pricingType: inValue });\r\n                }}\r\n                options={PRICING_TYPE_OP}\r\n                selectedOption={value.pricingType}\r\n              />\r\n            </div>\r\n            <div className=\"flex-grid__col JDz-index-2 col--full-6 col--lg-6 col--md-12\">\r\n              <SelectBox\r\n                label={LANG(\"select_roomGender\")}\r\n                disabled={!isCreate}\r\n                onChange={(inValue: any) => {\r\n                  setValue({ ...value, roomGender: inValue });\r\n                }}\r\n                options={ROOM_GENDER_OP}\r\n                selectedOption={value.roomGender}\r\n              />\r\n            </div>\r\n            <div className=\"flex-grid__col flex-grid__col--vertical col--full-12 col--lg-12 col--md-12\">\r\n              <JDLabel txt={LANG(\"roomPic\")} />\r\n              <ImageUploader {...roomImageHook} minHeight=\"200px\" />\r\n            </div>\r\n            <div className=\"flex-grid__col col--full-6 col--lg-6 col--md-6\">\r\n              <InputText\r\n                onChange={(inValue: any) => {\r\n                  setValue({ ...value, description: inValue });\r\n                }}\r\n                value={value.description}\r\n                textarea\r\n                label={LANG(\"room_type_desc\")}\r\n              />\r\n            </div>\r\n            <div className=\"flex-grid__col col--full-6 col--lg-6 col--md-6\">\r\n              <InputText\r\n                onChange={(inValue: any) => {\r\n                  setValue({ ...value, defaultPrice: inValue });\r\n                }}\r\n                comma\r\n                value={value.defaultPrice}\r\n                label={LANG(\"basic_room_price\")}\r\n              />\r\n              <p className=\"JDsmall-text\">\r\n                * {LANG(\"appliedby_default_in_periods_with_no_price_set\")}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"JDmodal__endSection\">\r\n            <Button\r\n              thema=\"primary\"\r\n              label={isCreate ? LANG(\"do_create\") : LANG(\"do_copy\")}\r\n              size=\"small\"\r\n              onClick={onCreateRoomType}\r\n            />\r\n            <Button\r\n              thema=\"primary\"\r\n              label={LANG(\"do_modify\")}\r\n              size=\"small\"\r\n              disabled={isCreate}\r\n              onClick={onUpdateRoomType}\r\n            />\r\n            <Button\r\n              thema=\"error\"\r\n              label={LANG(\"do_delete\")}\r\n              size=\"small\"\r\n              disabled={isCreate}\r\n              onClick={onDeleteRoomType}\r\n            />\r\n          </div>\r\n          <PriceWarnModal modalHook={priceWarnModal} />\r\n        </Fragment>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RoomTypeModal;\r\n"]},"metadata":{},"sourceType":"module"}