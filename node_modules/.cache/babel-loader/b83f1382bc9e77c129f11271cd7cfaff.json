{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\graph\\\\graph.tsx\";\nimport React from \"react\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport { LANG } from \"../../hooks/hook\";\nimport { isEmpty } from \"../../utils/utils\";\nimport JDtable, { ReactTableDefault } from \"../table/Table\";\n\nvar JDgraph = function JDgraph(_ref) {\n  var JDtype = _ref.JDtype,\n      data = _ref.data,\n      originalData = _ref.originalData,\n      prop = _objectWithoutProperties(_ref, [\"JDtype\", \"data\", \"originalData\"]);\n\n  var defaultDataSets = {\n    labels: [LANG(\"none_data\")],\n    datasets: [{\n      data: [1],\n      backgroundColor: \"#CFCFCF\",\n      hoverBackgroundColor: \"#b8b8b8\"\n    }]\n  };\n  var dataset = isEmpty(originalData) ? defaultDataSets : data;\n  var columns = [{\n    Header: LANG(\"division\"),\n    accessor: \"data\",\n    Cell: function Cell(_ref2) {\n      var value = _ref2.value,\n          original = _ref2.original,\n          index = _ref2.index;\n      // @ts-ignore\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, dataset.labels[index]);\n    }\n  }, {\n    Header: LANG(\"sales\"),\n    accessor: \"data\",\n    Cell: function Cell(_ref3) {\n      var value = _ref3.value,\n          original = _ref3.original;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, original);\n    }\n  }];\n\n  switch (JDtype) {\n    case \"doughnut\":\n      return React.createElement(Doughnut, Object.assign({\n        data: dataset\n      }, prop, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n\n    case \"line\":\n      return React.createElement(Line, Object.assign({\n        data: dataset\n      }, prop, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n\n    case \"list\":\n      return React.createElement(JDtable, Object.assign({}, ReactTableDefault, {\n        // @ts-ignore\n        data: dataset.datasets ? dataset.datasets[0].data || [] : [],\n        columns: columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n\n    default:\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n  }\n};\n\nexport default JDgraph;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/graph/graph.tsx"],"names":["React","Doughnut","Line","LANG","isEmpty","JDtable","ReactTableDefault","JDgraph","JDtype","data","originalData","prop","defaultDataSets","labels","datasets","backgroundColor","hoverBackgroundColor","dataset","columns","Header","accessor","Cell","value","original","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkDC,IAAlD,QAA6D,iBAA7D;AAEA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,OAAOC,OAAP,IAAiBC,iBAAjB,QAAyC,gBAAzC;;AAQA,IAAMC,OAAyB,GAAG,SAA5BA,OAA4B,OAA2C;AAAA,MAAzCC,MAAyC,QAAzCA,MAAyC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,MAAVC,IAAU;;AAC3E,MAAMC,eAAe,GAAG;AACtBC,IAAAA,MAAM,EAAE,CAACV,IAAI,CAAC,WAAD,CAAL,CADc;AAEtBW,IAAAA,QAAQ,EAAE,CACR;AACEL,MAAAA,IAAI,EAAE,CAAC,CAAD,CADR;AAEEM,MAAAA,eAAe,EAAE,SAFnB;AAGEC,MAAAA,oBAAoB,EAAE;AAHxB,KADQ;AAFY,GAAxB;AAWA,MAAMC,OAAO,GAAGb,OAAO,CAACM,YAAD,CAAP,GAAwBE,eAAxB,GAA0CH,IAA1D;AAEA,MAAMS,OAAO,GAAG,CACd;AACEC,IAAAA,MAAM,EAAEhB,IAAI,CAAC,UAAD,CADd;AAEEiB,IAAAA,QAAQ,EAAE,MAFZ;AAGEC,IAAAA,IAAI,EAAE,qBAAwC;AAAA,UAAtCC,KAAsC,SAAtCA,KAAsC;AAAA,UAA/BC,QAA+B,SAA/BA,QAA+B;AAAA,UAArBC,KAAqB,SAArBA,KAAqB;AAC5C;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMP,OAAO,CAACJ,MAAR,CAAeW,KAAf,CAAN,CAAP;AACD;AANH,GADc,EASd;AACEL,IAAAA,MAAM,EAAEhB,IAAI,CAAC,OAAD,CADd;AAEEiB,IAAAA,QAAQ,EAAE,MAFZ;AAGEC,IAAAA,IAAI,EAAE,qBAAiC;AAAA,UAA/BC,KAA+B,SAA/BA,KAA+B;AAAA,UAAxBC,QAAwB,SAAxBA,QAAwB;AACrC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,QAAN,CAAP;AACD;AALH,GATc,CAAhB;;AAkBA,UAAQf,MAAR;AACE,SAAK,UAAL;AACE,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAES;AAAhB,SAA6BN,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AACF,SAAK,MAAL;AACE,aAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEM;AAAZ,SAAyBN,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AACF,SAAK,MAAL;AACE,aACE,oBAAC,OAAD,oBACML,iBADN;AAEE;AACA,QAAA,IAAI,EAAEW,OAAO,CAACH,QAAR,GAAmBG,OAAO,CAACH,QAAR,CAAiB,CAAjB,EAAoBL,IAApB,IAA4B,EAA/C,GAAoD,EAH5D;AAIE,QAAA,OAAO,EAAES,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;;AAQF;AACE,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAfJ;AAiBD,CAjDD;;AAmDA,eAAeX,OAAf","sourcesContent":["import React from \"react\";\r\nimport {Doughnut, ChartData, ChartComponentProps, Line} from \"react-chartjs-2\";\r\nimport * as chartjs from \"chart.js\";\r\nimport {LANG} from \"../../hooks/hook\";\r\nimport {isEmpty} from \"../../utils/utils\";\r\nimport JDtable, {ReactTableDefault} from \"../table/Table\";\r\nimport {CellInfo} from \"react-table\";\r\n\r\ninterface Iprops extends ChartComponentProps {\r\n  JDtype: chartjs.ChartType | \"list\";\r\n  originalData?: any[];\r\n}\r\n\r\nconst JDgraph: React.FC<Iprops> = ({JDtype, data, originalData, ...prop}) => {\r\n  const defaultDataSets = {\r\n    labels: [LANG(\"none_data\")],\r\n    datasets: [\r\n      {\r\n        data: [1],\r\n        backgroundColor: \"#CFCFCF\",\r\n        hoverBackgroundColor: \"#b8b8b8\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  const dataset = isEmpty(originalData) ? defaultDataSets : data;\r\n\r\n  const columns = [\r\n    {\r\n      Header: LANG(\"division\"),\r\n      accessor: \"data\",\r\n      Cell: ({value, original, index}: CellInfo) => {\r\n        // @ts-ignore\r\n        return <div>{dataset.labels[index]}</div>;\r\n      }\r\n    },\r\n    {\r\n      Header: LANG(\"sales\"),\r\n      accessor: \"data\",\r\n      Cell: ({value, original}: CellInfo) => {\r\n        return <div>{original}</div>;\r\n      }\r\n    }\r\n  ];\r\n\r\n  switch (JDtype) {\r\n    case \"doughnut\":\r\n      return <Doughnut data={dataset} {...prop} />;\r\n    case \"line\":\r\n      return <Line data={dataset} {...prop} />;\r\n    case \"list\":\r\n      return (\r\n        <JDtable\r\n          {...ReactTableDefault}\r\n          // @ts-ignore\r\n          data={dataset.datasets ? dataset.datasets[0].data || [] : []}\r\n          columns={columns}\r\n        />\r\n      );\r\n    default:\r\n      return <div />;\r\n  }\r\n};\r\n\r\nexport default JDgraph;\r\n"]},"metadata":{},"sourceType":"module"}