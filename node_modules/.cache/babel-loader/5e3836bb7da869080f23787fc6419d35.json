{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\product\\\\SelectProduct.tsx\";\n\n/* eslint-disable no-underscore-dangle */\nimport React, { useEffect, useState } from \"react\";\nimport Product from \"./components/Product\";\nimport Button from \"../../../atoms/button/Button\";\nimport Preloader from \"../../../atoms/preloader/Preloader\";\nimport Modal from \"../../../atoms/modal/Modal\";\nimport Slider from \"../../../atoms/slider/Slider\";\nimport { isEmpty } from \"../../../utils/utils\";\nimport Tooltip, { ReactTooltip } from \"../../../atoms/tooltip/Tooltip\";\nimport { RefundPolicyNode } from \"../../../docs/refundPolicy\";\nimport { useModal, LANG } from \"../../../hooks/hook\";\nimport \"./SelectProduct.scss\";\nimport ApplyProductModal from \"./components/applyProductModal\";\nimport JDlist from \"../../../atoms/list/List\";\nimport { inOr, Check } from \"../../../utils/C\";\nimport PreloaderModal from \"../../../atoms/preloaderModal/PreloaderModal\";\n\n// currentProduct : 현재 적용중인 서비스\nvar SelectProducts = function SelectProducts(_ref) {\n  var productTypes = _ref.productTypes,\n      refundMu = _ref.refundMu,\n      buyProductMu = _ref.buyProductMu,\n      loading = _ref.loading,\n      selectedHouse = _ref.selectedHouse,\n      currentProduct = _ref.currentProduct,\n      isPhoneVerified = _ref.isPhoneVerified,\n      mutationLoading = _ref.mutationLoading;\n  var currentProductTypeId = inOr(currentProduct, \"_id\", \"\");\n  var applyModal = useModal(false);\n  var refundModal = useModal(false);\n\n  var _useState = useState(currentProductTypeId),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedProductTypeId = _useState2[0],\n      setSelectedProductTypeId = _useState2[1];\n\n  useEffect(function () {\n    ReactTooltip.rebuild();\n  }); // 유팀 함수로 옴겨야할듯 하다.\n\n  var closeTooltip = function closeTooltip() {\n    ReactTooltip.hide();\n  };\n\n  return React.createElement(\"div\", {\n    id: \"selectProducts\",\n    className: \"selectProducts container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, loading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Preloader, {\n    size: \"large\",\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, LANG(\"select_service\")), React.createElement(\"div\", {\n    className: \"docs-section__box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    title: \"\\uD504\\uB85C\\uB355\\uD2B8 \\uADF8\\uB8F9\",\n    className: \"flex-grid flex-grid-grow selectProducts__productWrapWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-grid__col selectProducts__productWrap col--wmd-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, productTypes.map(function (productType) {\n    return React.createElement(Product, {\n      key: productType._id,\n      productType: productType,\n      setSelectedProductTypeId: setSelectedProductTypeId,\n      isCurrent: currentProductTypeId === productType._id,\n      isSelected: selectedProductTypeId === productType._id,\n      applyModal: applyModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"flex-grid__col col--wmd-6 col--full-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    onSwipe: closeTooltip,\n    infinite: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, productTypes.map(function (productType) {\n    return React.createElement(Product, {\n      key: \"\".concat(productType._id, \"--slider\"),\n      slider: true,\n      productType: productType,\n      setSelectedProductTypeId: setSelectedProductTypeId,\n      isCurrent: currentProductTypeId === productType._id,\n      isSelected: selectedProductTypeId === productType._id,\n      applyModal: applyModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    });\n  })))), React.createElement(\"p\", {\n    title: \"\\uD558\\uB2E8 \\uBA54\\uC138\\uC9C0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, isEmpty(selectedHouse) ? React.createElement(\"span\", {\n    className: \"JDtextColor-warring-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, LANG(\"no_house_currently_created\")) : React.createElement(JDlist, {\n    contents: [LANG(\"F_selected_product_apply_to_house\"), React.createElement(\"span\", {\n      className: \"JDtextColor--error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"*\", \" \", LANG(\"if_you_choose_wrong_size_product_to_house_service_can_be_stop\"))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), Check(currentProduct, \"_id\") && React.createElement(Button, {\n    onClick: refundModal.openModal,\n    disabled: isEmpty(selectedHouse),\n    thema: \"error\",\n    label: LANG(\"release_service\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), React.createElement(Modal, Object.assign({\n    className: \"refundModal\"\n  }, refundModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, LANG(\"release_service\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(RefundPolicyNode, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, LANG(\"please_request_through_helpline\"))), React.createElement(ApplyProductModal, {\n    houseId: inOr(selectedHouse, \"_id\", \"\"),\n    buyProductMu: buyProductMu,\n    modalHook: applyModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    getContent: function getContent() {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, LANG(\"can_use_after_phone_auth\"));\n    },\n    class: \"JDtooltip\",\n    clickable: true,\n    id: \"tooltip__productDisable\",\n    effect: \"solid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    getContent: function getContent() {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, LANG(\"currently_applied_service\"));\n    },\n    class: \"JDtooltip\",\n    clickable: true,\n    id: \"tooltip__currentProduct\",\n    effect: \"solid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(PreloaderModal, {\n    loading: mutationLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }));\n};\n\nexport default SelectProducts;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/product/SelectProduct.tsx"],"names":["React","useEffect","useState","Product","Button","Preloader","Modal","Slider","isEmpty","Tooltip","ReactTooltip","RefundPolicyNode","useModal","LANG","ApplyProductModal","JDlist","inOr","Check","PreloaderModal","SelectProducts","productTypes","refundMu","buyProductMu","loading","selectedHouse","currentProduct","isPhoneVerified","mutationLoading","currentProductTypeId","applyModal","refundModal","selectedProductTypeId","setSelectedProductTypeId","rebuild","closeTooltip","hide","map","productType","_id","openModal"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\r\nimport React, {useEffect, Fragment, useState} from \"react\";\r\nimport Product from \"./components/Product\";\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport Preloader from \"../../../atoms/preloader/Preloader\";\r\nimport Modal from \"../../../atoms/modal/Modal\";\r\nimport Slider from \"../../../atoms/slider/Slider\";\r\nimport {isEmpty} from \"../../../utils/utils\";\r\nimport Tooltip, {ReactTooltip} from \"../../../atoms/tooltip/Tooltip\";\r\nimport {RefundPolicyNode} from \"../../../docs/refundPolicy\";\r\nimport {IHouse, IProductTypeDesc} from \"../../../types/interface\";\r\nimport {useModal, LANG} from \"../../../hooks/hook\";\r\nimport \"./SelectProduct.scss\";\r\nimport {\r\n  refundProduct,\r\n  refundProductVariables,\r\n  buyProduct,\r\n  buyProductVariables,\r\n  getMyProfile_GetMyProfile_user_houses_product\r\n} from \"../../../types/api\";\r\nimport {MutationFn} from \"react-apollo\";\r\nimport ApplyProductModal, {\r\n  applyProductModalInfo\r\n} from \"./components/applyProductModal\";\r\nimport JDlist from \"../../../atoms/list/List\";\r\nimport {inOr, Check} from \"../../../utils/C\";\r\nimport PreloaderModal from \"../../../atoms/preloaderModal/PreloaderModal\";\r\n\r\ninterface IProps {\r\n  productTypes: IProductTypeDesc[];\r\n  refundMu: MutationFn<refundProduct, refundProductVariables>;\r\n  buyProductMu: MutationFn<buyProduct, buyProductVariables>;\r\n  loading: boolean;\r\n  mutationLoading: boolean;\r\n  selectedHouse: IHouse;\r\n  currentProduct: getMyProfile_GetMyProfile_user_houses_product | undefined;\r\n  isPhoneVerified: boolean;\r\n}\r\n\r\n// currentProduct : 현재 적용중인 서비스\r\nconst SelectProducts: React.FC<IProps> = ({\r\n  productTypes,\r\n  refundMu,\r\n  buyProductMu,\r\n  loading,\r\n  selectedHouse,\r\n  currentProduct,\r\n  isPhoneVerified,\r\n  mutationLoading\r\n}) => {\r\n  const currentProductTypeId = inOr(currentProduct, \"_id\", \"\");\r\n  const applyModal = useModal<applyProductModalInfo>(false);\r\n  const refundModal = useModal(false);\r\n\r\n  const [selectedProductTypeId, setSelectedProductTypeId] = useState(\r\n    currentProductTypeId\r\n  );\r\n\r\n  useEffect(() => {\r\n    ReactTooltip.rebuild();\r\n  });\r\n\r\n  // 유팀 함수로 옴겨야할듯 하다.\r\n  const closeTooltip = () => {\r\n    ReactTooltip.hide();\r\n  };\r\n\r\n  return (\r\n    <div id=\"selectProducts\" className=\"selectProducts container\">\r\n      <div className=\"docs-section\">\r\n        {loading && (\r\n          <div>\r\n            <Preloader size={\"large\"} loading={true} />\r\n          </div>\r\n        )}\r\n        <h3>{LANG(\"select_service\")}</h3>\r\n        <div className=\"docs-section__box\">\r\n          <div\r\n            title=\"프로덕트 그룹\"\r\n            className=\"flex-grid flex-grid-grow selectProducts__productWrapWrap\"\r\n          >\r\n            <div className=\"flex-grid__col selectProducts__productWrap col--wmd-0\">\r\n              {productTypes.map(productType => (\r\n                <Product\r\n                  key={productType._id}\r\n                  productType={productType}\r\n                  setSelectedProductTypeId={setSelectedProductTypeId}\r\n                  isCurrent={currentProductTypeId === productType._id}\r\n                  isSelected={selectedProductTypeId === productType._id}\r\n                  applyModal={applyModal}\r\n                />\r\n              ))}\r\n            </div>\r\n            <div className=\"flex-grid__col col--wmd-6 col--full-0\">\r\n              <Slider onSwipe={closeTooltip} infinite={false}>\r\n                {productTypes.map(productType => (\r\n                  <Product\r\n                    key={`${productType._id}--slider`}\r\n                    slider\r\n                    productType={productType}\r\n                    setSelectedProductTypeId={setSelectedProductTypeId}\r\n                    isCurrent={currentProductTypeId === productType._id}\r\n                    isSelected={selectedProductTypeId === productType._id}\r\n                    applyModal={applyModal}\r\n                  />\r\n                ))}\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n          <p title=\"하단 메세지\">\r\n            {isEmpty(selectedHouse) ? (\r\n              <span className=\"JDtextColor-warring-text\">\r\n                {LANG(\"no_house_currently_created\")}\r\n              </span>\r\n            ) : (\r\n              <JDlist\r\n                contents={[\r\n                  LANG(\"F_selected_product_apply_to_house\"),\r\n                  <span className=\"JDtextColor--error\">\r\n                    *{\" \"}\r\n                    {LANG(\r\n                      \"if_you_choose_wrong_size_product_to_house_service_can_be_stop\"\r\n                    )}\r\n                  </span>\r\n                ]}\r\n              />\r\n            )}\r\n          </p>\r\n          {/* 서비스해지 버튼 */}\r\n          {Check(currentProduct, \"_id\") && (\r\n            <Button\r\n              onClick={refundModal.openModal}\r\n              disabled={isEmpty(selectedHouse)}\r\n              thema=\"error\"\r\n              label={LANG(\"release_service\")}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* 리펀트 시작 */}\r\n      <Modal className=\"refundModal\" {...refundModal}>\r\n        <h6>{LANG(\"release_service\")}</h6>\r\n        <p>\r\n          <RefundPolicyNode />\r\n        </p>\r\n        <h6>{LANG(\"please_request_through_helpline\")}</h6>\r\n      </Modal>\r\n      <ApplyProductModal\r\n        houseId={inOr(selectedHouse, \"_id\", \"\")}\r\n        buyProductMu={buyProductMu}\r\n        modalHook={applyModal}\r\n      />\r\n      {/* 툴팁  : disabled */}\r\n      <Tooltip\r\n        getContent={() => <span>{LANG(\"can_use_after_phone_auth\")}</span>}\r\n        class=\"JDtooltip\"\r\n        clickable\r\n        id=\"tooltip__productDisable\"\r\n        effect=\"solid\"\r\n      />\r\n      <Tooltip\r\n        getContent={() => <span>{LANG(\"currently_applied_service\")}</span>}\r\n        class=\"JDtooltip\"\r\n        clickable\r\n        id=\"tooltip__currentProduct\"\r\n        effect=\"solid\"\r\n      />\r\n      <PreloaderModal loading={mutationLoading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectProducts;\r\n"]},"metadata":{},"sourceType":"module"}