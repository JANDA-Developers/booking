{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CustomHeader = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _HeadersContext = require('./HeadersContext');\n\nvar _TimelineStateContext = require('../timeline/TimelineStateContext');\n\nvar _calendar = require('../utility/calendar');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CustomHeader = exports.CustomHeader = function (_React$Component) {\n  _inherits(CustomHeader, _React$Component);\n\n  function CustomHeader(props) {\n    _classCallCheck(this, CustomHeader);\n\n    var _this = _possibleConstructorReturn(this, (CustomHeader.__proto__ || Object.getPrototypeOf(CustomHeader)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var canvasTimeStart = props.canvasTimeStart,\n        canvasTimeEnd = props.canvasTimeEnd,\n        canvasWidth = props.canvasWidth,\n        unit = props.unit,\n        timeSteps = props.timeSteps,\n        showPeriod = props.showPeriod,\n        getLeftOffsetFromDate = props.getLeftOffsetFromDate;\n\n    var intervals = _this.getHeaderIntervals({\n      canvasTimeStart: canvasTimeStart,\n      canvasTimeEnd: canvasTimeEnd,\n      canvasWidth: canvasWidth,\n      unit: unit,\n      timeSteps: timeSteps,\n      showPeriod: showPeriod,\n      getLeftOffsetFromDate: getLeftOffsetFromDate\n    });\n\n    _this.state = {\n      intervals: intervals\n    };\n    return _this;\n  }\n\n  _createClass(CustomHeader, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.canvasTimeStart !== this.props.canvasTimeStart || nextProps.canvasTimeEnd !== this.props.canvasTimeEnd || nextProps.canvasWidth !== this.props.canvasWidth || nextProps.unit !== this.props.unit || nextProps.timeSteps !== this.props.timeSteps || nextProps.showPeriod !== this.props.showPeriod || nextProps.children !== this.props.children || nextProps.headerData !== this.props.headerData) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.canvasTimeStart !== this.props.canvasTimeStart || nextProps.canvasTimeEnd !== this.props.canvasTimeEnd || nextProps.canvasWidth !== this.props.canvasWidth || nextProps.unit !== this.props.unit || nextProps.timeSteps !== this.props.timeSteps || nextProps.showPeriod !== this.props.showPeriod) {\n        var canvasTimeStart = nextProps.canvasTimeStart,\n            canvasTimeEnd = nextProps.canvasTimeEnd,\n            canvasWidth = nextProps.canvasWidth,\n            unit = nextProps.unit,\n            timeSteps = nextProps.timeSteps,\n            showPeriod = nextProps.showPeriod,\n            getLeftOffsetFromDate = nextProps.getLeftOffsetFromDate;\n        var intervals = this.getHeaderIntervals({\n          canvasTimeStart: canvasTimeStart,\n          canvasTimeEnd: canvasTimeEnd,\n          canvasWidth: canvasWidth,\n          unit: unit,\n          timeSteps: timeSteps,\n          showPeriod: showPeriod,\n          getLeftOffsetFromDate: getLeftOffsetFromDate\n        });\n        this.setState({\n          intervals: intervals\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.getStateAndHelpers();\n      var Renderer = this.props.children;\n      return _react2.default.createElement(Renderer, props);\n    }\n  }]);\n\n  return CustomHeader;\n}(_react2.default.Component);\n\nCustomHeader.propTypes = {\n  //component props\n  children: _propTypes2.default.func.isRequired,\n  unit: _propTypes2.default.string.isRequired,\n  //Timeline context\n  timeSteps: _propTypes2.default.object.isRequired,\n  visibleTimeStart: _propTypes2.default.number.isRequired,\n  visibleTimeEnd: _propTypes2.default.number.isRequired,\n  canvasTimeStart: _propTypes2.default.number.isRequired,\n  canvasTimeEnd: _propTypes2.default.number.isRequired,\n  canvasWidth: _propTypes2.default.number.isRequired,\n  showPeriod: _propTypes2.default.func.isRequired,\n  headerData: _propTypes2.default.object,\n  getLeftOffsetFromDate: _propTypes2.default.func.isRequired,\n  height: _propTypes2.default.number.isRequired\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.getHeaderIntervals = function (_ref4) {\n    var canvasTimeStart = _ref4.canvasTimeStart,\n        canvasTimeEnd = _ref4.canvasTimeEnd,\n        unit = _ref4.unit,\n        timeSteps = _ref4.timeSteps,\n        getLeftOffsetFromDate = _ref4.getLeftOffsetFromDate;\n    var intervals = [];\n    (0, _calendar.iterateTimes)(canvasTimeStart, canvasTimeEnd, unit, timeSteps, function (startTime, endTime) {\n      var left = getLeftOffsetFromDate(startTime.valueOf());\n      var right = getLeftOffsetFromDate(endTime.valueOf());\n      var width = right - left;\n      intervals.push({\n        startTime: startTime,\n        endTime: endTime,\n        labelWidth: width,\n        left: left\n      });\n    });\n    return intervals;\n  };\n\n  this.getRootProps = function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var style = props.style;\n    return {\n      style: Object.assign({}, style ? style : {}, {\n        position: 'relative',\n        width: _this2.props.canvasWidth,\n        height: _this2.props.height\n      })\n    };\n  };\n\n  this.getIntervalProps = function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var interval = props.interval,\n        style = props.style;\n    if (!interval) throw new Error('you should provide interval to the prop getter');\n    var startTime = interval.startTime,\n        labelWidth = interval.labelWidth,\n        left = interval.left;\n    return {\n      style: _this2.getIntervalStyle({\n        style: style,\n        startTime: startTime,\n        labelWidth: labelWidth,\n        canvasTimeStart: _this2.props.canvasTimeStart,\n        unit: _this2.props.unit,\n        left: left\n      }),\n      key: 'label-' + startTime.valueOf()\n    };\n  };\n\n  this.getIntervalStyle = function (_ref5) {\n    var left = _ref5.left,\n        labelWidth = _ref5.labelWidth,\n        style = _ref5.style;\n    return _extends({}, style, {\n      left: left,\n      width: labelWidth,\n      position: 'absolute'\n    });\n  };\n\n  this.getStateAndHelpers = function () {\n    var _props = _this2.props,\n        canvasTimeStart = _props.canvasTimeStart,\n        canvasTimeEnd = _props.canvasTimeEnd,\n        unit = _props.unit,\n        showPeriod = _props.showPeriod,\n        timelineWidth = _props.timelineWidth,\n        visibleTimeStart = _props.visibleTimeStart,\n        visibleTimeEnd = _props.visibleTimeEnd,\n        headerData = _props.headerData; //TODO: only evaluate on changing params\n\n    return {\n      timelineContext: {\n        timelineWidth: timelineWidth,\n        visibleTimeStart: visibleTimeStart,\n        visibleTimeEnd: visibleTimeEnd,\n        canvasTimeStart: canvasTimeStart,\n        canvasTimeEnd: canvasTimeEnd\n      },\n      headerContext: {\n        unit: unit,\n        intervals: _this2.state.intervals\n      },\n      getRootProps: _this2.getRootProps,\n      getIntervalProps: _this2.getIntervalProps,\n      showPeriod: showPeriod,\n      data: headerData\n    };\n  };\n};\n\nvar CustomHeaderWrapper = function CustomHeaderWrapper(_ref) {\n  var children = _ref.children,\n      unit = _ref.unit,\n      headerData = _ref.headerData,\n      height = _ref.height;\n  return _react2.default.createElement(_TimelineStateContext.TimelineStateConsumer, null, function (_ref2) {\n    var getTimelineState = _ref2.getTimelineState,\n        showPeriod = _ref2.showPeriod,\n        getLeftOffsetFromDate = _ref2.getLeftOffsetFromDate;\n    var timelineState = getTimelineState();\n    return _react2.default.createElement(_HeadersContext.TimelineHeadersConsumer, null, function (_ref3) {\n      var timeSteps = _ref3.timeSteps;\n      return _react2.default.createElement(CustomHeader, _extends({\n        children: children,\n        timeSteps: timeSteps,\n        showPeriod: showPeriod,\n        unit: unit ? unit : timelineState.timelineUnit\n      }, timelineState, {\n        headerData: headerData,\n        getLeftOffsetFromDate: getLeftOffsetFromDate,\n        height: height\n      }));\n    });\n  });\n};\n\nCustomHeaderWrapper.propTypes = {\n  children: _propTypes2.default.func.isRequired,\n  unit: _propTypes2.default.string,\n  headerData: _propTypes2.default.object,\n  height: _propTypes2.default.number\n};\nCustomHeaderWrapper.defaultProps = {\n  height: 30\n};\nexports.default = CustomHeaderWrapper;","map":null,"metadata":{},"sourceType":"script"}