{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\timer\\\\Timer.tsx\";\nimport React from \"react\";\nimport \"./Timer.scss\";\nimport Timer from \"react-compound-timer\";\n\nvar JDTimer = function JDTimer(props) {\n  return React.createElement(Timer, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default JDTimer;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/timer/Timer.tsx"],"names":["React","Timer","JDTimer","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;AAoCA,IAAMC,OAAyB,GAAG,SAA5BA,OAA4B,CAAAC,KAAK;AAAA,SAAI,oBAAC,KAAD,oBAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA,CAAvC;;AAEA,eAAeD,OAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Timer.scss\";\r\nimport Timer from \"react-compound-timer\";\r\n\r\nexport type TimerStateType = \"INITED\" | \"PLAYING\" | \"PAUSED\" | \"STOPPED\";\r\n\r\ninterface TimerProps {\r\n  /** Timer count direction */\r\n  direction?: \"forward\" | \"backward\";\r\n  /** Inittial time on timer */\r\n  initialTime?: number;\r\n  /** Time to rerender */\r\n  timeToUpdate?: number;\r\n  /** Start timer immediately after render */\r\n  startImmediately?: boolean;\r\n  /** Function to format all values */\r\n  formatValue?: (value: number) => string;\r\n  /** Function that will be called on timer start */\r\n  onStart?: () => any;\r\n  /** Function that will be called on timer resume */\r\n  onResume?: () => any;\r\n  /** Function that will be called on timer pause */\r\n  onPause?: () => any;\r\n  /** Function that will be called on timer stop */\r\n  onStop?: () => any;\r\n  /** Function that will be called on timer reset */\r\n  onReset?: () => any;\r\n  /** Last unit will accumulate time, for example, 26 hours or 90 seconds */\r\n  lastUnit?: \"ms\" | \"s\" | \"m\" | \"h\" | \"d\";\r\n  /** Time checkpoints with callback functions */\r\n  checkpoints?: Array<{\r\n    time: number;\r\n    callback: () => any;\r\n  }>;\r\n}\r\n\r\ninterface IProps extends TimerProps {}\r\n\r\nconst JDTimer: React.FC<IProps> = props => <Timer {...props} />;\r\n\r\nexport default JDTimer;\r\n"]},"metadata":{},"sourceType":"module"}