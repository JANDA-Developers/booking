{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\dailyAssjg\\\\DailyAssigWrap.tsx\";\nimport React, { useMemo, Fragment } from \"react\";\nimport { onCompletedMessage } from \"../../utils/utils\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM, ALLOCATE_GUEST_TO_ROOM, UPDATE_BLOCK_OPTION, DELETE_GUEST, CREATE_BLOCK, DELETE_BLOCK, DELETE_BOOKING, UPDATE_BOOKING } from \"../../queries\";\nimport { BookingStatus } from \"../../types/enum\";\nimport { queryDataFormater } from \"../../utils/utils\";\nimport { useDayPicker, LANG } from \"../../hooks/hook\";\nimport DailyAssig from \"./DailyAssig\";\nimport { getOperationName } from \"apollo-link\";\nimport moment from \"moment\";\nimport { guestsDataManufacturer } from \"../../pages/bookingHost/assig/helpers/guestsDataManufacturer\";\nimport { blockDataManufacturer } from \"../../pages/bookingHost/assig/helpers/blockDataManufacturer\";\n\nvar GetAllRoomTypeWithGuestQuery =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(GetAllRoomTypeWithGuestQuery, _Query);\n\n  function GetAllRoomTypeWithGuestQuery() {\n    _classCallCheck(this, GetAllRoomTypeWithGuestQuery);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GetAllRoomTypeWithGuestQuery).apply(this, arguments));\n  }\n\n  return GetAllRoomTypeWithGuestQuery;\n}(Query);\n\nvar AllocateGuestToRoomMu =\n/*#__PURE__*/\nfunction (_Mutation) {\n  _inherits(AllocateGuestToRoomMu, _Mutation);\n\n  function AllocateGuestToRoomMu() {\n    _classCallCheck(this, AllocateGuestToRoomMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AllocateGuestToRoomMu).apply(this, arguments));\n  }\n\n  return AllocateGuestToRoomMu;\n}(Mutation);\n\nvar CreateBlockMu =\n/*#__PURE__*/\nfunction (_Mutation2) {\n  _inherits(CreateBlockMu, _Mutation2);\n\n  function CreateBlockMu() {\n    _classCallCheck(this, CreateBlockMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CreateBlockMu).apply(this, arguments));\n  }\n\n  return CreateBlockMu;\n}(Mutation);\n\nvar DeleteBookingMu =\n/*#__PURE__*/\nfunction (_Mutation3) {\n  _inherits(DeleteBookingMu, _Mutation3);\n\n  function DeleteBookingMu() {\n    _classCallCheck(this, DeleteBookingMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DeleteBookingMu).apply(this, arguments));\n  }\n\n  return DeleteBookingMu;\n}(Mutation);\n\nvar UpdateBlockOpMu =\n/*#__PURE__*/\nfunction (_Mutation4) {\n  _inherits(UpdateBlockOpMu, _Mutation4);\n\n  function UpdateBlockOpMu() {\n    _classCallCheck(this, UpdateBlockOpMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpdateBlockOpMu).apply(this, arguments));\n  }\n\n  return UpdateBlockOpMu;\n}(Mutation);\n\nvar DeleteGuestMu =\n/*#__PURE__*/\nfunction (_Mutation5) {\n  _inherits(DeleteGuestMu, _Mutation5);\n\n  function DeleteGuestMu() {\n    _classCallCheck(this, DeleteGuestMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DeleteGuestMu).apply(this, arguments));\n  }\n\n  return DeleteGuestMu;\n}(Mutation);\n\nvar DeleteBlockMu =\n/*#__PURE__*/\nfunction (_Mutation6) {\n  _inherits(DeleteBlockMu, _Mutation6);\n\n  function DeleteBlockMu() {\n    _classCallCheck(this, DeleteBlockMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DeleteBlockMu).apply(this, arguments));\n  }\n\n  return DeleteBlockMu;\n}(Mutation);\n\nvar UpdateCheckInMu =\n/*#__PURE__*/\nfunction (_Mutation7) {\n  _inherits(UpdateCheckInMu, _Mutation7);\n\n  function UpdateCheckInMu() {\n    _classCallCheck(this, UpdateCheckInMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpdateCheckInMu).apply(this, arguments));\n  }\n\n  return UpdateCheckInMu;\n}(Mutation);\n\nvar DailyAssigWrap = function DailyAssigWrap(_ref) {\n  var date = _ref.date,\n      context = _ref.context,\n      isInModal = _ref.isInModal,\n      _ref$calendarPosition = _ref.calendarPosition,\n      calendarPosition = _ref$calendarPosition === void 0 ? \"topLeft\" : _ref$calendarPosition;\n  var house = context.house;\n  var dayPickerHook = useDayPicker(date, date);\n  var houseConfig = house.houseConfig,\n      houseId = house._id;\n  var updateVariables = {\n    houseId: houseId,\n    checkIn: dayPickerHook.from || new Date(),\n    checkOut: moment(dayPickerHook.from || new Date()).add(1, \"day\").toDate()\n  };\n  var Result = useMemo(function () {\n    return React.createElement(GetAllRoomTypeWithGuestQuery, {\n      skip: !date,\n      pollInterval: houseConfig.pollingPeriod.period,\n      query: GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM,\n      variables: _objectSpread({}, updateVariables, {\n        bookingStatuses: [BookingStatus.COMPLETE, BookingStatus.PROGRESSING]\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, function (_ref2) {\n      var data = _ref2.data,\n          loading = _ref2.loading,\n          networkStatus = _ref2.networkStatus;\n      var roomTypesData = queryDataFormater(data, \"GetAllRoomType\", \"roomTypes\", undefined) || []; // 원본데이터\n\n      var guestsData = queryDataFormater(data, \"GetGuests\", \"guests\", undefined) || []; // 원본데이터\n\n      var blocks = queryDataFormater(data, \"GetBlocks\", \"blocks\", undefined) || []; // 원본데이터\n\n      var formatedGuestsData = guestsDataManufacturer(guestsData);\n      var formatedBlockData = blockDataManufacturer(blocks);\n      var formatedItemData = formatedGuestsData.concat(formatedBlockData).map(function (block, index) {\n        block.itemIndex = index;\n        return block;\n      });\n      return React.createElement(UpdateCheckInMu, {\n        refetchQueries: [getOperationName(GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM) || \"\"],\n        mutation: UPDATE_BOOKING,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, function (updateCheckInMu, _ref3) {\n        var checkInBookingLoading = _ref3.loading;\n        return React.createElement(AllocateGuestToRoomMu, {\n          onCompleted: function onCompleted(_ref4) {\n            var AllocateGuestToRoom = _ref4.AllocateGuestToRoom;\n            onCompletedMessage(AllocateGuestToRoom, LANG(\"assig_completed\"), LANG(\"assig_failed\"));\n          },\n          refetchQueries: [getOperationName(GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM)],\n          mutation: ALLOCATE_GUEST_TO_ROOM,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, function (allocateMu) {\n          var dailyAssigContext = {\n            allocateMu: allocateMu,\n            loading: loading,\n            blocksData: blocks,\n            guestsData: guestsData,\n            formatedItemData: formatedItemData,\n            dayPickerHook: dayPickerHook,\n            roomTypesData: roomTypesData,\n            itemDatas: [].concat(_toConsumableArray(guestsData), _toConsumableArray(blocks)),\n            networkStatus: networkStatus,\n            calendarPosition: calendarPosition\n          };\n          return React.createElement(DeleteGuestMu, {\n            onCompleted: function onCompleted(_ref5) {\n              var DeleteGuests = _ref5.DeleteGuests;\n              onCompletedMessage(DeleteGuests, LANG(\"delete_completed\"), LANG(\"delete_failed\"));\n            },\n            mutation: DELETE_GUEST,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, function (deleteGuestMu, _ref6) {\n            var deleteGuestLoading = _ref6.loading;\n            return React.createElement(CreateBlockMu, {\n              onCompleted: function onCompleted(_ref7) {\n                var CreateBlock = _ref7.CreateBlock;\n                onCompletedMessage(CreateBlock, LANG(\"block_room_completed\"), LANG(\"block_room_failed\"));\n              },\n              refetchQueries: [getOperationName(GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM) || \"\"],\n              mutation: CREATE_BLOCK,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186\n              },\n              __self: this\n            }, function (createBlockMu, _ref8) {\n              var createBlockLoading = _ref8.loading;\n              return React.createElement(DeleteBlockMu, {\n                refetchQueries: [getOperationName(GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM)],\n                onCompleted: function onCompleted(_ref9) {\n                  var DeleteBlock = _ref9.DeleteBlock;\n                  onCompletedMessage(DeleteBlock, LANG(\"room_block_release\"), LANG(\"room_block_release_fail\"));\n                },\n                mutation: DELETE_BLOCK,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 205\n                },\n                __self: this\n              }, function (deleteBlockMu, _ref10) {\n                var deleteBlockLoading = _ref10.loading;\n                return React.createElement(DeleteBookingMu, {\n                  refetchQueries: [getOperationName(GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM)],\n                  mutation: DELETE_BOOKING,\n                  onCompleted: function onCompleted(_ref11) {\n                    var DeleteBooking = _ref11.DeleteBooking;\n                    onCompletedMessage(DeleteBooking, LANG(\"reservation_delete_complete\"), LANG(\"reservation_delete_fail\"));\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 224\n                  },\n                  __self: this\n                }, function (deleteBookingMu, _ref12) {\n                  var deleteBookingLoading = _ref12.loading;\n                  return React.createElement(UpdateBlockOpMu, {\n                    mutation: UPDATE_BLOCK_OPTION,\n                    onCompleted: function onCompleted(_ref13) {\n                      var UpdateBlockOption = _ref13.UpdateBlockOption;\n                      onCompletedMessage(UpdateBlockOption, LANG(\"update_complete\"), LANG(\"update_fail\"));\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 243\n                    },\n                    __self: this\n                  }, function (updateBlockOpMu, _ref14) {\n                    var updateBlockLoading = _ref14.loading;\n                    var totalMuLoading = updateBlockLoading || createBlockLoading || deleteBlockLoading || deleteGuestLoading || checkInBookingLoading || deleteBookingLoading;\n                    var dailyAssigDataControl = {\n                      deleteBookingMu: deleteBookingMu,\n                      deleteGuestsMu: deleteGuestMu,\n                      createBlockMu: createBlockMu,\n                      deleteBlockMu: deleteBlockMu,\n                      updateBlockOpMu: updateBlockOpMu,\n                      updateCheckInMu: updateCheckInMu,\n                      allocateMu: allocateMu,\n                      totalMuLoading: totalMuLoading\n                    };\n                    return React.createElement(Fragment, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 279\n                      },\n                      __self: this\n                    }, React.createElement(DailyAssig, {\n                      context: context,\n                      outDailyAssigContext: dailyAssigContext,\n                      dailyAssigDataControl: dailyAssigDataControl,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 280\n                      },\n                      __self: this\n                    }));\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  }, [dayPickerHook.from]);\n  return Result;\n};\n\nexport default DailyAssigWrap;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/dailyAssjg/DailyAssigWrap.tsx"],"names":["React","useMemo","Fragment","onCompletedMessage","Query","Mutation","GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM","ALLOCATE_GUEST_TO_ROOM","UPDATE_BLOCK_OPTION","DELETE_GUEST","CREATE_BLOCK","DELETE_BLOCK","DELETE_BOOKING","UPDATE_BOOKING","BookingStatus","queryDataFormater","useDayPicker","LANG","DailyAssig","getOperationName","moment","guestsDataManufacturer","blockDataManufacturer","GetAllRoomTypeWithGuestQuery","AllocateGuestToRoomMu","CreateBlockMu","DeleteBookingMu","UpdateBlockOpMu","DeleteGuestMu","DeleteBlockMu","UpdateCheckInMu","DailyAssigWrap","date","context","isInModal","calendarPosition","house","dayPickerHook","houseConfig","houseId","_id","updateVariables","checkIn","from","Date","checkOut","add","toDate","Result","pollingPeriod","period","bookingStatuses","COMPLETE","PROGRESSING","data","loading","networkStatus","roomTypesData","undefined","guestsData","blocks","formatedGuestsData","formatedBlockData","formatedItemData","concat","map","block","index","itemIndex","updateCheckInMu","checkInBookingLoading","AllocateGuestToRoom","allocateMu","dailyAssigContext","blocksData","itemDatas","DeleteGuests","deleteGuestMu","deleteGuestLoading","CreateBlock","createBlockMu","createBlockLoading","DeleteBlock","deleteBlockMu","deleteBlockLoading","DeleteBooking","deleteBookingMu","deleteBookingLoading","UpdateBlockOption","updateBlockOpMu","updateBlockLoading","totalMuLoading","dailyAssigDataControl","deleteGuestsMu"],"mappings":"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","sourcesContent":["import React, { useMemo, Fragment } from \"react\";\r\nimport { onCompletedMessage } from \"../../utils/utils\";\r\nimport { Query, Mutation, MutationFn } from \"react-apollo\";\r\nimport {\r\n  getAllRoomTypeWithGuestVariables,\r\n  getAllRoomTypeWithGuest,\r\n  allocateGuestToRoom,\r\n  allocateGuestToRoomVariables,\r\n  getAllRoomTypeWithGuest_GetGuests_guests,\r\n  getAllRoomTypeWithGuest_GetBlocks_blocks,\r\n  getAllRoomTypeWithGuest_GetAllRoomType_roomTypes,\r\n  createBlock,\r\n  createBlockVariables,\r\n  deleteBooking,\r\n  deleteBookingVariables,\r\n  updateBlockOption,\r\n  updateBlockOptionVariables,\r\n  deleteGuests,\r\n  deleteGuestsVariables,\r\n  deleteBlockVariables,\r\n  deleteBlock,\r\n  updateBooking,\r\n  updateBookingVariables\r\n} from \"../../types/api\";\r\nimport {\r\n  GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM,\r\n  ALLOCATE_GUEST_TO_ROOM,\r\n  UPDATE_BLOCK_OPTION,\r\n  DELETE_GUEST,\r\n  CREATE_BLOCK,\r\n  DELETE_BLOCK,\r\n  DELETE_BOOKING,\r\n  UPDATE_BOOKING\r\n} from \"../../queries\";\r\nimport { BookingStatus } from \"../../types/enum\";\r\nimport { queryDataFormater } from \"../../utils/utils\";\r\nimport { useDayPicker, IUseDayPicker, LANG } from \"../../hooks/hook\";\r\nimport { IContext } from \"../../pages/bookingHost/BookingHostRouter\";\r\nimport DailyAssig from \"./DailyAssig\";\r\nimport { getOperationName } from \"apollo-link\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport {\r\n  IDailyAssigDataControl,\r\n  IAssigItem\r\n} from \"../../pages/bookingHost/assig/helpers/assigIntrerface\";\r\nimport moment from \"moment\";\r\nimport { guestsDataManufacturer } from \"../../pages/bookingHost/assig/helpers/guestsDataManufacturer\";\r\nimport { blockDataManufacturer } from \"../../pages/bookingHost/assig/helpers/blockDataManufacturer\";\r\n\r\nclass GetAllRoomTypeWithGuestQuery extends Query<\r\n  getAllRoomTypeWithGuest,\r\n  getAllRoomTypeWithGuestVariables\r\n> {}\r\nclass AllocateGuestToRoomMu extends Mutation<\r\n  allocateGuestToRoom,\r\n  allocateGuestToRoomVariables\r\n> {}\r\nclass CreateBlockMu extends Mutation<createBlock, createBlockVariables> {}\r\nclass DeleteBookingMu extends Mutation<deleteBooking, deleteBookingVariables> {}\r\nclass UpdateBlockOpMu extends Mutation<\r\n  updateBlockOption,\r\n  updateBlockOptionVariables\r\n> {}\r\ninterface IProps {\r\n  context: IContext;\r\n}\r\nclass DeleteGuestMu extends Mutation<deleteGuests, deleteGuestsVariables> {}\r\nclass DeleteBlockMu extends Mutation<deleteBlock, deleteBlockVariables> {}\r\nclass UpdateCheckInMu extends Mutation<updateBooking, updateBookingVariables> {}\r\n\r\nexport interface IDailyAssigProp {\r\n  networkStatus: NetworkStatus;\r\n  formatedItemData: IAssigItem[];\r\n  calendarPosition?: \"center\" | \"inside\" | \"topLeft\";\r\n  allocateMu: MutationFn<allocateGuestToRoom, allocateGuestToRoomVariables>;\r\n  loading: boolean;\r\n  blocksData: getAllRoomTypeWithGuest_GetBlocks_blocks[];\r\n  guestsData: getAllRoomTypeWithGuest_GetGuests_guests[];\r\n  dayPickerHook: IUseDayPicker;\r\n  roomTypesData: getAllRoomTypeWithGuest_GetAllRoomType_roomTypes[];\r\n  itemDatas: (\r\n    | getAllRoomTypeWithGuest_GetGuests_guests\r\n    | getAllRoomTypeWithGuest_GetBlocks_blocks\r\n  )[];\r\n}\r\n\r\ninterface IProps {\r\n  context: IContext;\r\n  date: Date;\r\n  isInModal?: boolean;\r\n  calendarPosition?: \"center\" | \"inside\" | \"topLeft\";\r\n}\r\n\r\nconst DailyAssigWrap: React.FC<IProps> = ({\r\n  date,\r\n  context,\r\n  isInModal,\r\n  calendarPosition = \"topLeft\"\r\n}) => {\r\n  const { house } = context;\r\n  const dayPickerHook = useDayPicker(date, date);\r\n  const { houseConfig, _id: houseId } = house;\r\n  const updateVariables = {\r\n    houseId: houseId,\r\n    checkIn: dayPickerHook.from || new Date(),\r\n    checkOut: moment(dayPickerHook.from || new Date())\r\n      .add(1, \"day\")\r\n      .toDate()\r\n  };\r\n\r\n  const Result = useMemo(() => {\r\n    return (\r\n      <GetAllRoomTypeWithGuestQuery\r\n        skip={!date}\r\n        pollInterval={houseConfig.pollingPeriod.period}\r\n        query={GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM}\r\n        variables={{\r\n          ...updateVariables,\r\n          bookingStatuses: [BookingStatus.COMPLETE, BookingStatus.PROGRESSING]\r\n        }}\r\n      >\r\n        {({ data, loading, networkStatus }) => {\r\n          const roomTypesData =\r\n            queryDataFormater(data, \"GetAllRoomType\", \"roomTypes\", undefined) ||\r\n            []; // 원본데이터\r\n          const guestsData =\r\n            queryDataFormater(data, \"GetGuests\", \"guests\", undefined) || []; // 원본데이터\r\n          const blocks =\r\n            queryDataFormater(data, \"GetBlocks\", \"blocks\", undefined) || []; // 원본데이터\r\n\r\n          const formatedGuestsData = guestsDataManufacturer(guestsData);\r\n          const formatedBlockData = blockDataManufacturer(blocks);\r\n          const formatedItemData = formatedGuestsData\r\n            .concat(formatedBlockData)\r\n            .map((block, index) => {\r\n              block.itemIndex = index;\r\n              return block;\r\n            });\r\n\r\n          return (\r\n            <UpdateCheckInMu\r\n              refetchQueries={[\r\n                getOperationName(GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM) || \"\"\r\n              ]}\r\n              mutation={UPDATE_BOOKING}\r\n            >\r\n              {(updateCheckInMu, { loading: checkInBookingLoading }) => (\r\n                <AllocateGuestToRoomMu\r\n                  onCompleted={({ AllocateGuestToRoom }) => {\r\n                    onCompletedMessage(\r\n                      AllocateGuestToRoom,\r\n                      LANG(\"assig_completed\"),\r\n                      LANG(\"assig_failed\")\r\n                    );\r\n                  }}\r\n                  refetchQueries={[\r\n                    getOperationName(GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM)!\r\n                  ]}\r\n                  mutation={ALLOCATE_GUEST_TO_ROOM}\r\n                >\r\n                  {allocateMu => {\r\n                    const dailyAssigContext: IDailyAssigProp = {\r\n                      allocateMu,\r\n                      loading,\r\n                      blocksData: blocks,\r\n                      guestsData: guestsData,\r\n                      formatedItemData,\r\n                      dayPickerHook: dayPickerHook,\r\n                      roomTypesData: roomTypesData,\r\n                      itemDatas: [...guestsData, ...blocks],\r\n                      networkStatus,\r\n                      calendarPosition\r\n                    };\r\n                    return (\r\n                      <DeleteGuestMu\r\n                        onCompleted={({ DeleteGuests }) => {\r\n                          onCompletedMessage(\r\n                            DeleteGuests,\r\n                            LANG(\"delete_completed\"),\r\n                            LANG(\"delete_failed\")\r\n                          );\r\n                        }}\r\n                        mutation={DELETE_GUEST}\r\n                      >\r\n                        {(deleteGuestMu, { loading: deleteGuestLoading }) => (\r\n                          <CreateBlockMu\r\n                            onCompleted={({ CreateBlock }) => {\r\n                              onCompletedMessage(\r\n                                CreateBlock,\r\n                                LANG(\"block_room_completed\"),\r\n                                LANG(\"block_room_failed\")\r\n                              );\r\n                            }}\r\n                            refetchQueries={[\r\n                              getOperationName(\r\n                                GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM\r\n                              ) || \"\"\r\n                            ]}\r\n                            mutation={CREATE_BLOCK}\r\n                          >\r\n                            {(\r\n                              createBlockMu,\r\n                              { loading: createBlockLoading }\r\n                            ) => (\r\n                              <DeleteBlockMu\r\n                                refetchQueries={[\r\n                                  getOperationName(\r\n                                    GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM\r\n                                  )!\r\n                                ]}\r\n                                onCompleted={({ DeleteBlock }) => {\r\n                                  onCompletedMessage(\r\n                                    DeleteBlock,\r\n                                    LANG(\"room_block_release\"),\r\n                                    LANG(\"room_block_release_fail\")\r\n                                  );\r\n                                }}\r\n                                mutation={DELETE_BLOCK}\r\n                              >\r\n                                {(\r\n                                  deleteBlockMu,\r\n                                  { loading: deleteBlockLoading }\r\n                                ) => (\r\n                                  <DeleteBookingMu\r\n                                    refetchQueries={[\r\n                                      getOperationName(\r\n                                        GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM\r\n                                      )!\r\n                                    ]}\r\n                                    mutation={DELETE_BOOKING}\r\n                                    onCompleted={({ DeleteBooking }) => {\r\n                                      onCompletedMessage(\r\n                                        DeleteBooking,\r\n                                        LANG(\"reservation_delete_complete\"),\r\n                                        LANG(\"reservation_delete_fail\")\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    {(\r\n                                      deleteBookingMu,\r\n                                      { loading: deleteBookingLoading }\r\n                                    ) => (\r\n                                      <UpdateBlockOpMu\r\n                                        mutation={UPDATE_BLOCK_OPTION}\r\n                                        onCompleted={({\r\n                                          UpdateBlockOption\r\n                                        }) => {\r\n                                          onCompletedMessage(\r\n                                            UpdateBlockOption,\r\n                                            LANG(\"update_complete\"),\r\n                                            LANG(\"update_fail\")\r\n                                          );\r\n                                        }}\r\n                                      >\r\n                                        {(\r\n                                          updateBlockOpMu,\r\n                                          { loading: updateBlockLoading }\r\n                                        ) => {\r\n                                          const totalMuLoading =\r\n                                            updateBlockLoading ||\r\n                                            createBlockLoading ||\r\n                                            deleteBlockLoading ||\r\n                                            deleteGuestLoading ||\r\n                                            checkInBookingLoading ||\r\n                                            deleteBookingLoading;\r\n\r\n                                          const dailyAssigDataControl: IDailyAssigDataControl = {\r\n                                            deleteBookingMu,\r\n                                            deleteGuestsMu: deleteGuestMu,\r\n                                            createBlockMu,\r\n                                            deleteBlockMu,\r\n                                            updateBlockOpMu,\r\n                                            updateCheckInMu,\r\n                                            allocateMu,\r\n                                            totalMuLoading\r\n                                          };\r\n\r\n                                          return (\r\n                                            <Fragment>\r\n                                              <DailyAssig\r\n                                                context={context}\r\n                                                outDailyAssigContext={\r\n                                                  dailyAssigContext\r\n                                                }\r\n                                                dailyAssigDataControl={\r\n                                                  dailyAssigDataControl\r\n                                                }\r\n                                              />\r\n                                            </Fragment>\r\n                                          );\r\n                                        }}\r\n                                      </UpdateBlockOpMu>\r\n                                    )}\r\n                                  </DeleteBookingMu>\r\n                                )}\r\n                              </DeleteBlockMu>\r\n                            )}\r\n                          </CreateBlockMu>\r\n                        )}\r\n                      </DeleteGuestMu>\r\n                    );\r\n                  }}\r\n                </AllocateGuestToRoomMu>\r\n              )}\r\n            </UpdateCheckInMu>\r\n          );\r\n        }}\r\n      </GetAllRoomTypeWithGuestQuery>\r\n    );\r\n  }, [dayPickerHook.from]);\r\n\r\n  return Result;\r\n};\r\n\r\nexport default DailyAssigWrap;\r\n"]},"metadata":{},"sourceType":"module"}