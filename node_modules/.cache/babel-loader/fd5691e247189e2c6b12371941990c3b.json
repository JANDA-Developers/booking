{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { isEmpty } from \"../../../../utils/utils\";\nimport { DEFAULT_ASSIG_GROUP } from \"../../../../types/defaults\";\nimport { RoomGender, Gender, PricingType } from \"../../../../types/enum\";\n// Î£∏Ï††ÎçîÏóê Í∞íÏùÑÎÑ£Ïñ¥ Í≤åÏä§Ìä∏ÏÑ±Î≥ÑÏùÑ Î∞õÏùå\n// separately ÎÇò Any Ïùò Í≤ΩÏö∞ÏóêÎäî ÎÇ®Ïûê Î∞òÌôò\nexport var roomGenderToGedner = function roomGenderToGedner(roomGender, pricingType) {\n  if (roomGender === RoomGender.MALE) return Gender.MALE;\n  if (roomGender === RoomGender.FEMALE) return Gender.FEMALE;\n\n  if (pricingType === PricingType.DOMITORY) {\n    if (roomGender === RoomGender.ANY) return Gender.MALE;\n    if (roomGender === RoomGender.SEPARATELY) return Gender.MALE;\n  } else if (pricingType === PricingType.ROOM) {\n    if (roomGender === RoomGender.ANY) return null;\n    if (roomGender === RoomGender.SEPARATELY) return null;\n  }\n\n  return null;\n}; // üõå Î≤†ÎìúÌÉÄÏûÖÏùºÍ≤ΩÏö∞Ïóê IDÎäî + 0~(Ïù∏Îç±Ïä§);\n//  TODO: Î©îÎ™®Î•º ÏÇ¨Ïö©Ìï¥ÏÑú Îç∞Ïù¥ÌÑ∞Î•º ÏïÑÎÅºÏûê\n//  isAdd Îäî Î∞©ÌÉÄÏûÖ ÏÉùÏÑ±ÏóêÏÑú Ï∂îÍ∞Ä Î≤ÑÌäºÏùÑ ÏúÑÌïúÍ≤É\n\nexport var roomDataManufacturer = function roomDataManufacturer() {\n  var roomTypeDatas = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var isAdd = arguments.length > 1 ? arguments[1] : undefined;\n  var roomGroups = [];\n  if (!roomTypeDatas) return roomGroups;\n  roomTypeDatas.map(function (roomTypeData, roomTypeIndex) {\n    // Ïö∞ÏÑ† Î∞©Îì§ÏùÑ ÏõêÌïòÎäî ÌèºÏúºÎ°ú Î≥ÄÌôò\n    var rooms = roomTypeData.rooms; // ÎπàÎ∞©ÌÉÄÏûÖ Ï†úÏô∏\n\n    if (!isEmpty(rooms)) {\n      // üè† Î∞©ÌÉÄÏûÖÏùº Í≤ΩÏö∞\n      if (roomTypeData.pricingType === \"ROOM\") {\n        rooms.map(function (room, index) {\n          roomGroups.push({\n            id: room._id + 0,\n            title: room.name,\n            roomTypeId: roomTypeData._id,\n            roomTypeIndex: roomTypeData.index,\n            roomIndex: room.index,\n            roomType: roomTypeData,\n            roomId: room._id,\n            room: {\n              _id: room._id,\n              name: room.name\n            },\n            pricingType: roomTypeData.pricingType,\n            bedIndex: 0,\n            placeIndex: -1,\n            isLastOfRoom: true,\n            isLastOfRoomType: roomTypeData.roomCount === index,\n            type: \"normal\",\n            roomGender: roomTypeData.roomGender\n          });\n        });\n      } // üõå Î≤†ÎìúÌÉÄÏûÖÏùºÍ≤ΩÏö∞\n\n\n      if (roomTypeData.pricingType === \"DOMITORY\") {\n        rooms.map(function (room, index) {\n          for (var i = 0; roomTypeData.peopleCount > i; i += 1) {\n            roomGroups.push({\n              id: room._id + i,\n              title: room.name,\n              room: {\n                _id: room._id,\n                name: room.name\n              },\n              roomTypeId: roomTypeData._id,\n              roomTypeIndex: roomTypeData.index,\n              roomIndex: room.index,\n              roomType: roomTypeData,\n              roomId: room._id,\n              bedIndex: i,\n              placeIndex: i + 1,\n              isLastOfRoom: roomTypeData.peopleCount === i + 1,\n              type: \"normal\",\n              roomGender: roomTypeData.roomGender,\n              pricingType: roomTypeData.pricingType,\n              isLastOfRoomType: roomTypeData.roomCount === index + 1 && roomTypeData.peopleCount === i + 1\n            });\n          }\n        });\n      } // Î∞©ÏÉùÏÑ±Ï§ëÏùºÎñÑÎßå will be deprecate ‚õîÔ∏è\n\n\n      if (isAdd) {\n        roomGroups.push(_objectSpread({}, DEFAULT_ASSIG_GROUP, {\n          id: \"add\".concat(roomTypeData._id).concat(roomTypeIndex),\n          roomTypeId: roomTypeData._id,\n          roomTypeIndex: roomTypeData.index,\n          type: \"add\"\n        }));\n      } // Î∞©ÏÉùÏÑ±Ï§ëÏùºÎñÑÎßå will be deprecate ‚õîÔ∏è\n\n    } else if (isAdd) {\n      if (roomTypeData.pricingType === \"ROOM\") {\n        roomGroups.push(_objectSpread({}, DEFAULT_ASSIG_GROUP, {\n          id: \"add\".concat(roomTypeData._id).concat(roomTypeIndex),\n          roomTypeId: roomTypeData._id,\n          roomTypeIndex: roomTypeData.index,\n          roomType: roomTypeData,\n          roomGender: roomTypeData.roomGender,\n          roomId: \"\".concat(roomTypeData._id, \"add\"),\n          type: \"add\"\n        }));\n      } else {\n        for (var i = 0; roomTypeData.peopleCount > i; i += 1) {\n          roomGroups.push(_objectSpread({}, DEFAULT_ASSIG_GROUP, {\n            id: \"add\".concat(roomTypeData._id).concat(roomTypeIndex) + i,\n            roomTypeId: roomTypeData._id,\n            roomTypeIndex: roomTypeData.index,\n            roomType: roomTypeData,\n            roomGender: roomTypeData.roomGender,\n            roomId: \"\".concat(roomTypeData._id, \"add\"),\n            type: \"add\",\n            placeIndex: i + 1,\n            isLastOfRoom: roomTypeData.peopleCount === i + 1,\n            isLastOfRoomType: true\n          }));\n        }\n      }\n    }\n  }); // Î∞©ÏÉùÏÑ±Ï§ëÏùºÎñÑÎßå\n\n  if (isAdd) {\n    roomGroups.push(_objectSpread({}, DEFAULT_ASSIG_GROUP, {\n      id: \"addRoomType\",\n      type: \"addRoomType\"\n    }));\n  }\n\n  return roomGroups;\n};","map":{"version":3,"sources":["C:/Users/ÍπÄÎØºÏû¨/Desktop/projects/jd-api-server-client/src/pages/bookingHost/assig/helpers/groupDataMenufacture.tsx"],"names":["isEmpty","DEFAULT_ASSIG_GROUP","RoomGender","Gender","PricingType","roomGenderToGedner","roomGender","pricingType","MALE","FEMALE","DOMITORY","ANY","SEPARATELY","ROOM","roomDataManufacturer","roomTypeDatas","isAdd","roomGroups","map","roomTypeData","roomTypeIndex","rooms","room","index","push","id","_id","title","name","roomTypeId","roomIndex","roomType","roomId","bedIndex","placeIndex","isLastOfRoom","isLastOfRoomType","roomCount","type","i","peopleCount"],"mappings":"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","sourcesContent":["import {IRoomType} from \"../../../../types/interface\";\r\nimport {isEmpty} from \"../../../../utils/utils\";\r\nimport {DEFAULT_ASSIG_GROUP} from \"../../../../types/defaults\";\r\nimport {RoomGender, Gender, PricingType} from \"../../../../types/enum\";\r\nimport {IAssigGroup} from \"./assigIntrerface\";\r\n\r\n// Î£∏Ï††ÎçîÏóê Í∞íÏùÑÎÑ£Ïñ¥ Í≤åÏä§Ìä∏ÏÑ±Î≥ÑÏùÑ Î∞õÏùå\r\n// separately ÎÇò Any Ïùò Í≤ΩÏö∞ÏóêÎäî ÎÇ®Ïûê Î∞òÌôò\r\nexport const roomGenderToGedner = (\r\n  roomGender: RoomGender | null | Gender,\r\n  pricingType: PricingType\r\n) => {\r\n  if (roomGender === RoomGender.MALE) return Gender.MALE;\r\n  if (roomGender === RoomGender.FEMALE) return Gender.FEMALE;\r\n\r\n  if (pricingType === PricingType.DOMITORY) {\r\n    if (roomGender === RoomGender.ANY) return Gender.MALE;\r\n    if (roomGender === RoomGender.SEPARATELY) return Gender.MALE;\r\n  } else if (pricingType === PricingType.ROOM) {\r\n    if (roomGender === RoomGender.ANY) return null;\r\n    if (roomGender === RoomGender.SEPARATELY) return null;\r\n  }\r\n  return null;\r\n};\r\n// üõå Î≤†ÎìúÌÉÄÏûÖÏùºÍ≤ΩÏö∞Ïóê IDÎäî + 0~(Ïù∏Îç±Ïä§);\r\n//  TODO: Î©îÎ™®Î•º ÏÇ¨Ïö©Ìï¥ÏÑú Îç∞Ïù¥ÌÑ∞Î•º ÏïÑÎÅºÏûê\r\n//  isAdd Îäî Î∞©ÌÉÄÏûÖ ÏÉùÏÑ±ÏóêÏÑú Ï∂îÍ∞Ä Î≤ÑÌäºÏùÑ ÏúÑÌïúÍ≤É\r\nexport const roomDataManufacturer = (\r\n  roomTypeDatas: IRoomType[] | null | undefined = [],\r\n  isAdd?: boolean\r\n) => {\r\n  const roomGroups: IAssigGroup[] = [];\r\n\r\n  if (!roomTypeDatas) return roomGroups;\r\n\r\n  roomTypeDatas.map((roomTypeData, roomTypeIndex) => {\r\n    // Ïö∞ÏÑ† Î∞©Îì§ÏùÑ ÏõêÌïòÎäî ÌèºÏúºÎ°ú Î≥ÄÌôò\r\n\r\n    const {rooms} = roomTypeData;\r\n\r\n    // ÎπàÎ∞©ÌÉÄÏûÖ Ï†úÏô∏\r\n    if (!isEmpty(rooms)) {\r\n      // üè† Î∞©ÌÉÄÏûÖÏùº Í≤ΩÏö∞\r\n      if (roomTypeData.pricingType === \"ROOM\") {\r\n        rooms.map((room, index) => {\r\n          roomGroups.push({\r\n            id: room._id + 0,\r\n            title: room.name,\r\n            roomTypeId: roomTypeData._id,\r\n            roomTypeIndex: roomTypeData.index,\r\n            roomIndex: room.index,\r\n            roomType: roomTypeData,\r\n            roomId: room._id,\r\n            room: {\r\n              _id: room._id,\r\n              name: room.name\r\n            },\r\n            pricingType: roomTypeData.pricingType,\r\n            bedIndex: 0,\r\n            placeIndex: -1,\r\n            isLastOfRoom: true,\r\n            isLastOfRoomType: roomTypeData.roomCount === index,\r\n            type: \"normal\",\r\n            roomGender: roomTypeData.roomGender\r\n          });\r\n        });\r\n      }\r\n      // üõå Î≤†ÎìúÌÉÄÏûÖÏùºÍ≤ΩÏö∞\r\n      if (roomTypeData.pricingType === \"DOMITORY\") {\r\n        rooms.map((room, index) => {\r\n          for (let i = 0; roomTypeData.peopleCount > i; i += 1) {\r\n            roomGroups.push({\r\n              id: room._id + i,\r\n              title: room.name,\r\n              room: {\r\n                _id: room._id,\r\n                name: room.name\r\n              },\r\n              roomTypeId: roomTypeData._id,\r\n              roomTypeIndex: roomTypeData.index,\r\n              roomIndex: room.index,\r\n              roomType: roomTypeData,\r\n              roomId: room._id,\r\n              bedIndex: i,\r\n              placeIndex: i + 1,\r\n              isLastOfRoom: roomTypeData.peopleCount === i + 1,\r\n              type: \"normal\",\r\n              roomGender: roomTypeData.roomGender,\r\n              pricingType: roomTypeData.pricingType,\r\n              isLastOfRoomType:\r\n                roomTypeData.roomCount === index + 1 &&\r\n                roomTypeData.peopleCount === i + 1\r\n            });\r\n          }\r\n        });\r\n      }\r\n      // Î∞©ÏÉùÏÑ±Ï§ëÏùºÎñÑÎßå will be deprecate ‚õîÔ∏è\r\n      if (isAdd) {\r\n        roomGroups.push({\r\n          ...DEFAULT_ASSIG_GROUP,\r\n          id: `add${roomTypeData._id}${roomTypeIndex}`,\r\n          roomTypeId: roomTypeData._id,\r\n          roomTypeIndex: roomTypeData.index,\r\n          type: \"add\"\r\n        });\r\n      }\r\n      // Î∞©ÏÉùÏÑ±Ï§ëÏùºÎñÑÎßå will be deprecate ‚õîÔ∏è\r\n    } else if (isAdd) {\r\n      if (roomTypeData.pricingType === \"ROOM\") {\r\n        roomGroups.push({\r\n          ...DEFAULT_ASSIG_GROUP,\r\n          id: `add${roomTypeData._id}${roomTypeIndex}`,\r\n          roomTypeId: roomTypeData._id,\r\n          roomTypeIndex: roomTypeData.index,\r\n          roomType: roomTypeData,\r\n          roomGender: roomTypeData.roomGender,\r\n          roomId: `${roomTypeData._id}add`,\r\n          type: \"add\"\r\n        });\r\n      } else {\r\n        for (let i = 0; roomTypeData.peopleCount > i; i += 1) {\r\n          roomGroups.push({\r\n            ...DEFAULT_ASSIG_GROUP,\r\n            id: `add${roomTypeData._id}${roomTypeIndex}` + i,\r\n            roomTypeId: roomTypeData._id,\r\n            roomTypeIndex: roomTypeData.index,\r\n            roomType: roomTypeData,\r\n            roomGender: roomTypeData.roomGender,\r\n            roomId: `${roomTypeData._id}add`,\r\n            type: \"add\",\r\n            placeIndex: i + 1,\r\n            isLastOfRoom: roomTypeData.peopleCount === i + 1,\r\n            isLastOfRoomType: true\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  // Î∞©ÏÉùÏÑ±Ï§ëÏùºÎñÑÎßå\r\n  if (isAdd) {\r\n    roomGroups.push({\r\n      ...DEFAULT_ASSIG_GROUP,\r\n      id: `addRoomType`,\r\n      type: \"addRoomType\"\r\n    });\r\n  }\r\n  return roomGroups;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}