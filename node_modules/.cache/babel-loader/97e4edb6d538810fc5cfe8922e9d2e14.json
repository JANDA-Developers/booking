{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\outPages\\\\HM\\\\HM.tsx\";\nimport React from \"react\";\nimport ImageUploader from \"../../../atoms/imageUploader/ImageUploader\";\nimport ProfileCircle from \"../../../atoms/profileCircle/ProfileCircle\";\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\nimport Button from \"../../../atoms/button/Button\";\nimport CircleIcon from \"../../../atoms/circleIcon/CircleIcon\";\nimport JDIcon, { IconSize } from \"../../../atoms/icons/Icons\";\nimport JDmenu, { JDsubMenu } from \"../../../atoms/menu/Menu\";\nimport { useModal, LANG } from \"../../../hooks/hook\";\nimport { Fragment } from \"react\";\nimport \"./HM.scss\";\nimport LangViewModal from \"../../bookingHost/HMconfig/component/LangViewModal\";\nimport HMmenu from \"./component/HMmenu\";\nimport Preloader from \"../../../atoms/preloader/Preloader\";\n\nvar HMcompoent = function HMcompoent(_ref) {\n  var setCurrentLang = _ref.setCurrentLang,\n      currentLang = _ref.currentLang,\n      bgData = _ref.bgData,\n      loading = _ref.loading,\n      userInfo = _ref.userInfo,\n      menuData = _ref.menuData,\n      title = _ref.title,\n      enableLangs = _ref.enableLangs,\n      host = _ref.host;\n  var languageListModalHook = useModal();\n  var visibleMenuData = host ? menuData.filter(function (menu) {\n    return menu.isEnable;\n  }) : menuData;\n\n  if (loading) {\n    return React.createElement(Preloader, {\n      page: true,\n      size: \"large\",\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"HM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"HM__mocUp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"HM__frame\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"HM__headerSectiion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section__box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"HM__bgSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, !host ? React.createElement(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(bgData ? bgData.url : \"\", \")\")\n    },\n    className: \"HM__bg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }) : React.createElement(ImageUploader, Object.assign({\n    className: \"HM__bg\",\n    mode: \"noBg\",\n    coverImg: true\n  }, host.bgImageHook, {\n    minHeight: \"150px\",\n    height: \"150px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(ProfileCircle, {\n    file: userInfo.profileImg,\n    isBordered: true,\n    whiteBorder: true,\n    size: IconSize.BIG_LARGE,\n    className: \"HM__profilceCricle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })))), !host && !title || React.createElement(\"div\", {\n    className: \"docs-section__box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"HM__titleWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, !host ? React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, title[currentLang]) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    textAlign: \"center\",\n    value: title[currentLang],\n    onChange: function onChange(value) {\n      var setTitle = host.setTitle;\n      title[currentLang] = value;\n      setTitle(_objectSpread({}, title));\n    },\n    placeholder: LANG(\"HM_title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"HM__languageBtnWrap JDflex--center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"JDmargin-bottom0\",\n    onClick: function onClick() {\n      languageListModalHook.openModal();\n    },\n    tooltip: \"\".concat(currentLang),\n    thema: \"primary\",\n    label: \"language\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"HM__contectMenu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(CircleIcon, {\n    darkWave: true,\n    thema: \"greybg\",\n    onClick: function onClick() {\n      if (!host) {\n        document.location.href = \"tel:\".concat(userInfo.phoneNumber);\n      } else {\n        host.phoneNumberModalHook.openModal();\n      }\n    },\n    size: IconSize.BIG_LARGE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(JDIcon, {\n    tooltip: \"\".concat(LANG(\"current_set_number\"), \"}: \").concat(userInfo.phoneNumber),\n    size: IconSize.BIG_LARGE,\n    icon: \"call\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(CircleIcon, {\n    darkWave: true,\n    onClick: function onClick() {\n      window.open(\"https://www.google.com/maps/search/?api=1&query=\".concat(userInfo.location.address));\n    },\n    thema: \"greybg\",\n    size: IconSize.BIG_LARGE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(JDIcon, {\n    tooltip: LANG(\"check_location_with_google_map\"),\n    size: IconSize.BIG_LARGE,\n    icon: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })), React.createElement(CircleIcon, {\n    darkWave: true,\n    onClick: function onClick() {\n      if (!host) {\n        window.open(\"mailto:\".concat(userInfo.email));\n      } else {\n        host.emailModalHook.openModal();\n      }\n    },\n    thema: \"greybg\",\n    size: IconSize.BIG_LARGE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(JDIcon, {\n    tooltip: LANG(\"send_text_to_host\"),\n    size: IconSize.BIG_LARGE,\n    icon: \"sms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })))), React.createElement(\"section\", {\n    className: \"HM__bodySection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"HM__menus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"HM__menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(JDmenu, {\n    customMode: \"dropDown\",\n    mode: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, visibleMenuData.map(function (menu) {\n    return React.createElement(JDsubMenu, {\n      key: menu.id,\n      title: React.createElement(\"div\", {\n        className: \"JDflex--vCenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(JDIcon, {\n        className: \"JDstandard-space\",\n        size: IconSize.MEDEIUM_SMALL,\n        icon: menu.icon || undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, menu.name[currentLang]), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(HMmenu, {\n      menu: menu,\n      currentLang: currentLang,\n      menuData: menuData,\n      host: host,\n      onChangeFile: function onChangeFile(file) {\n        menu.img = file || null;\n        host && host.setMenuData(_toConsumableArray(menuData));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }));\n  })))))), React.createElement(LangViewModal, {\n    modalHook: languageListModalHook,\n    setCurrentLang: setCurrentLang,\n    enableLangs: enableLangs,\n    currentLang: currentLang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }));\n};\n\nexport default HMcompoent;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/outPages/HM/HM.tsx"],"names":["React","ImageUploader","ProfileCircle","InputText","Button","CircleIcon","JDIcon","IconSize","JDmenu","JDsubMenu","useModal","LANG","Fragment","LangViewModal","HMmenu","Preloader","HMcompoent","setCurrentLang","currentLang","bgData","loading","userInfo","menuData","title","enableLangs","host","languageListModalHook","visibleMenuData","filter","menu","isEnable","backgroundImage","url","bgImageHook","profileImg","BIG_LARGE","value","setTitle","openModal","document","location","href","phoneNumber","phoneNumberModalHook","window","open","address","email","emailModalHook","map","id","MEDEIUM_SMALL","icon","undefined","name","file","img","setMenuData"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ImageUploader from \"../../../atoms/imageUploader/ImageUploader\";\r\nimport ProfileCircle from \"../../../atoms/profileCircle/ProfileCircle\";\r\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport CircleIcon from \"../../../atoms/circleIcon/CircleIcon\";\r\nimport JDIcon, {IconSize} from \"../../../atoms/icons/Icons\";\r\nimport JDmenu, {JDsubMenu} from \"../../../atoms/menu/Menu\";\r\nimport {Language} from \"../../../types/enum\";\r\nimport {\r\n  useModal,\r\n  IuseImageUploader,\r\n  IUseModal,\r\n  LANG\r\n} from \"../../../hooks/hook\";\r\nimport {Fragment} from \"react\";\r\nimport \"./HM.scss\";\r\nimport LangViewModal from \"../../bookingHost/HMconfig/component/LangViewModal\";\r\nimport {\r\n  getHM_GetHM_HM_location,\r\n  getHM_GetHM_HM_menus\r\n} from \"../../../types/api\";\r\nimport HMmenu from \"./component/HMmenu\";\r\n\r\nimport Preloader from \"../../../atoms/preloader/Preloader\";\r\nimport {JdFile} from \"../../../types/interface\";\r\n\r\ninterface IProps {\r\n  host?: {\r\n    setEnableLngList: any;\r\n    setMenuData: React.Dispatch<React.SetStateAction<getHM_GetHM_HM_menus[]>>;\r\n    bgImageHook: IuseImageUploader;\r\n    setTitle: React.Dispatch<Object>;\r\n    emailModalHook: IUseModal<any>;\r\n    phoneNumberModalHook: IUseModal<any>;\r\n  };\r\n  menuData: getHM_GetHM_HM_menus[];\r\n  bgData?: JdFile | null;\r\n  title: any;\r\n  enableLangs: Language[];\r\n  setCurrentLang: React.Dispatch<React.SetStateAction<Language>>;\r\n  currentLang: Language;\r\n  loading?: boolean;\r\n  userInfo: {\r\n    email: string | null;\r\n    profileImg?: JdFile | null;\r\n    phoneNumber: string | null;\r\n    location: getHM_GetHM_HM_location;\r\n  };\r\n}\r\n\r\nconst HMcompoent: React.FC<IProps> = ({\r\n  setCurrentLang,\r\n  currentLang,\r\n  bgData,\r\n  loading,\r\n  userInfo,\r\n  menuData,\r\n  title,\r\n  enableLangs,\r\n  host\r\n}) => {\r\n  const languageListModalHook = useModal();\r\n\r\n  const visibleMenuData = host\r\n    ? menuData.filter((menu: any) => menu.isEnable)\r\n    : menuData;\r\n\r\n  if (loading) {\r\n    return <Preloader page size=\"large\" loading={loading} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"HM\">\r\n      <div className=\"HM__mocUp\" />\r\n      <div className=\"HM__frame\">\r\n        <section className=\"HM__headerSectiion\">\r\n          <div className=\"docs-section__box\">\r\n            <div className=\"HM__bgSection\">\r\n              <Fragment>\r\n                {!host ? (\r\n                  <div\r\n                    style={{\r\n                      backgroundImage: `url(${bgData ? bgData.url : \"\"})`\r\n                    }}\r\n                    className=\"HM__bg\"\r\n                  />\r\n                ) : (\r\n                  <ImageUploader\r\n                    className=\"HM__bg\"\r\n                    mode=\"noBg\"\r\n                    coverImg\r\n                    {...host.bgImageHook}\r\n                    minHeight=\"150px\"\r\n                    height=\"150px\"\r\n                  />\r\n                )}\r\n                <ProfileCircle\r\n                  file={userInfo.profileImg}\r\n                  isBordered\r\n                  whiteBorder\r\n                  size={IconSize.BIG_LARGE}\r\n                  className=\"HM__profilceCricle\"\r\n                />\r\n              </Fragment>\r\n            </div>\r\n          </div>\r\n          {(!host && !title) || (\r\n            <div className=\"docs-section__box\">\r\n              <div className=\"HM__titleWrap\">\r\n                {!host ? (\r\n                  <h6>{title[currentLang]}</h6>\r\n                ) : (\r\n                  <div>\r\n                    <InputText\r\n                      textAlign=\"center\"\r\n                      value={title[currentLang]}\r\n                      onChange={value => {\r\n                        const {setTitle} = host;\r\n                        title[currentLang] = value;\r\n                        setTitle({...title});\r\n                      }}\r\n                      placeholder={LANG(\"HM_title\")}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"HM__languageBtnWrap JDflex--center\">\r\n                <Button\r\n                  className=\"JDmargin-bottom0\"\r\n                  onClick={() => {\r\n                    languageListModalHook.openModal();\r\n                  }}\r\n                  tooltip={`${currentLang}`}\r\n                  thema=\"primary\"\r\n                  label=\"language\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"HM__contectMenu\">\r\n            {/* 👿 자식에게 넘길수있도록 하자 */}\r\n            <CircleIcon\r\n              darkWave\r\n              thema=\"greybg\"\r\n              onClick={() => {\r\n                if (!host) {\r\n                  document.location.href = `tel:${userInfo.phoneNumber}`;\r\n                } else {\r\n                  host.phoneNumberModalHook.openModal();\r\n                }\r\n              }}\r\n              size={IconSize.BIG_LARGE}\r\n            >\r\n              <JDIcon\r\n                tooltip={`${LANG(\"current_set_number\")}}: ${\r\n                  userInfo.phoneNumber\r\n                }`}\r\n                size={IconSize.BIG_LARGE}\r\n                icon=\"call\"\r\n              />\r\n            </CircleIcon>\r\n            <CircleIcon\r\n              darkWave\r\n              onClick={() => {\r\n                window.open(\r\n                  `https://www.google.com/maps/search/?api=1&query=${userInfo.location.address}`\r\n                );\r\n              }}\r\n              thema=\"greybg\"\r\n              size={IconSize.BIG_LARGE}\r\n            >\r\n              <JDIcon\r\n                tooltip={LANG(\"check_location_with_google_map\")}\r\n                size={IconSize.BIG_LARGE}\r\n                icon=\"location\"\r\n              />\r\n            </CircleIcon>\r\n            <CircleIcon\r\n              darkWave\r\n              onClick={() => {\r\n                if (!host) {\r\n                  window.open(`mailto:${userInfo.email}`);\r\n                } else {\r\n                  host.emailModalHook.openModal();\r\n                }\r\n              }}\r\n              thema=\"greybg\"\r\n              size={IconSize.BIG_LARGE}\r\n            >\r\n              <JDIcon\r\n                tooltip={LANG(\"send_text_to_host\")}\r\n                size={IconSize.BIG_LARGE}\r\n                icon=\"sms\"\r\n              />\r\n            </CircleIcon>\r\n          </div>\r\n        </section>\r\n        <section className=\"HM__bodySection\">\r\n          <ul className=\"HM__menus\">\r\n            <li className=\"HM__menu\">\r\n              <JDmenu customMode=\"dropDown\" mode=\"inline\">\r\n                {visibleMenuData.map(menu => {\r\n                  return (\r\n                    <JDsubMenu\r\n                      key={menu.id}\r\n                      title={\r\n                        <div className=\"JDflex--vCenter\">\r\n                          <JDIcon\r\n                            className=\"JDstandard-space\"\r\n                            size={IconSize.MEDEIUM_SMALL}\r\n                            icon={(menu.icon as any) || undefined}\r\n                          />\r\n                          <span>{menu.name[currentLang]}</span>\r\n                          <span></span>\r\n                        </div>\r\n                      }\r\n                    >\r\n                      <HMmenu\r\n                        menu={menu}\r\n                        currentLang={currentLang}\r\n                        menuData={menuData}\r\n                        host={host}\r\n                        onChangeFile={file => {\r\n                          menu.img = file || null;\r\n                          host && host.setMenuData([...menuData]);\r\n                        }}\r\n                      />\r\n                    </JDsubMenu>\r\n                  );\r\n                })}\r\n              </JDmenu>\r\n            </li>\r\n          </ul>\r\n        </section>\r\n      </div>\r\n      <LangViewModal\r\n        modalHook={languageListModalHook}\r\n        setCurrentLang={setCurrentLang}\r\n        enableLangs={enableLangs}\r\n        currentLang={currentLang}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HMcompoent;\r\n"]},"metadata":{},"sourceType":"module"}