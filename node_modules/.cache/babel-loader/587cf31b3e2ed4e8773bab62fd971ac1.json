{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { ReactTooltip } from \"../../../../atoms/tooltipList/TooltipList\";\nimport JDisNetworkRequestInFlight from \"../../../../utils/netWorkStatusToast\";\nimport { muResult } from \"../../../../utils/utils\";\nimport { toast } from \"react-toastify\";\nimport { LANG } from \"../../../../hooks/hook\";\nexport function getDailyAssigUtils(_ref, _ref2) {\n  var deleteBookingMu = _ref.deleteBookingMu,\n      updateCheckInMu = _ref.updateCheckInMu;\n  var guestsData = _ref2.guestsData,\n      networkStatus = _ref2.networkStatus,\n      confirmModalHook = _ref2.confirmModalHook;\n\n  // 모든 툴팁 숨김\n  var allTooltipsHide = function allTooltipsHide(except) {\n    ReactTooltip.hide();\n  }; // 예약을 예약 아이디로 삭제\n\n\n  var deleteBookingById =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(bookingId, confirm) {\n      var callBackFn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              callBackFn =\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(flag) {\n                  var result;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!flag) {\n                            _context.next = 4;\n                            break;\n                          }\n\n                          _context.next = 3;\n                          return deleteBookingMu({\n                            variables: {\n                              bookingId: bookingId\n                            }\n                          });\n\n                        case 3:\n                          result = _context.sent;\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function callBackFn(_x3) {\n                  return _ref4.apply(this, arguments);\n                };\n              }(); // 확인메시지 출력여부\n\n\n              if (!confirm) callBackFn(true);else {\n                confirmModalHook.openModal({\n                  txt: LANG(\"are_you_sure_you_want_to_delete_the_reservation\"),\n                  callBack: callBackFn\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteBookingById(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // 체크인 아웃 투글\n\n\n  var toogleCheckInOut =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(targetGuest) {\n      var _targetGuest$booking, bookingId, isIn, result;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _targetGuest$booking = targetGuest.booking, bookingId = _targetGuest$booking._id, isIn = _targetGuest$booking.checkInInfo.isIn;\n\n              if (!JDisNetworkRequestInFlight(networkStatus)) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              _context3.next = 5;\n              return updateCheckInMu({\n                variables: {\n                  bookingId: bookingId,\n                  params: {\n                    checkInInfo: {\n                      isIn: !isIn\n                    }\n                  }\n                }\n              });\n\n            case 5:\n              result = _context3.sent;\n\n              if (muResult(result, \"UpdateBooking\")) {\n                toast.success(!isIn ? LANG(\"checkIn\") : LANG(\"checkOut\"));\n              } else {\n                toast.warn(LANG(\"checkin_change_fail\"));\n              }\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function toogleCheckInOut(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); //  예약아이디를 게스트아이디로 찾음\n\n\n  var getBookingIdByGuestId = function getBookingIdByGuestId(guestId) {\n    var target = guestsData.find(function (guest) {\n      return guest._id === guestId;\n    });\n\n    if (!target) {\n      throw Error(\"guestId not exist :: getBookingByGuestId\");\n    }\n\n    return target.booking._id;\n  };\n\n  var dailyAssigUtils = {\n    allTooltipsHide: allTooltipsHide,\n    deleteBookingById: deleteBookingById,\n    getBookingIdByGuestId: getBookingIdByGuestId,\n    toogleCheckInOut: toogleCheckInOut\n  };\n  return dailyAssigUtils;\n}\nexport default getDailyAssigUtils;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/assig/components/dailyAssigUtils.tsx"],"names":["ReactTooltip","JDisNetworkRequestInFlight","muResult","toast","LANG","getDailyAssigUtils","deleteBookingMu","updateCheckInMu","guestsData","networkStatus","confirmModalHook","allTooltipsHide","except","hide","deleteBookingById","bookingId","confirm","callBackFn","flag","variables","result","openModal","txt","callBack","toogleCheckInOut","targetGuest","booking","_id","isIn","checkInInfo","params","success","warn","getBookingIdByGuestId","guestId","target","find","guest","Error","dailyAssigUtils"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  TDeleteBookingById,\r\n  TGetBookingIdByGuestId,\r\n  IDailyAssigUtils,\r\n  IDailyAssigDataControl\r\n} from \"./assigIntrerface\";\r\nimport { ReactTooltip } from \"../../../../atoms/tooltipList/TooltipList\";\r\nimport JDisNetworkRequestInFlight from \"../../../../utils/netWorkStatusToast\";\r\nimport { IDailyAssigContext } from \"../../../../components/dailyAssjg/DailyAssig\";\r\nimport { getAllRoomTypeWithGuest_GetGuests_guests as IG } from \"../../../../types/api\";\r\nimport { muResult } from \"../../../../utils/utils\";\r\nimport { toast } from \"react-toastify\";\r\nimport { LANG } from \"../../../../hooks/hook\";\r\n\r\nexport function getDailyAssigUtils(\r\n  { deleteBookingMu, updateCheckInMu }: IDailyAssigDataControl,\r\n  { guestsData, networkStatus, confirmModalHook }: IDailyAssigContext\r\n): IDailyAssigUtils {\r\n  // 모든 툴팁 숨김\r\n  const allTooltipsHide = (except: string) => {\r\n    ReactTooltip.hide();\r\n  };\r\n\r\n  // 예약을 예약 아이디로 삭제\r\n  const deleteBookingById: TDeleteBookingById = async (\r\n    bookingId: string,\r\n    confirm\r\n  ) => {\r\n    const callBackFn = async (flag: boolean) => {\r\n      if (flag) {\r\n        const result = await deleteBookingMu({\r\n          variables: {\r\n            bookingId\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    // 확인메시지 출력여부\r\n    if (!confirm) callBackFn(true);\r\n    else {\r\n      confirmModalHook.openModal({\r\n        txt: LANG(\"are_you_sure_you_want_to_delete_the_reservation\"),\r\n        callBack: callBackFn\r\n      });\r\n    }\r\n  };\r\n\r\n  // 체크인 아웃 투글\r\n  const toogleCheckInOut = async (targetGuest: IG) => {\r\n    const {\r\n      booking: {\r\n        _id: bookingId,\r\n        checkInInfo: { isIn }\r\n      }\r\n    } = targetGuest;\r\n    if (JDisNetworkRequestInFlight(networkStatus)) return;\r\n    const result = await updateCheckInMu({\r\n      variables: {\r\n        bookingId,\r\n        params: {\r\n          checkInInfo: {\r\n            isIn: !isIn\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (muResult(result, \"UpdateBooking\")) {\r\n      toast.success(!isIn ? LANG(\"checkIn\") : LANG(\"checkOut\"));\r\n    } else {\r\n      toast.warn(LANG(\"checkin_change_fail\"));\r\n    }\r\n  };\r\n\r\n  //  예약아이디를 게스트아이디로 찾음\r\n  const getBookingIdByGuestId: TGetBookingIdByGuestId = (\r\n    guestId: string\r\n  ): string => {\r\n    const target = guestsData.find(guest => guest._id === guestId);\r\n    if (!target) {\r\n      throw Error(\"guestId not exist :: getBookingByGuestId\");\r\n    }\r\n    return target.booking._id;\r\n  };\r\n\r\n  const dailyAssigUtils = {\r\n    allTooltipsHide,\r\n    deleteBookingById,\r\n    getBookingIdByGuestId,\r\n    toogleCheckInOut\r\n  };\r\n\r\n  return dailyAssigUtils;\r\n}\r\n\r\nexport default getDailyAssigUtils;\r\n"]},"metadata":{},"sourceType":"module"}