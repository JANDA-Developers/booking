{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\bookingHost\\\\dailyPrice\\\\DailyPrice.tsx\";\nimport React from \"react\";\nimport \"moment/locale/ko\";\nimport Timeline, { TimelineHeaders, SidebarHeader, DateHeader, SharedSideBarHeader } from \"../../../atoms/timeline/Timeline\";\nimport ErrProtecter from \"../../../utils/errProtect\";\nimport \"./DailyPrice.scss\";\nimport Preloader from \"../../../atoms/preloader/Preloader\";\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\nimport { getKoreaSpecificDayHook, useModal, LANG } from \"../../../hooks/hook\";\nimport { setMidNight, autoComma, muResult } from \"../../../utils/utils\";\nimport { TimePerMs, GlobalCSS, WindowSize } from \"../../../types/enum\";\nimport reactWindowSize from \"react-window-size\";\nimport PriceWarnModal from \"../../../components/priceWarnModal.tsx/PriceWarnModal\";\nimport HeaderCellRender from \"../assig/helpers/HeaderCellRender\";\nimport DayPickerModal from \"../../../components/dayPickerModal/DayPickerModal\";\nimport moment from \"moment\";\n\nvar UpdateTimeline = function UpdateTimeline(_ref) {\n  var items = _ref.items,\n      defaultProps = _ref.defaultProps,\n      roomTypesData = _ref.roomTypesData,\n      loading = _ref.loading,\n      createDailyPriceMu = _ref.createDailyPriceMu,\n      delteDailyPriceMu = _ref.delteDailyPriceMu,\n      context = _ref.context,\n      priceMap = _ref.priceMap,\n      dataTime = _ref.dataTime,\n      setDataTime = _ref.setDataTime,\n      defaultTime = _ref.defaultTime,\n      dayPickerHook = _ref.dayPickerHook,\n      placeHolderMap = _ref.placeHolderMap,\n      windowWidth = _ref.windowWidth,\n      networkStatus = _ref.networkStatus,\n      timelineProps = _objectWithoutProperties(_ref, [\"items\", \"defaultProps\", \"roomTypesData\", \"loading\", \"createDailyPriceMu\", \"delteDailyPriceMu\", \"context\", \"priceMap\", \"dataTime\", \"setDataTime\", \"defaultTime\", \"dayPickerHook\", \"placeHolderMap\", \"windowWidth\", \"networkStatus\"]);\n\n  if (networkStatus === 1) return React.createElement(Preloader, {\n    page: true,\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  });\n  var house = context.house;\n  var isMobile = windowWidth <= WindowSize.MOBILE;\n  var isTabletDown = windowWidth <= WindowSize.TABLET;\n  var priceWarnModalHook = useModal(false);\n  var dayPickerModalHook = useModal(false);\n\n  var _getKoreaSpecificDayH = getKoreaSpecificDayHook([\"2019\", \"2018\"]),\n      holidays = _getKoreaSpecificDayH.datas,\n      holidayLoading = _getKoreaSpecificDayH.loading; // 그룹 렌더\n\n\n  var UpdateGroupRendererFn = function UpdateGroupRendererFn(_ref2) {\n    var group = _ref2.group;\n    var roomType = roomTypesData && roomTypesData[group.roomTypeIndex]; //  룹타입 부분 렌더할지 체크\n\n    return React.createElement(\"div\", {\n      key: group._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, group.name));\n  }; // 딜리트 뮤테이션 발송\n\n\n  var deleteDailyPrice =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(item) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return delteDailyPriceMu({\n                variables: {\n                  date: item.end,\n                  roomTypeId: item.group\n                }\n              });\n\n            case 2:\n              result = _context.sent;\n              if (muResult(result, \"DeleteDailyPrice\")) priceMap.delete(item.id);else {// 에러처리\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function deleteDailyPrice(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // 크리에이트 뮤테이션 발송\n\n\n  var createDailyPrice =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(value, item) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return createDailyPriceMu({\n                variables: {\n                  houseId: house._id,\n                  date: moment(item.start).local().format(\"YYYY-MM-DD\"),\n                  roomTypeId: item.group,\n                  price: value\n                }\n              });\n\n            case 2:\n              result = _context2.sent;\n              if (muResult(result, \"CreateDailyPrice\")) priceMap.set(item.id, value);else {\n                // 에러처리\n                location.reload();\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function createDailyPrice(_x2, _x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // 크리에이트와 뮤테이션중 뭘할지 판단\n\n\n  var switchMutation = function switchMutation(value, item, beforePrice) {\n    if (value === null && beforePrice !== undefined) {\n      deleteDailyPrice(item);\n      return;\n    }\n\n    if (value !== null) {\n      createDailyPrice(value, item);\n    }\n  }; // 뮤테이션 발송전 벨리데이션\n\n\n  var validationBeforeMu = function validationBeforeMu(value, item, beforePrice) {\n    // 같은 가격이면 아무것도 안함\n    if (beforePrice === value) return false; // priceWarn  컬백용\n\n    var callBackPriceWarn = function callBackPriceWarn(flag) {\n      if (flag) {\n        switchMutation(value, item, beforePrice);\n      } else {\n        location.reload();\n      }\n    }; // 가격이 천원이하면\n\n\n    if (value !== null && 0 < value && value < 1000) {\n      priceWarnModalHook.openModal({\n        confirmCallBackFn: callBackPriceWarn\n      });\n      return false;\n    }\n\n    switchMutation(value, item, beforePrice);\n  }; // 가격 인풋 블러 핸들러\n\n\n  var handlePriceBlur = function handlePriceBlur(value, item) {\n    var inValue = value ? parseInt(value.replace(/,/g, \"\"), 10) : null; //  ❗️ 남은 부분이 PLcae Holder로 매워져 있을수 있도록 해야함\n\n    var beforePrice = priceMap.get(item.id);\n    validationBeforeMu(inValue, item, beforePrice);\n  }; // 아이템 렌더\n\n\n  var itemRendererFn = function itemRendererFn(_ref5) {\n    var item = _ref5.item,\n        itemContext = _ref5.itemContext,\n        getItemProps = _ref5.getItemProps,\n        getResizeProps = _ref5.getResizeProps;\n    // props 안에 필수 좌표값 존재\n    var props = getItemProps(item.itemProps);\n    return React.createElement(\"div\", {\n      className: \"dailyPrice__cellWrap\",\n      style: _objectSpread({}, props.style, {\n        backgroundColor: \"transparent\",\n        border: \"none\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(InputText, {\n      comma: true,\n      defaultValue: priceMap.get(item.id),\n      placeholder: autoComma(placeHolderMap.get(item.id)),\n      onBlur: function onBlur(e) {\n        handlePriceBlur(e.currentTarget.value, item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }));\n  }; // 타임라인 이동시\n\n\n  var handleTimeChange = function handleTimeChange(visibleTimeStart, visibleTimeEnd, updateScrollCanvas) {\n    var dataLimitEnd = dataTime.end - TimePerMs.DAY * 20;\n    var dataLimitstart = dataTime.start + TimePerMs.DAY * 10; //  뒤로 요청\n\n    if (visibleTimeStart < dataLimitstart) {\n      var queryStart = visibleTimeStart - TimePerMs.DAY * 60;\n      var queryEnd = visibleTimeEnd + TimePerMs.DAY * 30;\n      setDataTime({\n        start: setMidNight(queryStart),\n        end: setMidNight(queryEnd)\n      });\n    } //  앞으로 요청\n\n\n    if (dataLimitEnd < visibleTimeEnd) {\n      var _queryStart = visibleTimeStart - TimePerMs.DAY * 30;\n\n      var _queryEnd = visibleTimeEnd + TimePerMs.DAY * 60;\n\n      setDataTime({\n        start: setMidNight(_queryStart),\n        end: setMidNight(_queryEnd)\n      });\n    }\n\n    updateScrollCanvas(visibleTimeStart, visibleTimeEnd);\n  };\n\n  var modifySideBarRendererFn = function modifySideBarRendererFn() {\n    return React.createElement(\"div\", {\n      className: \"modify__sideTop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(\"div\", {\n    id: \"dailyPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dailyPrice container container--full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, LANG(\"daily_refine_price\")), React.createElement(\"p\", {\n    className: \"JDtextColor--point\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"*\", \" \", LANG(\"this_price_modification_will_be_the_highest_priority_of_all_pricing\")), React.createElement(\"div\", {\n    className: \"flex-grid flex-grid--end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-grid__col col--full-4 col--lg-4 col--md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"UpdateTimeline__timelineWrapScroll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"UpdateTimeline__timelineWrap dailyPrice__timeline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(Timeline, Object.assign({}, defaultProps, timelineProps, {\n    items: items || [],\n    groups: roomTypesData || [],\n    onTimeChange: handleTimeChange,\n    defaultTimeStart: defaultTime.start,\n    defaultTimeEnd: isTabletDown ? defaultTime.end - TimePerMs.DAY * 5 : defaultTime.end,\n    itemRenderer: itemRendererFn,\n    groupRenderer: UpdateGroupRendererFn,\n    sidebarContent: modifySideBarRendererFn(),\n    sidebarWidth: isMobile ? 100 : 230,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }), React.createElement(TimelineHeaders, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(SidebarHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, function (_ref6) {\n    var getRootProps = _ref6.getRootProps;\n    return React.createElement(SharedSideBarHeader, {\n      dayPickerModalHook: dayPickerModalHook,\n      getRootProps: getRootProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    });\n  }), React.createElement(DateHeader, {\n    intervalRenderer: function intervalRenderer(props) {\n      return HeaderCellRender(_objectSpread({}, props, {\n        holidays: holidays\n      }));\n    },\n    height: GlobalCSS.TIMELINE_HEADER_HEIGHT,\n    unit: \"day\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }))), React.createElement(PriceWarnModal, {\n    modalHook: priceWarnModalHook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }), React.createElement(DayPickerModal, Object.assign({\n    modalHook: dayPickerModalHook,\n    isRange: false,\n    canSelectBeforeDay: true,\n    calenaderPosition: \"center\",\n    label: \"\".concat(LANG(\"calender_date\"))\n  }, dayPickerHook, {\n    className: \"JDwaves-effect JDoverflow-visible\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  })))))));\n};\n\nexport default reactWindowSize(ErrProtecter(UpdateTimeline));","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/bookingHost/dailyPrice/DailyPrice.tsx"],"names":["React","Timeline","TimelineHeaders","SidebarHeader","DateHeader","SharedSideBarHeader","ErrProtecter","Preloader","InputText","getKoreaSpecificDayHook","useModal","LANG","setMidNight","autoComma","muResult","TimePerMs","GlobalCSS","WindowSize","reactWindowSize","PriceWarnModal","HeaderCellRender","DayPickerModal","moment","UpdateTimeline","items","defaultProps","roomTypesData","loading","createDailyPriceMu","delteDailyPriceMu","context","priceMap","dataTime","setDataTime","defaultTime","dayPickerHook","placeHolderMap","windowWidth","networkStatus","timelineProps","house","isMobile","MOBILE","isTabletDown","TABLET","priceWarnModalHook","dayPickerModalHook","holidays","datas","holidayLoading","UpdateGroupRendererFn","group","roomType","roomTypeIndex","_id","name","deleteDailyPrice","item","variables","date","end","roomTypeId","result","delete","id","createDailyPrice","value","houseId","start","local","format","price","set","location","reload","switchMutation","beforePrice","undefined","validationBeforeMu","callBackPriceWarn","flag","openModal","confirmCallBackFn","handlePriceBlur","inValue","parseInt","replace","get","itemRendererFn","itemContext","getItemProps","getResizeProps","props","itemProps","style","backgroundColor","border","e","currentTarget","handleTimeChange","visibleTimeStart","visibleTimeEnd","updateScrollCanvas","dataLimitEnd","DAY","dataLimitstart","queryStart","queryEnd","modifySideBarRendererFn","getRootProps","TIMELINE_HEADER_HEIGHT"],"mappings":"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","sourcesContent":["import React, {useMemo, Fragment} from \"react\";\r\nimport \"moment/locale/ko\";\r\nimport {MutationFn} from \"react-apollo\";\r\nimport Timeline, {\r\n  TimelineHeaders,\r\n  SidebarHeader,\r\n  DateHeader,\r\n  SharedSideBarHeader\r\n} from \"../../../atoms/timeline/Timeline\";\r\nimport ErrProtecter from \"../../../utils/errProtect\";\r\nimport \"./DailyPrice.scss\";\r\nimport {\r\n  getAllRoomTypePrice_GetAllRoomType_roomTypes as IRoomType,\r\n  createDailyPrice,\r\n  createDailyPriceVariables,\r\n  deleteDailyPrice,\r\n  deleteDailyPriceVariables\r\n} from \"../../../types/api\";\r\nimport Preloader from \"../../../atoms/preloader/Preloader\";\r\nimport {IItem} from \"./DailyPriceWrap\";\r\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\r\nimport {\r\n  IUseDayPicker,\r\n  getKoreaSpecificDayHook,\r\n  useModal,\r\n  LANG\r\n} from \"../../../hooks/hook\";\r\nimport {setMidNight, autoComma, muResult} from \"../../../utils/utils\";\r\nimport {TimePerMs, GlobalCSS, WindowSize} from \"../../../types/enum\";\r\nimport reactWindowSize, {WindowSizeProps} from \"react-window-size\";\r\nimport {IContext} from \"../BookingHostRouter\";\r\nimport PriceWarnModal from \"../../../components/priceWarnModal.tsx/PriceWarnModal\";\r\nimport HeaderCellRender from \"../assig/helpers/HeaderCellRender\";\r\nimport DayPickerModal from \"../../../components/dayPickerModal/DayPickerModal\";\r\nimport moment from \"moment\";\r\n\r\ninterface IProps {\r\n  items: IItem[] | undefined;\r\n  context: IContext;\r\n  priceMap: Map<any, any>;\r\n  defaultProps: any;\r\n  timelineProps?: any;\r\n  loading: boolean;\r\n  dayPickerHook: IUseDayPicker;\r\n  roomTypesData: IRoomType[] | undefined;\r\n  createDailyPriceMu: MutationFn<createDailyPrice, createDailyPriceVariables>;\r\n  delteDailyPriceMu: MutationFn<deleteDailyPrice, deleteDailyPriceVariables>;\r\n  setDataTime: React.Dispatch<\r\n    React.SetStateAction<{\r\n      start: number;\r\n      end: number;\r\n    }>\r\n  >;\r\n  dataTime: {start: number; end: number};\r\n  defaultTime: {start: number; end: number};\r\n  placeHolderMap: Map<any, any>;\r\n  networkStatus: number;\r\n}\r\n\r\nconst UpdateTimeline: React.FC<IProps & WindowSizeProps> = ({\r\n  items,\r\n  defaultProps,\r\n  roomTypesData,\r\n  loading,\r\n  createDailyPriceMu,\r\n  delteDailyPriceMu,\r\n  context,\r\n  priceMap,\r\n  dataTime,\r\n  setDataTime,\r\n  defaultTime,\r\n  dayPickerHook,\r\n  placeHolderMap,\r\n  windowWidth,\r\n  networkStatus,\r\n  ...timelineProps\r\n}) => {\r\n  if (networkStatus === 1) return <Preloader page loading={true} />;\r\n\r\n  const {house} = context;\r\n  const isMobile = windowWidth <= WindowSize.MOBILE;\r\n  const isTabletDown = windowWidth <= WindowSize.TABLET;\r\n  const priceWarnModalHook = useModal(false);\r\n  const dayPickerModalHook = useModal(false);\r\n\r\n  const {datas: holidays, loading: holidayLoading} = getKoreaSpecificDayHook([\r\n    \"2019\",\r\n    \"2018\"\r\n  ]);\r\n\r\n  // 그룹 렌더\r\n  const UpdateGroupRendererFn = ({group}: any) => {\r\n    const roomType: IRoomType | undefined =\r\n      roomTypesData && roomTypesData[group.roomTypeIndex];\r\n\r\n    //  룹타입 부분 렌더할지 체크\r\n    return (\r\n      <div key={group._id}>\r\n        <span className=\"title\">{group.name}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 딜리트 뮤테이션 발송\r\n  const deleteDailyPrice = async (item: IItem) => {\r\n    const result = await delteDailyPriceMu({\r\n      variables: {\r\n        date: item.end,\r\n        roomTypeId: item.group\r\n      }\r\n    });\r\n    if (muResult(result, \"DeleteDailyPrice\")) priceMap.delete(item.id);\r\n    else {\r\n      // 에러처리\r\n    }\r\n  };\r\n\r\n  // 크리에이트 뮤테이션 발송\r\n  const createDailyPrice = async (value: number, item: IItem) => {\r\n    const result = await createDailyPriceMu({\r\n      variables: {\r\n        houseId: house._id,\r\n        date: moment(item.start)\r\n          .local()\r\n          .format(\"YYYY-MM-DD\"),\r\n        roomTypeId: item.group,\r\n        price: value\r\n      }\r\n    });\r\n    if (muResult(result, \"CreateDailyPrice\")) priceMap.set(item.id, value);\r\n    else {\r\n      // 에러처리\r\n      location.reload();\r\n    }\r\n  };\r\n\r\n  // 크리에이트와 뮤테이션중 뭘할지 판단\r\n  const switchMutation = (\r\n    value: number | null,\r\n    item: IItem,\r\n    beforePrice: any\r\n  ) => {\r\n    if (value === null && beforePrice !== undefined) {\r\n      deleteDailyPrice(item);\r\n      return;\r\n    }\r\n    if (value !== null) {\r\n      createDailyPrice(value, item);\r\n    }\r\n  };\r\n\r\n  // 뮤테이션 발송전 벨리데이션\r\n  const validationBeforeMu = (\r\n    value: number | null,\r\n    item: IItem,\r\n    beforePrice: any\r\n  ) => {\r\n    // 같은 가격이면 아무것도 안함\r\n    if (beforePrice === value) return false;\r\n\r\n    // priceWarn  컬백용\r\n    const callBackPriceWarn = (flag: boolean) => {\r\n      if (flag) {\r\n        switchMutation(value, item, beforePrice);\r\n      } else {\r\n        location.reload();\r\n      }\r\n    };\r\n    // 가격이 천원이하면\r\n    if (value !== null && 0 < value && value < 1000) {\r\n      priceWarnModalHook.openModal({\r\n        confirmCallBackFn: callBackPriceWarn\r\n      });\r\n      return false;\r\n    }\r\n    switchMutation(value, item, beforePrice);\r\n  };\r\n\r\n  // 가격 인풋 블러 핸들러\r\n  const handlePriceBlur = (value: string | null, item: IItem) => {\r\n    const inValue = value ? parseInt(value.replace(/,/g, \"\"), 10) : null;\r\n    //  ❗️ 남은 부분이 PLcae Holder로 매워져 있을수 있도록 해야함\r\n    const beforePrice = priceMap.get(item.id);\r\n\r\n    validationBeforeMu(inValue, item, beforePrice);\r\n  };\r\n\r\n  // 아이템 렌더\r\n  const itemRendererFn = ({\r\n    item,\r\n    itemContext,\r\n    getItemProps,\r\n    getResizeProps\r\n  }: any) => {\r\n    // props 안에 필수 좌표값 존재\r\n    const props = getItemProps(item.itemProps);\r\n\r\n    return (\r\n      <div\r\n        className=\"dailyPrice__cellWrap\"\r\n        style={{...props.style, backgroundColor: \"transparent\", border: \"none\"}}\r\n      >\r\n        <InputText\r\n          comma\r\n          defaultValue={priceMap.get(item.id)}\r\n          placeholder={autoComma(placeHolderMap.get(item.id))}\r\n          onBlur={(e: React.FocusEvent<HTMLInputElement>) => {\r\n            handlePriceBlur(e.currentTarget.value, item);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 타임라인 이동시\r\n  const handleTimeChange = (\r\n    visibleTimeStart: number,\r\n    visibleTimeEnd: number,\r\n    updateScrollCanvas: any\r\n  ) => {\r\n    const dataLimitEnd = dataTime.end - TimePerMs.DAY * 20;\r\n    const dataLimitstart = dataTime.start + TimePerMs.DAY * 10;\r\n\r\n    //  뒤로 요청\r\n    if (visibleTimeStart < dataLimitstart) {\r\n      const queryStart = visibleTimeStart - TimePerMs.DAY * 60;\r\n      const queryEnd = visibleTimeEnd + TimePerMs.DAY * 30;\r\n\r\n      setDataTime({\r\n        start: setMidNight(queryStart),\r\n        end: setMidNight(queryEnd)\r\n      });\r\n    }\r\n\r\n    //  앞으로 요청\r\n    if (dataLimitEnd < visibleTimeEnd) {\r\n      const queryStart = visibleTimeStart - TimePerMs.DAY * 30;\r\n      const queryEnd = visibleTimeEnd + TimePerMs.DAY * 60;\r\n\r\n      setDataTime({\r\n        start: setMidNight(queryStart),\r\n        end: setMidNight(queryEnd)\r\n      });\r\n    }\r\n    updateScrollCanvas(visibleTimeStart, visibleTimeEnd);\r\n  };\r\n\r\n  const modifySideBarRendererFn = () => <div className=\"modify__sideTop\" />;\r\n\r\n  return (\r\n    <div id=\"dailyPrice\">\r\n      <div className=\"dailyPrice container container--full\">\r\n        <div className=\"docs-section\">\r\n          <h3>{LANG(\"daily_refine_price\")}</h3>\r\n          <p className=\"JDtextColor--point\">\r\n            *{\" \"}\r\n            {LANG(\r\n              \"this_price_modification_will_be_the_highest_priority_of_all_pricing\"\r\n            )}\r\n          </p>\r\n          <div className=\"flex-grid flex-grid--end\">\r\n            <div className=\"flex-grid__col col--full-4 col--lg-4 col--md-6\" />\r\n          </div>\r\n          <div className=\"UpdateTimeline__timelineWrapScroll\">\r\n            <div className=\"UpdateTimeline__timelineWrap dailyPrice__timeline\">\r\n              <Timeline\r\n                {...defaultProps}\r\n                {...timelineProps}\r\n                items={items || []}\r\n                groups={roomTypesData || []}\r\n                onTimeChange={handleTimeChange}\r\n                defaultTimeStart={defaultTime.start}\r\n                defaultTimeEnd={\r\n                  isTabletDown\r\n                    ? defaultTime.end - TimePerMs.DAY * 5\r\n                    : defaultTime.end\r\n                }\r\n                itemRenderer={itemRendererFn}\r\n                groupRenderer={UpdateGroupRendererFn}\r\n                sidebarContent={modifySideBarRendererFn()}\r\n                sidebarWidth={isMobile ? 100 : 230}\r\n              >\r\n                <TimelineHeaders>\r\n                  <SidebarHeader>\r\n                    {({getRootProps}: any) => (\r\n                      <SharedSideBarHeader\r\n                        dayPickerModalHook={dayPickerModalHook}\r\n                        getRootProps={getRootProps}\r\n                      />\r\n                    )}\r\n                  </SidebarHeader>\r\n                  <DateHeader\r\n                    intervalRenderer={(props: any) => {\r\n                      return HeaderCellRender({...props, holidays});\r\n                    }}\r\n                    height={GlobalCSS.TIMELINE_HEADER_HEIGHT}\r\n                    unit=\"day\"\r\n                  />\r\n                </TimelineHeaders>\r\n              </Timeline>\r\n              <PriceWarnModal modalHook={priceWarnModalHook} />\r\n              <DayPickerModal\r\n                modalHook={dayPickerModalHook}\r\n                isRange={false}\r\n                canSelectBeforeDay={true}\r\n                calenaderPosition=\"center\"\r\n                label={`${LANG(\"calender_date\")}`}\r\n                {...dayPickerHook}\r\n                className=\"JDwaves-effect JDoverflow-visible\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default reactWindowSize<IProps>(ErrProtecter(UpdateTimeline));\r\n"]},"metadata":{},"sourceType":"module"}