{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\assig\\\\AssigTimeline.tsx\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"moment/locale/ko\";\nimport Timeline, { TimelineHeaders, SidebarHeader, DateHeader, SharedSideBarHeader } from \"../../../atoms/timeline/Timeline\";\nimport ErrProtecter from \"../../../utils/errProtect\";\nimport Button from \"../../../atoms/button/Button\";\nimport BookingModalWrap from \"../../../components/bookingModal/BookingModalWrap\";\nimport { useModal, getKoreaSpecificDayHook, LANG } from \"../../../hooks/hook\";\nimport classnames from \"classnames\";\nimport assigGroupRendererFn from \"./components/groupRenderFn\";\nimport \"./AssigTimeline.scss\";\nimport { ReactTooltip } from \"../../../atoms/tooltipList/TooltipList\";\nimport { WindowSize as EWindowSize, GlobalCSS, WindowSize } from \"../../../types/enum\";\nimport $ from \"jquery\";\nimport itemRendererFn from \"./components/items/itemRenderFn\";\nimport ItemMenuTooltip from \"./components/tooltips/ItemMenuTooltip\";\nimport CanvasMenuTooltip from \"./components/tooltips/CanvasMenuTooltip\";\nimport { DEFAULT_ASSIG_ITEM, DEFAULT_NONE_GOUP } from \"../../../types/defaults\";\nimport JDmodal, { JDtoastModal } from \"../../../atoms/modal/Modal\";\nimport { GuestTypeAdd } from \"./components/assigIntrerface\";\nimport { getAssigUtils } from \"./components/assigUtils\";\nimport BlockItemTooltip from \"./components/tooltips/BlockItemTooltip\";\nimport JDmultiBox from \"../../../atoms/multiBox/MultiBox\";\nimport { getAssigHandlers } from \"./components/assigHandlers\";\nimport moment from \"moment\";\nimport { isEmpty } from \"../../../utils/utils\";\nimport BlockOpModal from \"./components/BlockOpModal\";\nimport DailyAssigWrap from \"../../../components/dailyAssjg/DailyAssigWrap\";\nimport ReservationModal from \"../../../components/reservationModala/ReservationModal\";\nimport ReadyItemTooltip from \"./components/tooltips/ReadyItemTooltip\";\nimport HeaderCellRender from \"./components/HeaderCellRender\";\nimport { PortalPreloader } from \"../../../utils/portalTo\";\nimport DayPickerModal from \"../../../components/dayPickerModal/DayPickerModal\";\n\nvar ShowTimeline = function ShowTimeline(_ref) {\n  var dayPickerHook = _ref.dayPickerHook,\n      defaultProps = _ref.defaultProps,\n      groupData = _ref.groupData,\n      loading = _ref.loading,\n      context = _ref.context,\n      deafultGuestsData = _ref.deafultGuestsData,\n      defaultTimeStart = _ref.defaultTimeStart,\n      defaultTimeEnd = _ref.defaultTimeEnd,\n      windowWidth = _ref.windowWidth,\n      windowHeight = _ref.windowHeight,\n      roomTypesData = _ref.roomTypesData,\n      setDataTime = _ref.setDataTime,\n      dataTime = _ref.dataTime,\n      assigDataControl = _ref.assigDataControl,\n      reloadTimeline = _ref.reloadTimeline;\n  var networkStatus = assigDataControl.networkStatus;\n  var house = context.house,\n      houseConfig = context.houseConfig,\n      sideNavIsOpen = context.sideNavIsOpen;\n  var isDesktopHDDown = windowWidth < EWindowSize.DESKTOPHD;\n  var isTabletDown = windowWidth <= EWindowSize.TABLET;\n  var isMobile = windowWidth < EWindowSize.PHABLET;\n\n  var timeline_size_var = function () {\n    if (isMobile) return 7;\n    if (isTabletDown) return 6;\n    if (isDesktopHDDown) return 5;\n    return 0;\n  }();\n\n  var _useState = useState(deafultGuestsData),\n      _useState2 = _slicedToArray(_useState, 2),\n      guestValue = _useState2[0],\n      setGuestValue = _useState2[1];\n\n  var dayPickerModalHook = useModal(false);\n  var keyBoardModal = useModal(false);\n  var confirmModalHook = useModal(false);\n  var reservationModal = useModal(false);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inIsEmpty = _useState4[0],\n      setEmpty = _useState4[1];\n\n  var _useState5 = useState(roomTypesData.map(function (roomType) {\n    return roomType._id;\n  })),\n      _useState6 = _slicedToArray(_useState5, 2),\n      viewRoomType = _useState6[0],\n      setViewRoomType = _useState6[1];\n\n  var _getKoreaSpecificDayH = getKoreaSpecificDayHook([\"2019\", \"2018\"]),\n      holidays = _getKoreaSpecificDayH.datas;\n\n  var bookingModal = useModal(false);\n  var blockOpModal = useModal(false, DEFAULT_ASSIG_ITEM);\n\n  var _useState7 = useState({\n    item: DEFAULT_ASSIG_ITEM\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      blockMenuProps = _useState8[0],\n      setBlockMenuProps = _useState8[1];\n\n  var _useState9 = useState({\n    item: DEFAULT_ASSIG_ITEM\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      createMenuProps = _useState10[0],\n      setCreateMenuProps = _useState10[1];\n\n  var dailyAssigHook = useModal(false); // 스크롤시 툴팁제거\n\n  var handleWindowScrollEvent = function handleWindowScrollEvent() {\n    allTooltipsHide();\n  }; //  스크롤 할때\n\n\n  useEffect(function () {\n    var handleClickWindow = function handleClickWindow() {\n      allTooltipsHide();\n    };\n\n    $(\".rct-header-root\").mousedown(function (e) {// e.preventDefault();\n      // e.stopPropagation();\n    });\n    window.addEventListener(\"scroll\", handleWindowScrollEvent);\n    window.addEventListener(\"click\", handleClickWindow);\n    return function () {\n      window.removeEventListener(\"scroll\", handleWindowScrollEvent);\n      window.removeEventListener(\"scroll\", handleClickWindow);\n    };\n  }); // 풀링으로 새로받은 게스트데이터를 적용시켜준다.\n\n  useEffect(function () {\n    if (networkStatus >= 7) {\n      var newIndexStart = deafultGuestsData.length; // TODO 함수분리\n      // 업데이트전 휘발성 블럭들을 찾아서 합쳐줍니다.\n\n      var volatilityBlocks = guestValue.filter(function (guest) {\n        return guest.type === GuestTypeAdd.MARK;\n      }); // 휘발성 블록들의 인덱스를 다시 정의해줍니다.\n\n      volatilityBlocks.forEach(function (block, index) {\n        return block.itemIndex = newIndexStart + index;\n      });\n      setGuestValue([].concat(_toConsumableArray(deafultGuestsData), _toConsumableArray(volatilityBlocks)));\n    }\n  }, [deafultGuestsData]);\n  var assigHooks = {\n    guestValue: guestValue,\n    blockMenuProps: blockMenuProps,\n    createMenuProps: createMenuProps,\n    setGuestValue: setGuestValue,\n    setCreateMenuProps: setCreateMenuProps,\n    setBlockMenuProps: setBlockMenuProps,\n    confirmModalHook: confirmModalHook,\n    bookingModal: bookingModal,\n    setDataTime: setDataTime,\n    dataTime: dataTime,\n    blockOpModal: blockOpModal\n  };\n  var assigContext = {\n    isMobile: isMobile,\n    houseConfig: houseConfig,\n    windowWidth: windowWidth,\n    windowHeight: windowHeight,\n    groupData: groupData,\n    houseId: house._id\n  };\n  var assigUtils = getAssigUtils(assigHooks, assigDataControl, assigContext);\n  var assigTimeline = houseConfig.assigTimeline;\n\n  if (!assigTimeline) {\n    throw Error(\"empty houseConfig__assigTimeline\");\n  }\n\n  var roomTypeTabEnable = assigTimeline.roomTypeTabEnable;\n  var allTooltipsHide = assigUtils.allTooltipsHide,\n      removeMark = assigUtils.removeMark,\n      hilightHeader = assigUtils.hilightHeader;\n  var assigHandler = getAssigHandlers(assigUtils, assigContext, assigHooks);\n  var handleCanvasClick = assigHandler.handleCanvasClick,\n      handleCanvasContextMenu = assigHandler.handleCanvasContextMenu,\n      handleItemClick = assigHandler.handleItemClick,\n      handleItemMove = assigHandler.handleItemMove,\n      handleItemResize = assigHandler.handleItemResize,\n      handleItemSelect = assigHandler.handleItemSelect,\n      handleMoveResizeValidator = assigHandler.handleMoveResizeValidator,\n      handleDraggingEnd = assigHandler.handleDraggingEnd,\n      handleTimeChange = assigHandler.handleTimeChange,\n      handleItemDoubleClick = assigHandler.handleItemDoubleClick,\n      handleDraggingCell = assigHandler.handleDraggingCell,\n      handleMouseDownCanvas = assigHandler.handleMouseDownCanvas; // 툴팁들을 제거하고\n\n  var handleTimelineWrapClickEvent = function handleTimelineWrapClickEvent() {\n    if (guestValue.find(function (guest) {\n      return guest.type === GuestTypeAdd.MARK;\n    })) {\n      removeMark();\n    }\n\n    allTooltipsHide();\n  }; // 툴팁 제거 이벤트들을 window에 달아줌 그리고 나갈때 제거\n  // 툴팁 리빌드\n\n\n  useEffect(function () {\n    ReactTooltip.rebuild();\n  });\n  useEffect(function () {\n    hilightHeader(dayPickerHook.from);\n  }, [dayPickerHook.from]);\n  useEffect(function () {\n    if (isEmpty(groupData) && !loading) setEmpty(true);\n  }, [inIsEmpty]);\n  var timelineClassNames = useMemo(function () {\n    return classnames(\"assigTimeline\", undefined, {\n      \"assiTimeline--mobile\": windowWidth <= WindowSize.MOBILE,\n      \"assigTimeline--loading\": isEmpty(groupData) && loading,\n      \"assigTimeline--empty\": inIsEmpty\n    });\n  }, [windowWidth]); // 그룹 데이터에서 필터된것만 추출\n\n  var filteredGroup = groupData.filter(function (group) {\n    return viewRoomType.includes(group.roomTypeId);\n  }); // 그룹 데이터가 비어있다면 보정용으로 하나추가\n\n  if (isEmpty(filteredGroup)) filteredGroup = [DEFAULT_NONE_GOUP];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"AssigTimeline\",\n    className: \"\".concat(timelineClassNames, \" container container--full\"),\n    onDoubleClick: handleTimelineWrapClickEvent,\n    onClick: function onClick(e) {\n      // 윈도우 마우스클릭 이벤트를 방지함\n      e.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"assigTimeline__titleSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, LANG(\"allocation_calendar\"), React.createElement(PortalPreloader, {\n    size: \"small\",\n    floating: true,\n    loading: loading,\n    className: \"assigTimeline__mainPreloder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"flex-grid flex-grid--end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      reservationModal.openModal();\n    },\n    disabled: networkStatus === 1,\n    icon: \"edit\",\n    label: LANG(\"make_reservation\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: function onClick() {\n      dayPickerHook.setDate(moment().local().add(-1, \"day\").toDate());\n      reloadTimeline();\n    },\n    icon: \"calendar\",\n    label: LANG(\"goto_today\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  })), roomTypeTabEnable && React.createElement(JDmultiBox, {\n    defaultAllToogle: true,\n    withAllTooglerLabel: LANG(\"see_all\"),\n    withAllToogler: true,\n    onChange: setViewRoomType,\n    value: roomTypesData.map(function (roomType) {\n      return roomType._id;\n    }),\n    selectedValue: viewRoomType,\n    labels: roomTypesData.map(function (roomType) {\n      return roomType.name;\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  })), React.createElement(CanvasMenuTooltip, {\n    assigHooks: assigHooks,\n    assigContext: assigContext,\n    assigUtils: assigUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }), React.createElement(BlockItemTooltip, {\n    assigHooks: assigHooks,\n    assigContext: assigContext,\n    assigUtils: assigUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }), React.createElement(BlockOpModal, {\n    key: blockOpModal.info.bookingId,\n    assigDataControl: assigDataControl,\n    assigHooks: assigHooks,\n    assigContext: assigContext,\n    assigUtils: assigUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }), React.createElement(ReadyItemTooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }), React.createElement(ItemMenuTooltip, {\n    assigHooks: assigHooks,\n    assigContext: assigContext,\n    assigUtils: assigUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }), React.createElement(Timeline, Object.assign({\n    handleMouseDownCanvas: handleMouseDownCanvas,\n    onItemMove: handleItemMove,\n    onItemResize: handleItemResize,\n    items: guestValue,\n    groups: filteredGroup\n  }, defaultProps, {\n    handleDraggingCell: handleDraggingCell,\n    onItemDoubleClick: handleItemDoubleClick,\n    onItemClick: handleItemClick,\n    onCanvasClick: handleCanvasClick,\n    onTimeChange: handleTimeChange,\n    itemRenderer: function itemRenderer(props) {\n      return itemRendererFn(_objectSpread({}, props, {\n        assigUtils: assigUtils,\n        assigContext: assigContext,\n        assigHooks: assigHooks\n      }));\n    },\n    groupRenderer: assigGroupRendererFn,\n    defaultTimeEnd: moment(defaultTimeEnd).add(-1 * timeline_size_var, \"days\").toDate(),\n    defaultTimeStart: defaultTimeStart,\n    handleDraggingEnd: handleDraggingEnd,\n    moveResizeValidator: handleMoveResizeValidator,\n    onItemSelect: handleItemSelect,\n    onCanvasContextMenu: handleCanvasContextMenu,\n    sidebarWidth: isMobile ? 100 : 230,\n    key: sideNavIsOpen ? \"a\" : \"b\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }), React.createElement(TimelineHeaders, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, React.createElement(SidebarHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, function (_ref2) {\n    var getRootProps = _ref2.getRootProps;\n    return React.createElement(SharedSideBarHeader, {\n      dayPickerModalHook: dayPickerModalHook,\n      getRootProps: getRootProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    });\n  }), React.createElement(DateHeader, {\n    intervalRenderer: function intervalRenderer(prop) {\n      var onClickCell = function onClickCell(_ref3) {\n        var intervalContext = _ref3.intervalContext;\n        if (!intervalContext) return;\n        dailyAssigHook.openModal({\n          date: moment(intervalContext.interval.startTime).toDate()\n        });\n      };\n\n      return HeaderCellRender(_objectSpread({\n        onClickCell: onClickCell,\n        holidays: holidays\n      }, prop));\n    },\n    height: GlobalCSS.TIMELINE_HEADER_HEIGHT,\n    unit: \"day\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }), React.createElement(DateHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }))), inIsEmpty && React.createElement(\"div\", {\n    className: \"assigTimeline__placeHolderWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/roomConfig\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416\n    },\n    __self: this\n  }, React.createElement(Button, {\n    mode: \"border\",\n    thema: \"point\",\n    pulse: true,\n    label: LANG(\"goto_create_roomType\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  })))), React.createElement(ReservationModal, {\n    modalHook: reservationModal,\n    callBackCreateBookingMu: function callBackCreateBookingMu(CreateBooking) {\n      if (CreateBooking.bookingTransaction && CreateBooking.bookingTransaction.booking) {\n        assigUtils.hilightGuestBlock({\n          bookingId: CreateBooking.bookingTransaction.booking._id,\n          scrollMove: true\n        });\n      }\n    },\n    context: context,\n    publicKey: house.publicKey || undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }), React.createElement(BookingModalWrap, {\n    context: context,\n    modalHook: bookingModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443\n    },\n    __self: this\n  }), React.createElement(JDtoastModal, Object.assign({\n    confirm: true\n  }, confirmModalHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  })), React.createElement(JDmodal, Object.assign({}, dailyAssigHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(DailyAssigWrap, {\n    isInModal: true,\n    date: dailyAssigHook.info.date,\n    context: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447\n    },\n    __self: this\n  }))), React.createElement(DayPickerModal, Object.assign({\n    modalHook: dayPickerModalHook,\n    isRange: false,\n    canSelectBeforeDay: true,\n    calenaderPosition: \"center\",\n    label: \"\".concat(LANG(\"calender_date\"))\n  }, dayPickerHook, {\n    className: \"JDwaves-effect JDoverflow-visible\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  })));\n};\n\nexport default ErrProtecter(ShowTimeline);","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/assig/AssigTimeline.tsx"],"names":["React","useState","useEffect","useMemo","Link","Timeline","TimelineHeaders","SidebarHeader","DateHeader","SharedSideBarHeader","ErrProtecter","Button","BookingModalWrap","useModal","getKoreaSpecificDayHook","LANG","classnames","assigGroupRendererFn","ReactTooltip","WindowSize","EWindowSize","GlobalCSS","$","itemRendererFn","ItemMenuTooltip","CanvasMenuTooltip","DEFAULT_ASSIG_ITEM","DEFAULT_NONE_GOUP","JDmodal","JDtoastModal","GuestTypeAdd","getAssigUtils","BlockItemTooltip","JDmultiBox","getAssigHandlers","moment","isEmpty","BlockOpModal","DailyAssigWrap","ReservationModal","ReadyItemTooltip","HeaderCellRender","PortalPreloader","DayPickerModal","ShowTimeline","dayPickerHook","defaultProps","groupData","loading","context","deafultGuestsData","defaultTimeStart","defaultTimeEnd","windowWidth","windowHeight","roomTypesData","setDataTime","dataTime","assigDataControl","reloadTimeline","networkStatus","house","houseConfig","sideNavIsOpen","isDesktopHDDown","DESKTOPHD","isTabletDown","TABLET","isMobile","PHABLET","timeline_size_var","guestValue","setGuestValue","dayPickerModalHook","keyBoardModal","confirmModalHook","reservationModal","inIsEmpty","setEmpty","map","roomType","_id","viewRoomType","setViewRoomType","holidays","datas","bookingModal","blockOpModal","item","blockMenuProps","setBlockMenuProps","createMenuProps","setCreateMenuProps","dailyAssigHook","handleWindowScrollEvent","allTooltipsHide","handleClickWindow","mousedown","e","window","addEventListener","removeEventListener","newIndexStart","length","volatilityBlocks","filter","guest","type","MARK","forEach","block","index","itemIndex","assigHooks","assigContext","houseId","assigUtils","assigTimeline","Error","roomTypeTabEnable","removeMark","hilightHeader","assigHandler","handleCanvasClick","handleCanvasContextMenu","handleItemClick","handleItemMove","handleItemResize","handleItemSelect","handleMoveResizeValidator","handleDraggingEnd","handleTimeChange","handleItemDoubleClick","handleDraggingCell","handleMouseDownCanvas","handleTimelineWrapClickEvent","find","rebuild","from","timelineClassNames","undefined","MOBILE","filteredGroup","group","includes","roomTypeId","stopPropagation","openModal","setDate","local","add","toDate","name","info","bookingId","props","getRootProps","prop","onClickCell","intervalContext","date","interval","startTime","TIMELINE_HEADER_HEIGHT","CreateBooking","bookingTransaction","booking","hilightGuestBlock","scrollMove","publicKey"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"moment/locale/ko\";\r\nimport _ from \"lodash\";\r\nimport { WindowSizeProps } from \"react-window-size\";\r\nimport Timeline, {\r\n  TimelineHeaders,\r\n  SidebarHeader,\r\n  DateHeader,\r\n  SharedSideBarHeader\r\n} from \"../../../atoms/timeline/Timeline\";\r\nimport ErrProtecter from \"../../../utils/errProtect\";\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport BookingModalWrap from \"../../../components/bookingModal/BookingModalWrap\";\r\nimport {\r\n  IUseDayPicker,\r\n  useModal,\r\n  getKoreaSpecificDayHook,\r\n  LANG\r\n} from \"../../../hooks/hook\";\r\nimport classnames from \"classnames\";\r\nimport assigGroupRendererFn from \"./components/groupRenderFn\";\r\nimport { IRoomType } from \"../../../types/interface\";\r\nimport \"./AssigTimeline.scss\";\r\nimport { ReactTooltip } from \"../../../atoms/tooltipList/TooltipList\";\r\nimport {\r\n  WindowSize as EWindowSize,\r\n  GlobalCSS,\r\n  WindowSize\r\n} from \"../../../types/enum\";\r\nimport $ from \"jquery\";\r\nimport itemRendererFn from \"./components/items/itemRenderFn\";\r\nimport ItemMenuTooltip from \"./components/tooltips/ItemMenuTooltip\";\r\nimport CanvasMenuTooltip from \"./components/tooltips/CanvasMenuTooltip\";\r\nimport { DEFAULT_ASSIG_ITEM, DEFAULT_NONE_GOUP } from \"../../../types/defaults\";\r\nimport JDmodal, { JDtoastModal } from \"../../../atoms/modal/Modal\";\r\nimport {\r\n  IAssigDataControl,\r\n  IAssigItem,\r\n  GuestTypeAdd,\r\n  IAssigGroup,\r\n  IAssigTimelineHooks,\r\n  IAssigTimelineContext,\r\n  ICreateMenuProps,\r\n  IDeleteMenuProps\r\n} from \"./components/assigIntrerface\";\r\nimport { getAssigUtils } from \"./components/assigUtils\";\r\nimport BlockItemTooltip from \"./components/tooltips/BlockItemTooltip\";\r\nimport JDmultiBox from \"../../../atoms/multiBox/MultiBox\";\r\nimport { getAssigHandlers } from \"./components/assigHandlers\";\r\nimport moment from \"moment\";\r\nimport { isEmpty } from \"../../../utils/utils\";\r\nimport BlockOpModal from \"./components/BlockOpModal\";\r\nimport DailyAssigWrap from \"../../../components/dailyAssjg/DailyAssigWrap\";\r\nimport ReservationModal from \"../../../components/reservationModala/ReservationModal\";\r\nimport { IContext } from \"../../MiddleServerRouter\";\r\nimport ReadyItemTooltip from \"./components/tooltips/ReadyItemTooltip\";\r\nimport HeaderCellRender from \"./components/HeaderCellRender\";\r\nimport { PortalPreloader } from \"../../../utils/portalTo\";\r\nimport DayPickerModal from \"../../../components/dayPickerModal/DayPickerModal\";\r\n\r\ninterface IProps {\r\n  context: IContext;\r\n  defaultProps: any;\r\n  dayPickerHook: IUseDayPicker;\r\n  groupData: IAssigGroup[];\r\n  loading: boolean;\r\n  roomTypesData: IRoomType[];\r\n  deafultGuestsData: IAssigItem[];\r\n  defaultTimeStart: Date;\r\n  defaultTimeEnd: Date;\r\n  assigDataControl: IAssigDataControl;\r\n  dataTime: {\r\n    start: number;\r\n    end: number;\r\n  };\r\n  setDataTime: React.Dispatch<\r\n    React.SetStateAction<{\r\n      start: number;\r\n      end: number;\r\n    }>\r\n  >;\r\n  reloadTimeline: () => void;\r\n}\r\n\r\nconst ShowTimeline: React.FC<IProps & WindowSizeProps> = ({\r\n  dayPickerHook,\r\n  defaultProps,\r\n  groupData,\r\n  loading,\r\n  context,\r\n  deafultGuestsData,\r\n  defaultTimeStart,\r\n  defaultTimeEnd,\r\n  windowWidth,\r\n  windowHeight,\r\n  roomTypesData,\r\n  setDataTime,\r\n  dataTime,\r\n  assigDataControl,\r\n  reloadTimeline\r\n}) => {\r\n  const { networkStatus } = assigDataControl;\r\n  const { house, houseConfig, sideNavIsOpen } = context;\r\n  const isDesktopHDDown = windowWidth < EWindowSize.DESKTOPHD;\r\n  const isTabletDown = windowWidth <= EWindowSize.TABLET;\r\n  const isMobile = windowWidth < EWindowSize.PHABLET;\r\n  const timeline_size_var = (() => {\r\n    if (isMobile) return 7;\r\n    if (isTabletDown) return 6;\r\n    if (isDesktopHDDown) return 5;\r\n    return 0;\r\n  })();\r\n\r\n  const [guestValue, setGuestValue] = useState<IAssigItem[]>(deafultGuestsData);\r\n  const dayPickerModalHook = useModal(false);\r\n  const keyBoardModal = useModal(false);\r\n  const confirmModalHook = useModal(false);\r\n  const reservationModal = useModal(false);\r\n  const [inIsEmpty, setEmpty] = useState(false);\r\n  const [viewRoomType, setViewRoomType] = useState(\r\n    roomTypesData.map(roomType => roomType._id)\r\n  );\r\n  const { datas: holidays } = getKoreaSpecificDayHook([\"2019\", \"2018\"]);\r\n  const bookingModal = useModal(false);\r\n  const blockOpModal = useModal<IAssigItem>(false, DEFAULT_ASSIG_ITEM);\r\n  const [blockMenuProps, setBlockMenuProps] = useState<IDeleteMenuProps>({\r\n    item: DEFAULT_ASSIG_ITEM\r\n  });\r\n  const [createMenuProps, setCreateMenuProps] = useState<ICreateMenuProps>({\r\n    item: DEFAULT_ASSIG_ITEM\r\n  });\r\n  const dailyAssigHook = useModal(false);\r\n\r\n  // 스크롤시 툴팁제거\r\n  const handleWindowScrollEvent = () => {\r\n    allTooltipsHide();\r\n  };\r\n\r\n  //  스크롤 할때\r\n  useEffect(() => {\r\n    const handleClickWindow = () => {\r\n      allTooltipsHide();\r\n    };\r\n    $(\".rct-header-root\").mousedown(e => {\r\n      // e.preventDefault();\r\n      // e.stopPropagation();\r\n    });\r\n    window.addEventListener(\"scroll\", handleWindowScrollEvent);\r\n    window.addEventListener(\"click\", handleClickWindow);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleWindowScrollEvent);\r\n      window.removeEventListener(\"scroll\", handleClickWindow);\r\n    };\r\n  });\r\n\r\n  // 풀링으로 새로받은 게스트데이터를 적용시켜준다.\r\n  useEffect(() => {\r\n    if (networkStatus >= 7) {\r\n      const newIndexStart = deafultGuestsData.length;\r\n\r\n      // TODO 함수분리\r\n      // 업데이트전 휘발성 블럭들을 찾아서 합쳐줍니다.\r\n      const volatilityBlocks = guestValue.filter(\r\n        guest => guest.type === GuestTypeAdd.MARK\r\n      );\r\n      // 휘발성 블록들의 인덱스를 다시 정의해줍니다.\r\n      volatilityBlocks.forEach(\r\n        (block, index) => (block.itemIndex = newIndexStart + index)\r\n      );\r\n\r\n      setGuestValue([...deafultGuestsData, ...volatilityBlocks]);\r\n    }\r\n  }, [deafultGuestsData]);\r\n\r\n  const assigHooks: IAssigTimelineHooks = {\r\n    guestValue,\r\n    blockMenuProps,\r\n    createMenuProps,\r\n    setGuestValue,\r\n    setCreateMenuProps,\r\n    setBlockMenuProps,\r\n    confirmModalHook,\r\n    bookingModal,\r\n    setDataTime,\r\n    dataTime,\r\n    blockOpModal\r\n  };\r\n\r\n  const assigContext: IAssigTimelineContext = {\r\n    isMobile,\r\n    houseConfig,\r\n    windowWidth,\r\n    windowHeight,\r\n    groupData,\r\n    houseId: house._id\r\n  };\r\n\r\n  const assigUtils = getAssigUtils(assigHooks, assigDataControl, assigContext);\r\n\r\n  const { assigTimeline } = houseConfig;\r\n  if (!assigTimeline) {\r\n    throw Error(\"empty houseConfig__assigTimeline\");\r\n  }\r\n\r\n  const { roomTypeTabEnable } = assigTimeline;\r\n\r\n  const { allTooltipsHide, removeMark, hilightHeader } = assigUtils;\r\n\r\n  const assigHandler = getAssigHandlers(assigUtils, assigContext, assigHooks);\r\n\r\n  const {\r\n    handleCanvasClick,\r\n    handleCanvasContextMenu,\r\n    handleItemClick,\r\n    handleItemMove,\r\n    handleItemResize,\r\n    handleItemSelect,\r\n    handleMoveResizeValidator,\r\n    handleDraggingEnd,\r\n    handleTimeChange,\r\n    handleItemDoubleClick,\r\n    handleDraggingCell,\r\n    handleMouseDownCanvas\r\n  } = assigHandler;\r\n\r\n  // 툴팁들을 제거하고\r\n  const handleTimelineWrapClickEvent = () => {\r\n    if (guestValue.find(guest => guest.type === GuestTypeAdd.MARK)) {\r\n      removeMark();\r\n    }\r\n    allTooltipsHide();\r\n  };\r\n\r\n  // 툴팁 제거 이벤트들을 window에 달아줌 그리고 나갈때 제거\r\n\r\n  // 툴팁 리빌드\r\n  useEffect(() => {\r\n    ReactTooltip.rebuild();\r\n  });\r\n\r\n  useEffect(() => {\r\n    hilightHeader(dayPickerHook.from);\r\n  }, [dayPickerHook.from]);\r\n\r\n  useEffect(() => {\r\n    if (isEmpty(groupData) && !loading) setEmpty(true);\r\n  }, [inIsEmpty]);\r\n\r\n  const timelineClassNames = useMemo(\r\n    () =>\r\n      classnames(\"assigTimeline\", undefined, {\r\n        \"assiTimeline--mobile\": windowWidth <= WindowSize.MOBILE,\r\n        \"assigTimeline--loading\": isEmpty(groupData) && loading,\r\n        \"assigTimeline--empty\": inIsEmpty\r\n      }),\r\n    [windowWidth]\r\n  );\r\n\r\n  // 그룹 데이터에서 필터된것만 추출\r\n  let filteredGroup = groupData.filter(group =>\r\n    viewRoomType.includes(group.roomTypeId)\r\n  );\r\n\r\n  // 그룹 데이터가 비어있다면 보정용으로 하나추가\r\n  if (isEmpty(filteredGroup)) filteredGroup = [DEFAULT_NONE_GOUP];\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"AssigTimeline\"\r\n        className={`${timelineClassNames} container container--full`}\r\n        onDoubleClick={handleTimelineWrapClickEvent}\r\n        onClick={e => {\r\n          // 윈도우 마우스클릭 이벤트를 방지함\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <div className=\"docs-section\">\r\n          <h3 className=\"assigTimeline__titleSection\">\r\n            {LANG(\"allocation_calendar\")}\r\n            <PortalPreloader\r\n              size=\"small\"\r\n              floating\r\n              loading={loading}\r\n              className=\"assigTimeline__mainPreloder\"\r\n            />\r\n          </h3>\r\n          <div className=\"flex-grid flex-grid--end\">\r\n            <div>\r\n              <Button\r\n                onClick={() => {\r\n                  reservationModal.openModal();\r\n                }}\r\n                disabled={networkStatus === 1}\r\n                icon=\"edit\"\r\n                label={LANG(\"make_reservation\")}\r\n              />\r\n              <Button\r\n                onClick={() => {\r\n                  dayPickerHook.setDate(\r\n                    moment()\r\n                      .local()\r\n                      .add(-1, \"day\")\r\n                      .toDate()\r\n                  );\r\n                  reloadTimeline();\r\n                }}\r\n                icon=\"calendar\"\r\n                label={LANG(\"goto_today\")}\r\n              />\r\n              {/* 개발중 */}\r\n              {/* <Button\r\n              onClick={() => {\r\n                keyBoardModal.openModal();\r\n              }}\r\n              icon=\"keyBoard\"\r\n            /> */}\r\n            </div>\r\n            {roomTypeTabEnable && (\r\n              <JDmultiBox\r\n                defaultAllToogle={true}\r\n                withAllTooglerLabel={LANG(\"see_all\")}\r\n                withAllToogler\r\n                onChange={setViewRoomType}\r\n                value={roomTypesData.map(roomType => roomType._id)}\r\n                selectedValue={viewRoomType}\r\n                labels={roomTypesData.map(roomType => roomType.name)}\r\n              />\r\n            )}\r\n          </div>\r\n          <CanvasMenuTooltip\r\n            assigHooks={assigHooks}\r\n            assigContext={assigContext}\r\n            assigUtils={assigUtils}\r\n          />\r\n          <BlockItemTooltip\r\n            assigHooks={assigHooks}\r\n            assigContext={assigContext}\r\n            assigUtils={assigUtils}\r\n          />\r\n          <BlockOpModal\r\n            key={blockOpModal.info.bookingId}\r\n            assigDataControl={assigDataControl}\r\n            assigHooks={assigHooks}\r\n            assigContext={assigContext}\r\n            assigUtils={assigUtils}\r\n          />\r\n          <ReadyItemTooltip />\r\n          <ItemMenuTooltip\r\n            assigHooks={assigHooks}\r\n            assigContext={assigContext}\r\n            assigUtils={assigUtils}\r\n          />\r\n          <Timeline\r\n            handleMouseDownCanvas={handleMouseDownCanvas}\r\n            onItemMove={handleItemMove}\r\n            onItemResize={handleItemResize}\r\n            items={guestValue}\r\n            groups={filteredGroup}\r\n            {...defaultProps}\r\n            handleDraggingCell={handleDraggingCell}\r\n            onItemDoubleClick={handleItemDoubleClick}\r\n            onItemClick={handleItemClick}\r\n            onCanvasClick={handleCanvasClick}\r\n            onTimeChange={handleTimeChange}\r\n            itemRenderer={(props: any) =>\r\n              itemRendererFn({\r\n                ...props,\r\n                assigUtils,\r\n                assigContext,\r\n                assigHooks\r\n              })\r\n            }\r\n            groupRenderer={assigGroupRendererFn}\r\n            defaultTimeEnd={moment(defaultTimeEnd)\r\n              .add(-1 * timeline_size_var, \"days\")\r\n              .toDate()}\r\n            defaultTimeStart={defaultTimeStart}\r\n            handleDraggingEnd={handleDraggingEnd}\r\n            moveResizeValidator={handleMoveResizeValidator}\r\n            onItemSelect={handleItemSelect}\r\n            onCanvasContextMenu={handleCanvasContextMenu}\r\n            sidebarWidth={isMobile ? 100 : 230}\r\n            key={sideNavIsOpen ? \"a\" : \"b\"}\r\n          >\r\n            <TimelineHeaders>\r\n              {/* 왼쪽 위 달력 부분 */}\r\n              <SidebarHeader>\r\n                {({ getRootProps }: any) => (\r\n                  <SharedSideBarHeader\r\n                    dayPickerModalHook={dayPickerModalHook}\r\n                    getRootProps={getRootProps}\r\n                  />\r\n                )}\r\n              </SidebarHeader>\r\n              <DateHeader\r\n                intervalRenderer={(prop: any) => {\r\n                  const onClickCell = ({ intervalContext }: any) => {\r\n                    if (!intervalContext) return;\r\n                    dailyAssigHook.openModal({\r\n                      date: moment(intervalContext.interval.startTime).toDate()\r\n                    });\r\n                  };\r\n                  return HeaderCellRender({ onClickCell, holidays, ...prop });\r\n                }}\r\n                height={GlobalCSS.TIMELINE_HEADER_HEIGHT}\r\n                unit=\"day\"\r\n              />\r\n              <DateHeader />\r\n            </TimelineHeaders>\r\n          </Timeline>\r\n          {/* 생성된 방이 없을때 */}\r\n          {inIsEmpty && (\r\n            <div className=\"assigTimeline__placeHolderWrap\">\r\n              <Link to=\"/roomConfig\">\r\n                <Button\r\n                  mode=\"border\"\r\n                  thema=\"point\"\r\n                  pulse\r\n                  label={LANG(\"goto_create_roomType\")}\r\n                />\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <ReservationModal\r\n          modalHook={reservationModal}\r\n          callBackCreateBookingMu={CreateBooking => {\r\n            if (\r\n              CreateBooking.bookingTransaction &&\r\n              CreateBooking.bookingTransaction.booking\r\n            ) {\r\n              assigUtils.hilightGuestBlock({\r\n                bookingId: CreateBooking.bookingTransaction.booking._id,\r\n                scrollMove: true\r\n              });\r\n            }\r\n          }}\r\n          context={context}\r\n          publicKey={house.publicKey || undefined}\r\n        />\r\n        <BookingModalWrap context={context} modalHook={bookingModal} />\r\n        <JDtoastModal confirm {...confirmModalHook} />\r\n        {/* <KeyBoardModal modalHook={keyBoardModal}> */}\r\n        <JDmodal {...dailyAssigHook}>\r\n          <DailyAssigWrap\r\n            isInModal\r\n            date={dailyAssigHook.info.date}\r\n            context={context}\r\n          />\r\n        </JDmodal>\r\n      </div>\r\n      <DayPickerModal\r\n        modalHook={dayPickerModalHook}\r\n        isRange={false}\r\n        canSelectBeforeDay={true}\r\n        calenaderPosition=\"center\"\r\n        label={`${LANG(\"calender_date\")}`}\r\n        {...dayPickerHook}\r\n        className=\"JDwaves-effect JDoverflow-visible\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrProtecter(ShowTimeline);\r\n"]},"metadata":{},"sourceType":"module"}