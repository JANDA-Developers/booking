{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\bookingModal\\\\BookingModalWrap.tsx\";\nimport React, { useMemo } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport BookingModal from \"./BookingModal\";\nimport { LANG } from \"../../hooks/hook\";\nimport { queryDataFormater, onCompletedMessage, isEmpty, mergeObject, s4 } from \"../../utils/utils\";\nimport Preloader from \"../../atoms/preloader/Preloader\";\nimport { GET_BOOKING, UPDATE_BOOKING, DELETE_BOOKING, GET_BOOKINGS, GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM, GET_ROOM_TYPE_DATE_PRICE, START_BOOKING } from \"../../queries\";\nimport { MODAL_PRELOADER_SIZE } from \"../../types/enum\";\nimport { getOperationName } from \"apollo-utilities\";\nimport { DEFAULT_BOOKING } from \"../../types/defaults\";\nimport JDmodal from \"../../atoms/modal/Modal\";\n\nvar UpdateBookingMu =\n/*#__PURE__*/\nfunction (_Mutation) {\n  _inherits(UpdateBookingMu, _Mutation);\n\n  function UpdateBookingMu() {\n    _classCallCheck(this, UpdateBookingMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpdateBookingMu).apply(this, arguments));\n  }\n\n  return UpdateBookingMu;\n}(Mutation);\n\nvar CreatBookingMu =\n/*#__PURE__*/\nfunction (_Mutation2) {\n  _inherits(CreatBookingMu, _Mutation2);\n\n  function CreatBookingMu() {\n    _classCallCheck(this, CreatBookingMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CreatBookingMu).apply(this, arguments));\n  }\n\n  return CreatBookingMu;\n}(Mutation);\n\nvar DeleteBookingMu =\n/*#__PURE__*/\nfunction (_Mutation3) {\n  _inherits(DeleteBookingMu, _Mutation3);\n\n  function DeleteBookingMu() {\n    _classCallCheck(this, DeleteBookingMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DeleteBookingMu).apply(this, arguments));\n  }\n\n  return DeleteBookingMu;\n}(Mutation);\n\nvar GetBookingQuery =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(GetBookingQuery, _Query);\n\n  function GetBookingQuery() {\n    _classCallCheck(this, GetBookingQuery);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GetBookingQuery).apply(this, arguments));\n  }\n\n  return GetBookingQuery;\n}(Query);\n\nvar GetPriceWithDate =\n/*#__PURE__*/\nfunction (_Query2) {\n  _inherits(GetPriceWithDate, _Query2);\n\n  function GetPriceWithDate() {\n    _classCallCheck(this, GetPriceWithDate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GetPriceWithDate).apply(this, arguments));\n  }\n\n  return GetPriceWithDate;\n}(Query);\n\nvar BookingModalWrap = function BookingModalWrap(_ref) {\n  var deleteBookingCallBack = _ref.deleteBookingCallBack,\n      startBookingCallBack = _ref.startBookingCallBack,\n      updateBookingCallBack = _ref.updateBookingCallBack,\n      modalHook = _ref.modalHook,\n      context = _ref.context,\n      props = _objectWithoutProperties(_ref, [\"deleteBookingCallBack\", \"startBookingCallBack\", \"updateBookingCallBack\", \"modalHook\", \"context\"]);\n\n  var house = context.house;\n  var Result = useMemo(function () {\n    return React.createElement(GetBookingQuery, {\n      query: GET_BOOKING,\n      skip: isEmpty(modalHook.info) || modalHook.info.createParam !== undefined,\n      variables: {\n        bookingId: modalHook.info.bookingId || \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, function (_ref2) {\n      var bookingData = _ref2.data,\n          getBooking_loading = _ref2.loading;\n      // 쿼리결과\n      var booking = queryDataFormater(bookingData, \"GetBooking\", \"booking\", undefined); // (API로 가져온 Booking 정보) + (예약 생성요청 정보)\n\n      var mergedBooking = mergeObject(booking, modalHook.info.createParam);\n      var priceQueryVariables = mergedBooking ? {\n        checkIn: mergedBooking.checkIn,\n        checkOut: mergedBooking.checkOut,\n        houseId: house._id,\n        roomTypeIds: mergedBooking.roomTypes ? mergedBooking.roomTypes.map(function (roomType) {\n          return roomType._id;\n        }) : [\"\"]\n      } : undefined;\n      return React.createElement(GetPriceWithDate, {\n        skip: !priceQueryVariables,\n        query: GET_ROOM_TYPE_DATE_PRICE,\n        variables: priceQueryVariables,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, function (_ref3) {\n        var priceResult = _ref3.data,\n            getPrice_loading = _ref3.loading;\n        var priceData = queryDataFormater(priceResult, \"GetRoomTypeDatePrices\", \"roomTypeDatePrices\", []);\n        var placeHolederPrice = totalPriceGetAveragePrice(priceData || []);\n        return React.createElement(UpdateBookingMu, {\n          refetchQueries: [getOperationName(GET_BOOKINGS) || \"\", getOperationName(GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM) || \"\"],\n          mutation: UPDATE_BOOKING,\n          onCompleted: function onCompleted(_ref4) {\n            var UpdateBooking = _ref4.UpdateBooking;\n            onCompletedMessage(UpdateBooking, LANG(\"reservation_update\"), LANG(\"reservation_update_fail\"));\n            updateBookingCallBack && updateBookingCallBack(UpdateBooking);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, function (updateBookingMu) {\n          return React.createElement(CreatBookingMu, {\n            mutation: START_BOOKING,\n            onCompleted: function onCompleted(_ref5) {\n              var StartBooking = _ref5.StartBooking;\n              if (modalHook.info.startBookingCallBack) modalHook.info.startBookingCallBack(StartBooking);\n              onCompletedMessage(StartBooking, LANG(\"reservation_creation_complete\"), LANG(\"reservation_creation_fail\"));\n\n              if (StartBooking.ok) {\n                modalHook.closeModal();\n                startBookingCallBack && startBookingCallBack(StartBooking);\n              }\n            },\n            refetchQueries: [getOperationName(GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM) || \"\"],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, function (startBookingMu, _ref6) {\n            var startBookingLoading = _ref6.loading;\n            return React.createElement(DeleteBookingMu, {\n              mutation: DELETE_BOOKING,\n              refetchQueries: [getOperationName(GET_BOOKINGS) || \"\", getOperationName(GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM) || \"\"],\n              onCompleted: function onCompleted(_ref7) {\n                var DeleteBooking = _ref7.DeleteBooking;\n                onCompletedMessage(DeleteBooking, LANG(\"reservation_delete_complete\"), LANG(\"reservation_delete_fail\"));\n                modalHook.closeModal();\n                deleteBookingCallBack && deleteBookingCallBack(DeleteBooking);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164\n              },\n              __self: this\n            }, function (deleteBookingMu) {\n              var bookingData = isEmpty(mergedBooking) ? DEFAULT_BOOKING : mergedBooking;\n              var totalLoading = getBooking_loading || getPrice_loading;\n              return !totalLoading ? React.createElement(BookingModal, Object.assign({\n                bookingData: bookingData,\n                mode: modalHook.info.mode,\n                context: context,\n                loading: totalLoading,\n                modalHook: modalHook,\n                startBookingMu: startBookingMu,\n                updateBookingMu: updateBookingMu,\n                deleteBookingMu: deleteBookingMu,\n                startBookingLoading: startBookingLoading,\n                placeHolederPrice: placeHolederPrice\n              }, props, {\n                key: modalHook.info.createParam ? s4() : \"bookingModal\".concat(modalHook.info.bookingId),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 193\n                },\n                __self: this\n              })) : React.createElement(JDmodal, Object.assign({}, modalHook, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 212\n                },\n                __self: this\n              }), React.createElement(Preloader, {\n                size: MODAL_PRELOADER_SIZE,\n                noAnimation: true,\n                loading: totalLoading,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 213\n                },\n                __self: this\n              }));\n            });\n          });\n        });\n      });\n    });\n  }, [JSON.stringify(modalHook)]);\n  return Result;\n};\n\nexport default BookingModalWrap;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/bookingModal/BookingModalWrap.tsx"],"names":["React","useMemo","Query","Mutation","BookingModal","LANG","queryDataFormater","onCompletedMessage","isEmpty","mergeObject","s4","Preloader","GET_BOOKING","UPDATE_BOOKING","DELETE_BOOKING","GET_BOOKINGS","GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM","GET_ROOM_TYPE_DATE_PRICE","START_BOOKING","MODAL_PRELOADER_SIZE","getOperationName","DEFAULT_BOOKING","JDmodal","UpdateBookingMu","CreatBookingMu","DeleteBookingMu","GetBookingQuery","GetPriceWithDate","BookingModalWrap","deleteBookingCallBack","startBookingCallBack","updateBookingCallBack","modalHook","context","props","house","Result","info","createParam","undefined","bookingId","bookingData","data","getBooking_loading","loading","booking","mergedBooking","priceQueryVariables","checkIn","checkOut","houseId","_id","roomTypeIds","roomTypes","map","roomType","priceResult","getPrice_loading","priceData","placeHolederPrice","totalPriceGetAveragePrice","UpdateBooking","updateBookingMu","StartBooking","ok","closeModal","startBookingMu","startBookingLoading","DeleteBooking","deleteBookingMu","totalLoading","mode","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport BookingModal from \"./BookingModal\";\r\nimport _ from \"lodash\";\r\nimport { IUseModal, LANG } from \"../../hooks/hook\";\r\nimport {\r\n  getBooking,\r\n  getBookingVariables,\r\n  updateBooking,\r\n  updateBookingVariables,\r\n  deleteBooking,\r\n  deleteBookingVariables,\r\n  allocateGuestToRoom,\r\n  allocateGuestToRoomVariables,\r\n  getRoomTypeDatePrices,\r\n  getRoomTypeDatePricesVariables,\r\n  startBooking,\r\n  startBookingVariables,\r\n  deleteBooking_DeleteBooking,\r\n  updateBooking_UpdateBooking,\r\n  startBooking_StartBooking\r\n} from \"../../types/api\";\r\nimport {\r\n  queryDataFormater,\r\n  onCompletedMessage,\r\n  isEmpty,\r\n  mergeObject,\r\n  s4\r\n} from \"../../utils/utils\";\r\nimport Preloader from \"../../atoms/preloader/Preloader\";\r\nimport {\r\n  GET_BOOKING,\r\n  UPDATE_BOOKING,\r\n  DELETE_BOOKING,\r\n  GET_BOOKINGS,\r\n  ALLOCATE_GUEST_TO_ROOM,\r\n  GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM,\r\n  GET_ROOM_TYPE_DATE_PRICE,\r\n  START_BOOKING\r\n} from \"../../queries\";\r\nimport { MODAL_PRELOADER_SIZE } from \"../../types/enum\";\r\nimport { getOperationName } from \"apollo-utilities\";\r\nimport { DEFAULT_BOOKING } from \"../../types/defaults\";\r\nimport JDmodal from \"../../atoms/modal/Modal\";\r\nimport { IBookingModalWrapProps } from \"./declaration\";\r\n\r\nclass UpdateBookingMu extends Mutation<updateBooking, updateBookingVariables> {}\r\nclass CreatBookingMu extends Mutation<startBooking, startBookingVariables> {}\r\nclass DeleteBookingMu extends Mutation<deleteBooking, deleteBookingVariables> {}\r\nclass GetBookingQuery extends Query<getBooking, getBookingVariables> {}\r\nclass GetPriceWithDate extends Query<\r\n  getRoomTypeDatePrices,\r\n  getRoomTypeDatePricesVariables\r\n> {}\r\n\r\nconst BookingModalWrap: React.FC<IBookingModalWrapProps> = ({\r\n  deleteBookingCallBack,\r\n  startBookingCallBack,\r\n  updateBookingCallBack,\r\n  modalHook,\r\n  context,\r\n  ...props\r\n}) => {\r\n  const { house } = context;\r\n\r\n  const Result = useMemo(\r\n    () => (\r\n      <GetBookingQuery\r\n        query={GET_BOOKING}\r\n        skip={\r\n          isEmpty(modalHook.info) || modalHook.info.createParam !== undefined\r\n        }\r\n        variables={{\r\n          bookingId: modalHook.info.bookingId || \"\"\r\n        }}\r\n      >\r\n        {({ data: bookingData, loading: getBooking_loading }) => {\r\n          // 쿼리결과\r\n          const booking = queryDataFormater(\r\n            bookingData,\r\n            \"GetBooking\",\r\n            \"booking\",\r\n            undefined\r\n          );\r\n\r\n          // (API로 가져온 Booking 정보) + (예약 생성요청 정보)\r\n          const mergedBooking = mergeObject(\r\n            booking,\r\n            modalHook.info.createParam\r\n          );\r\n\r\n          const priceQueryVariables:\r\n            | getRoomTypeDatePricesVariables\r\n            | undefined = mergedBooking\r\n            ? {\r\n                checkIn: mergedBooking.checkIn,\r\n                checkOut: mergedBooking.checkOut,\r\n                houseId: house._id,\r\n                roomTypeIds: mergedBooking.roomTypes\r\n                  ? mergedBooking.roomTypes.map(roomType => roomType._id)\r\n                  : [\"\"]\r\n              }\r\n            : undefined;\r\n\r\n          return (\r\n            <GetPriceWithDate\r\n              skip={!priceQueryVariables}\r\n              query={GET_ROOM_TYPE_DATE_PRICE}\r\n              variables={priceQueryVariables}\r\n            >\r\n              {({ data: priceResult, loading: getPrice_loading }) => {\r\n                const priceData = queryDataFormater(\r\n                  priceResult,\r\n                  \"GetRoomTypeDatePrices\",\r\n                  \"roomTypeDatePrices\",\r\n                  []\r\n                );\r\n                const placeHolederPrice = totalPriceGetAveragePrice(\r\n                  priceData || []\r\n                );\r\n                return (\r\n                  <UpdateBookingMu\r\n                    refetchQueries={[\r\n                      getOperationName(GET_BOOKINGS) || \"\",\r\n                      getOperationName(\r\n                        GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM\r\n                      ) || \"\"\r\n                    ]}\r\n                    mutation={UPDATE_BOOKING}\r\n                    onCompleted={({ UpdateBooking }) => {\r\n                      onCompletedMessage(\r\n                        UpdateBooking,\r\n                        LANG(\"reservation_update\"),\r\n                        LANG(\"reservation_update_fail\")\r\n                      );\r\n                      updateBookingCallBack &&\r\n                        updateBookingCallBack(UpdateBooking);\r\n                    }}\r\n                  >\r\n                    {updateBookingMu => (\r\n                      <CreatBookingMu\r\n                        mutation={START_BOOKING}\r\n                        onCompleted={({ StartBooking }) => {\r\n                          if (modalHook.info.startBookingCallBack)\r\n                            modalHook.info.startBookingCallBack(StartBooking);\r\n                          onCompletedMessage(\r\n                            StartBooking,\r\n                            LANG(\"reservation_creation_complete\"),\r\n                            LANG(\"reservation_creation_fail\")\r\n                          );\r\n                          if (StartBooking.ok) {\r\n                            modalHook.closeModal();\r\n                            startBookingCallBack &&\r\n                              startBookingCallBack(StartBooking);\r\n                          }\r\n                        }}\r\n                        refetchQueries={[\r\n                          getOperationName(\r\n                            GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM\r\n                          ) || \"\"\r\n                        ]}\r\n                      >\r\n                        {(startBookingMu, { loading: startBookingLoading }) => (\r\n                          <DeleteBookingMu\r\n                            mutation={DELETE_BOOKING}\r\n                            refetchQueries={[\r\n                              getOperationName(GET_BOOKINGS) || \"\",\r\n                              getOperationName(\r\n                                GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM\r\n                              ) || \"\"\r\n                            ]}\r\n                            onCompleted={({ DeleteBooking }) => {\r\n                              onCompletedMessage(\r\n                                DeleteBooking,\r\n                                LANG(\"reservation_delete_complete\"),\r\n                                LANG(\"reservation_delete_fail\")\r\n                              );\r\n                              modalHook.closeModal();\r\n\r\n                              deleteBookingCallBack &&\r\n                                deleteBookingCallBack(DeleteBooking);\r\n                            }}\r\n                          >\r\n                            {deleteBookingMu => {\r\n                              const bookingData = isEmpty(mergedBooking)\r\n                                ? DEFAULT_BOOKING\r\n                                : mergedBooking;\r\n\r\n                              const totalLoading =\r\n                                getBooking_loading || getPrice_loading;\r\n\r\n                              return !totalLoading ? (\r\n                                <BookingModal\r\n                                  bookingData={bookingData}\r\n                                  mode={modalHook.info.mode}\r\n                                  context={context}\r\n                                  loading={totalLoading}\r\n                                  modalHook={modalHook}\r\n                                  startBookingMu={startBookingMu}\r\n                                  updateBookingMu={updateBookingMu}\r\n                                  deleteBookingMu={deleteBookingMu}\r\n                                  startBookingLoading={startBookingLoading}\r\n                                  placeHolederPrice={placeHolederPrice}\r\n                                  {...props}\r\n                                  key={\r\n                                    modalHook.info.createParam\r\n                                      ? s4()\r\n                                      : `bookingModal${modalHook.info.bookingId}`\r\n                                  }\r\n                                />\r\n                              ) : (\r\n                                <JDmodal {...modalHook}>\r\n                                  <Preloader\r\n                                    size={MODAL_PRELOADER_SIZE}\r\n                                    noAnimation\r\n                                    loading={totalLoading}\r\n                                  />\r\n                                </JDmodal>\r\n                              );\r\n                            }}\r\n                          </DeleteBookingMu>\r\n                        )}\r\n                      </CreatBookingMu>\r\n                    )}\r\n                  </UpdateBookingMu>\r\n                );\r\n              }}\r\n            </GetPriceWithDate>\r\n          );\r\n        }}\r\n      </GetBookingQuery>\r\n    ),\r\n    [JSON.stringify(modalHook)]\r\n  );\r\n\r\n  return Result;\r\n};\r\n\r\nexport default BookingModalWrap;\r\n"]},"metadata":{},"sourceType":"module"}