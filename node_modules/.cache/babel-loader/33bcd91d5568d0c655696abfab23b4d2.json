{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\setPrice\\\\components\\\\createSeasonModal.tsx\";\nimport React, { useState } from \"react\";\nimport { useDayPicker, useModal, LANG } from \"../../../../hooks/hook\";\nimport JDmodal from \"../../../../atoms/modal/Modal\";\nimport { s4, autoComma, toNumber } from \"../../../../utils/utils\";\nimport Button from \"../../../../atoms/button/Button\";\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\nimport JDdayPicker from \"../../../../atoms/dayPicker/DayPicker\";\nimport JDbox from \"../../../../atoms/box/JDbox\";\nimport { isName } from \"../../../../utils/inputValidations\";\nimport PriceWarnModal from \"../../../../components/priceWarnModal.tsx/PriceWarnModal\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\n\nvar CreateSeasonModal = function CreateSeasonModal(_ref) {\n  var createSeasonMu = _ref.createSeasonMu,\n      modalHook = _ref.modalHook,\n      roomTypes = _ref.roomTypes,\n      houseId = _ref.houseId;\n  var dayPickerHook = useDayPicker(null, null);\n  var priceWarnModal = useModal(false);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(roomTypes.map(function (roomType) {\n    return roomType.defaultPrice || 0;\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prices = _useState4[0],\n      setPrices = _useState4[1];\n\n  var createSeasonPriceInputs = function createSeasonPriceInputs() {\n    return prices.map(function (price, index) {\n      return {\n        roomTypeId: roomTypes[index]._id,\n        defaultPrice: price\n      };\n    });\n  };\n\n  var validation = function validation() {\n    if (!isName(name)) {\n      toast.warn(LANG(\"not_a_valid_name\"));\n      return false;\n    }\n\n    if (prices.find(function (price) {\n      return price === null || undefined || NaN;\n    })) {\n      toast.warn(LANG(\"please_enter_a_base_price\"));\n      return false;\n    }\n\n    if (!dayPickerHook.from || !dayPickerHook.to) {\n      toast.warn(LANG(\"please_specify_the_date\"));\n      return false;\n    }\n\n    return true;\n  };\n\n  var validation2 = function validation2() {\n    if (!prices.every(function (price) {\n      return price > 1000;\n    })) {\n      priceWarnModal.openModal({\n        confirmCallBackFn: handleClickSeasonCreate\n      });\n    } else {\n      handleClickSeasonCreate(true);\n    }\n  };\n\n  var handleClickSeasonCreate = function handleClickSeasonCreate(flag) {\n    if (!flag) return;\n    createSeasonMu({\n      variables: {\n        start: dayPickerHook.from,\n        end: moment(dayPickerHook.to).add(1, \"day\").toDate(),\n        name: name,\n        seasonPrices: createSeasonPriceInputs(),\n        houseId: houseId\n      }\n    });\n    modalHook.closeModal();\n  };\n\n  return React.createElement(JDmodal, Object.assign({\n    className: \"createSeasonModal\",\n    visibleOverflow: true\n  }, modalHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    label: LANG(\"season_name\"),\n    defaultValue: name,\n    onBlur: function onBlur(e) {\n      setName(e.currentTarget.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(JDdayPicker, Object.assign({\n    canSelectBeforeDay: true,\n    calenaderPosition: \"center\",\n    displayYear: false,\n    label: LANG(\"season_period\"),\n    input: true,\n    isRange: true\n  }, dayPickerHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"createSeasonModal__table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(JDbox, {\n    mode: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"JDtable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, LANG(\"roomType\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, LANG(\"season_basic_price\")))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, prices.map(function (price, index) {\n    return React.createElement(\"tr\", {\n      key: s4(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, roomTypes[index].name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(InputText, {\n      placeholder: autoComma(roomTypes[index].defaultPrice || 0),\n      defaultValue: autoComma(price),\n      onBlur: function onBlur(e) {\n        prices[index] = toNumber(e.currentTarget.value);\n        setPrices(_toConsumableArray(prices));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })));\n  }))))), React.createElement(\"div\", {\n    className: \"JDmodal__endSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      validation() && validation2();\n    },\n    size: \"small\",\n    label: LANG(\"create_season\"),\n    thema: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(PriceWarnModal, {\n    modalHook: priceWarnModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }));\n};\n\nexport default CreateSeasonModal; // CreateSeasonModal 과 UpdateSeasonModal이 분리되어 있음에 유의","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/setPrice/components/createSeasonModal.tsx"],"names":["React","useState","useDayPicker","useModal","LANG","JDmodal","s4","autoComma","toNumber","Button","InputText","JDdayPicker","JDbox","isName","PriceWarnModal","toast","moment","CreateSeasonModal","createSeasonMu","modalHook","roomTypes","houseId","dayPickerHook","priceWarnModal","name","setName","map","roomType","defaultPrice","prices","setPrices","createSeasonPriceInputs","price","index","roomTypeId","_id","validation","warn","find","undefined","NaN","from","to","validation2","every","openModal","confirmCallBackFn","handleClickSeasonCreate","flag","variables","start","end","add","toDate","seasonPrices","closeModal","e","currentTarget","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {IUseModal, useDayPicker, useModal, LANG} from \"../../../../hooks/hook\";\r\nimport JDmodal from \"../../../../atoms/modal/Modal\";\r\nimport {s4, autoComma, toNumber} from \"../../../../utils/utils\";\r\nimport Button from \"../../../../atoms/button/Button\";\r\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\r\nimport {\r\n  getAllSeasonTable_GetAllRoomType_roomTypes,\r\n  createSeason,\r\n  createSeasonVariables,\r\n  SeasonPriceInput\r\n} from \"../../../../types/api\";\r\nimport JDdayPicker from \"../../../../atoms/dayPicker/DayPicker\";\r\nimport JDbox from \"../../../../atoms/box/JDbox\";\r\nimport {MutationFn} from \"react-apollo\";\r\nimport {isName} from \"../../../../utils/inputValidations\";\r\nimport PriceWarnModal from \"../../../../components/priceWarnModal.tsx/PriceWarnModal\";\r\nimport {toast} from \"react-toastify\";\r\nimport moment from \"moment\";\r\n\r\nexport interface ICreateSeasonModalInfo {\r\n  applyedDays: number;\r\n}\r\n\r\ninterface IProps {\r\n  modalHook: IUseModal;\r\n  roomTypes: getAllSeasonTable_GetAllRoomType_roomTypes[];\r\n  createSeasonMu: MutationFn<createSeason, createSeasonVariables>;\r\n  houseId: string;\r\n}\r\n\r\nconst CreateSeasonModal: React.FC<IProps> = ({\r\n  createSeasonMu,\r\n  modalHook,\r\n  roomTypes,\r\n  houseId\r\n}) => {\r\n  const dayPickerHook = useDayPicker(null, null);\r\n  const priceWarnModal = useModal(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [prices, setPrices] = useState<number[]>(\r\n    roomTypes.map(roomType => roomType.defaultPrice || 0)\r\n  );\r\n\r\n  const createSeasonPriceInputs = (): SeasonPriceInput[] =>\r\n    prices.map((price, index) => ({\r\n      roomTypeId: roomTypes[index]._id,\r\n      defaultPrice: price\r\n    }));\r\n\r\n  const validation = (): boolean => {\r\n    if (!isName(name)) {\r\n      toast.warn(LANG(\"not_a_valid_name\"));\r\n      return false;\r\n    }\r\n    if (prices.find(price => price === null || undefined || NaN)) {\r\n      toast.warn(LANG(\"please_enter_a_base_price\"));\r\n      return false;\r\n    }\r\n\r\n    if (!dayPickerHook.from || !dayPickerHook.to) {\r\n      toast.warn(LANG(\"please_specify_the_date\"));\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const validation2 = () => {\r\n    if (!prices.every(price => price > 1000)) {\r\n      priceWarnModal.openModal({\r\n        confirmCallBackFn: handleClickSeasonCreate\r\n      });\r\n    } else {\r\n      handleClickSeasonCreate(true);\r\n    }\r\n  };\r\n\r\n  const handleClickSeasonCreate = (flag: boolean) => {\r\n    if (!flag) return;\r\n    createSeasonMu({\r\n      variables: {\r\n        start: dayPickerHook.from,\r\n        end: moment(dayPickerHook.to!)\r\n          .add(1, \"day\")\r\n          .toDate(),\r\n        name,\r\n        seasonPrices: createSeasonPriceInputs(),\r\n        houseId\r\n      }\r\n    });\r\n    modalHook.closeModal();\r\n  };\r\n\r\n  return (\r\n    <JDmodal className=\"createSeasonModal\" visibleOverflow {...modalHook}>\r\n      <div>\r\n        <InputText\r\n          label={LANG(\"season_name\")}\r\n          defaultValue={name}\r\n          onBlur={e => {\r\n            setName(e.currentTarget.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <JDdayPicker\r\n          canSelectBeforeDay={true}\r\n          calenaderPosition=\"center\"\r\n          displayYear={false}\r\n          label={LANG(\"season_period\")}\r\n          input\r\n          isRange\r\n          {...dayPickerHook}\r\n        />\r\n      </div>\r\n      <div className=\"createSeasonModal__table\">\r\n        <JDbox mode=\"table\">\r\n          <table className=\"JDtable\">\r\n            <thead>\r\n              <tr>\r\n                <th>{LANG(\"roomType\")}</th>\r\n                <th>{LANG(\"season_basic_price\")}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {prices.map((price, index) => (\r\n                <tr key={s4()}>\r\n                  <td>{roomTypes[index].name}</td>\r\n                  <td>\r\n                    <InputText\r\n                      placeholder={autoComma(\r\n                        roomTypes[index].defaultPrice || 0\r\n                      )}\r\n                      defaultValue={autoComma(price)}\r\n                      onBlur={e => {\r\n                        prices[index] = toNumber(e.currentTarget.value);\r\n                        setPrices([...prices]);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </JDbox>\r\n      </div>\r\n      <div className=\"JDmodal__endSection\">\r\n        <Button\r\n          onClick={() => {\r\n            validation() && validation2();\r\n          }}\r\n          size=\"small\"\r\n          label={LANG(\"create_season\")}\r\n          thema=\"primary\"\r\n        />\r\n      </div>\r\n      <PriceWarnModal modalHook={priceWarnModal} />\r\n    </JDmodal>\r\n  );\r\n};\r\nexport default CreateSeasonModal;\r\n\r\n// CreateSeasonModal 과 UpdateSeasonModal이 분리되어 있음에 유의\r\n"]},"metadata":{},"sourceType":"module"}