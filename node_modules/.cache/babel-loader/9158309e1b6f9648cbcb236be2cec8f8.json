{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\setPrice\\\\components\\\\dayOfWeekModal.tsx\";\nimport classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { LANG } from \"../../../../hooks/hook\";\nimport JDmodal from \"../../../../atoms/modal/Modal\";\nimport { autoComma, toNumber } from \"../../../../utils/utils\";\nimport Button from \"../../../../atoms/button/Button\";\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\nimport { dayarrEnToValueArr } from \"../../../../utils/dayOfweeks\";\nimport { WeekArrKr, WeekArrEn } from \"../../../../types/enum\";\n\nvar DayOfWeekModal = function DayOfWeekModal(_ref) {\n  var modalHook = _ref.modalHook,\n      priceMap = _ref.priceMap,\n      setShouldSave = _ref.setShouldSave,\n      setPriceMap = _ref.setPriceMap;\n  if (!modalHook.isOpen) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n  var classes = classNames(\"dayOfWeekModal\", \"\", {});\n  var dayOfWeekPriceList = modalHook.info.priceInput.dayOfWeekPriceList;\n  var _modalHook$info = modalHook.info,\n      priceInput = _modalHook$info.priceInput,\n      seasonId = _modalHook$info.seasonId,\n      roomTypeId = _modalHook$info.roomTypeId;\n  var defaultPrice = priceInput.default;\n\n  var _useState = useState(dayarrEnToValueArr(dayOfWeekPriceList)),\n      _useState2 = _slicedToArray(_useState, 2),\n      priceArr = _useState2[0],\n      setPriceArr = _useState2[1];\n\n  var handleClickCompleteBtn = function handleClickCompleteBtn() {\n    var dayOfWeekPriceList = priceArr.map(function (price, index) {\n      if (!price) return undefined;\n      return {\n        day: WeekArrEn[index],\n        price: price\n      };\n    }).filter(function (price) {\n      return price !== undefined;\n    }); // @ts-ignore\n\n    priceInput.dayOfWeekPriceList = dayOfWeekPriceList;\n    priceMap.set(roomTypeId + seasonId, priceInput);\n    setShouldSave(true);\n    modalHook.closeModal();\n  };\n\n  return React.createElement(JDmodal, Object.assign({}, modalHook, {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), priceArr.map(function (price, index) {\n    return React.createElement(InputText, {\n      placeholder: autoComma(defaultPrice),\n      onChange: function onChange(value) {\n        priceArr[index] = toNumber(value);\n        setPriceArr(_toConsumableArray(priceArr));\n      },\n      comma: true,\n      value: price,\n      label: WeekArrKr[index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }), React.createElement(\"div\", {\n    className: \"JDmodal__endSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Button, {\n    label: LANG(\"Apply\"),\n    size: \"small\",\n    onClick: function onClick() {\n      handleClickCompleteBtn();\n    },\n    thema: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })));\n};\n\nexport default DayOfWeekModal;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/setPrice/components/dayOfWeekModal.tsx"],"names":["classNames","React","useState","LANG","JDmodal","autoComma","toNumber","Button","InputText","dayarrEnToValueArr","WeekArrKr","WeekArrEn","DayOfWeekModal","modalHook","priceMap","setShouldSave","setPriceMap","isOpen","classes","dayOfWeekPriceList","info","priceInput","seasonId","roomTypeId","defaultPrice","default","priceArr","setPriceArr","handleClickCompleteBtn","map","price","index","undefined","day","filter","set","closeModal","value"],"mappings":"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","sourcesContent":["import classNames from \"classnames\";\r\nimport React, { useState } from \"react\";\r\nimport { IUseModal, LANG } from \"../../../../hooks/hook\";\r\nimport JDmodal from \"../../../../atoms/modal/Modal\";\r\nimport { autoComma, toNumber } from \"../../../../utils/utils\";\r\nimport Button from \"../../../../atoms/button/Button\";\r\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\r\nimport { dayarrEnToValueArr } from \"../../../../utils/dayOfweeks\";\r\nimport { priceMapResult } from \"../SetPriceWrap\";\r\nimport { WeekArrKr, WeekArrEn } from \"../../../../types/enum\";\r\n\r\nexport interface IDayOfWeekModalInfo {\r\n  priceInput: priceMapResult;\r\n  roomTypeId: string;\r\n  seasonId: string;\r\n}\r\n\r\ninterface IProps {\r\n  modalHook: IUseModal<IDayOfWeekModalInfo>;\r\n  setShouldSave: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setPriceMap: React.Dispatch<\r\n    React.SetStateAction<Map<string, priceMapResult>>\r\n  >;\r\n  priceMap: Map<string, priceMapResult>;\r\n}\r\n\r\nconst DayOfWeekModal: React.SFC<IProps> = ({\r\n  modalHook,\r\n  priceMap,\r\n  setShouldSave,\r\n  setPriceMap\r\n}) => {\r\n  if (!modalHook.isOpen) return <div />;\r\n  const classes = classNames(\"dayOfWeekModal\", \"\", {});\r\n  const dayOfWeekPriceList = modalHook.info.priceInput.dayOfWeekPriceList;\r\n\r\n  const { priceInput, seasonId, roomTypeId } = modalHook.info;\r\n  const defaultPrice = priceInput.default;\r\n\r\n  const [priceArr, setPriceArr] = useState<(number | null)[]>(\r\n    dayarrEnToValueArr(dayOfWeekPriceList)\r\n  );\r\n\r\n  const handleClickCompleteBtn = () => {\r\n    const dayOfWeekPriceList = priceArr\r\n      .map((price, index) => {\r\n        if (!price) return undefined;\r\n        return {\r\n          day: WeekArrEn[index],\r\n          price: price\r\n        };\r\n      })\r\n      .filter(price => price !== undefined);\r\n\r\n    // @ts-ignore\r\n    priceInput.dayOfWeekPriceList = dayOfWeekPriceList;\r\n    priceMap.set(roomTypeId + seasonId, priceInput);\r\n    setShouldSave(true);\r\n    modalHook.closeModal();\r\n  };\r\n\r\n  return (\r\n    <JDmodal {...modalHook} className={classes}>\r\n      {priceArr.map((price, index) => (\r\n        <InputText\r\n          placeholder={autoComma(defaultPrice)}\r\n          onChange={value => {\r\n            priceArr[index] = toNumber(value);\r\n            setPriceArr([...priceArr]);\r\n          }}\r\n          comma\r\n          value={price}\r\n          label={WeekArrKr[index]}\r\n        />\r\n      ))}\r\n      <div className=\"JDmodal__endSection\">\r\n        <Button\r\n          label={LANG(\"Apply\")}\r\n          size=\"small\"\r\n          onClick={() => {\r\n            handleClickCompleteBtn();\r\n          }}\r\n          thema=\"primary\"\r\n        />\r\n      </div>\r\n    </JDmodal>\r\n  );\r\n};\r\n\r\nexport default DayOfWeekModal;\r\n"]},"metadata":{},"sourceType":"module"}