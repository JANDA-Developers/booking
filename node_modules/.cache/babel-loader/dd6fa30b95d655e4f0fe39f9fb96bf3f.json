{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\outPages\\\\reservation\\\\components\\\\bookingInfoBox.tsx\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport JDtable, { ReactTableDefault } from \"../../../../atoms/table/Table\";\nimport JDbox from \"../../../../atoms/box/JDbox\";\nimport { PricingType } from \"../../../../types/enum\";\nimport { autoComma } from \"../../../../utils/utils\";\nimport { LANG } from \"../../../../hooks/hook\";\n\nvar BookingInfoBox = function BookingInfoBox(_ref) {\n  var className = _ref.className,\n      roomSelectInfo = _ref.roomSelectInfo,\n      from = _ref.from,\n      to = _ref.to,\n      roomTypeInfo = _ref.roomTypeInfo,\n      totalPrice = _ref.totalPrice;\n  var classes = classNames(\"JDselectInfo\", className, {});\n  var TableColumns = [{\n    Header: LANG(\"checkIn\"),\n    accessor: \"roomTypeId\",\n    Cell: function Cell() {\n      return from && to ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, moment(from).format(\"YYYY-MM-DD\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  }, {\n    Header: LANG(\"checkOut\"),\n    accessor: \"roomTypeId\",\n    Cell: function Cell() {\n      return from && to ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, moment(to).format(\"YYYY-MM-DD\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    }\n  }, {\n    Header: LANG(\"room_info\"),\n    accessor: \"roomTypeId\",\n    Cell: function Cell(_ref2) {\n      var value = _ref2.value;\n      var roomType = roomTypeInfo.find(function (inRoomType) {\n        return inRoomType._id === value;\n      });\n      if (roomType) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, roomType.name);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    }\n  }, {\n    Header: LANG(\"personnel\"),\n    accessor: \"roomTypeId\",\n    Cell: function Cell(_ref3) {\n      var original = _ref3.original;\n      return original.pricingType === PricingType.DOMITORY ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"\".concat(original.count.male).concat(LANG(\"male\"))), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"\".concat(original.count.female).concat(LANG(\"female\"), \" \"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"\".concat(original.count.roomCount)));\n    }\n  }];\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(JDtable, Object.assign({}, ReactTableDefault, {\n    columns: TableColumns,\n    data: roomSelectInfo,\n    minRows: 1,\n    noDataText: LANG(\"no_choosen_option\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(JDbox, {\n    className: \"JDmargin-bottom0--wmdUp\",\n    mode: \"border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, LANG(\"total_price\"), \": \", autoComma(totalPrice)), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" /\", LANG(\"money_unit\"))));\n};\n\nexport default BookingInfoBox;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/outPages/reservation/components/bookingInfoBox.tsx"],"names":["classNames","moment","React","JDtable","ReactTableDefault","JDbox","PricingType","autoComma","LANG","BookingInfoBox","className","roomSelectInfo","from","to","roomTypeInfo","totalPrice","classes","TableColumns","Header","accessor","Cell","format","value","roomType","find","inRoomType","_id","name","original","pricingType","DOMITORY","count","male","female","roomCount"],"mappings":"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","sourcesContent":["import classNames from \"classnames\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport JDtable, {\r\n  ReactTableDefault,\r\n  JDcolumn\r\n} from \"../../../../atoms/table/Table\";\r\nimport JDbox from \"../../../../atoms/box/JDbox\";\r\nimport { IRoomType } from \"../../../../types/interface\";\r\nimport { PricingType } from \"../../../../types/enum\";\r\nimport { autoComma } from \"../../../../utils/utils\";\r\nimport { LANG } from \"../../../../hooks/hook\";\r\nimport { IRoomSelectInfo } from \"../../../../components/bookingModal/declaration\";\r\n\r\nexport interface IBookingInfoBoxProps {\r\n  className?: string;\r\n  roomSelectInfo: IRoomSelectInfo[];\r\n  from: Date | null;\r\n  to: Date | null;\r\n  roomTypeInfo: IRoomType[];\r\n  totalPrice: number;\r\n}\r\n\r\nconst BookingInfoBox: React.FC<IBookingInfoBoxProps> = ({\r\n  className,\r\n  roomSelectInfo,\r\n  from,\r\n  to,\r\n  roomTypeInfo,\r\n  totalPrice\r\n}) => {\r\n  const classes = classNames(\"JDselectInfo\", className, {});\r\n\r\n  const TableColumns: JDcolumn<IRoomSelectInfo>[] = [\r\n    {\r\n      Header: LANG(\"checkIn\"),\r\n      accessor: \"roomTypeId\",\r\n      Cell: () =>\r\n        from && to ? <div>{moment(from).format(\"YYYY-MM-DD\")}</div> : <div />\r\n    },\r\n    {\r\n      Header: LANG(\"checkOut\"),\r\n      accessor: \"roomTypeId\",\r\n      Cell: () =>\r\n        from && to ? <div>{moment(to).format(\"YYYY-MM-DD\")}</div> : <div />\r\n    },\r\n    {\r\n      Header: LANG(\"room_info\"),\r\n      accessor: \"roomTypeId\",\r\n      Cell: ({ value }) => {\r\n        const roomType = roomTypeInfo.find(\r\n          inRoomType => inRoomType._id === value\r\n        );\r\n        if (roomType) return <div>{roomType.name}</div>;\r\n        return <div />;\r\n      }\r\n    },\r\n    {\r\n      Header: LANG(\"personnel\"),\r\n      accessor: \"roomTypeId\",\r\n      Cell: ({ original }) =>\r\n        original.pricingType === PricingType.DOMITORY ? (\r\n          <div>\r\n            <span>{`${original.count.male}${LANG(\"male\")}`}</span>\r\n            <span>{`${original.count.female}${LANG(\"female\")} `}</span>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <span>{`${original.count.roomCount}`}</span>\r\n          </div>\r\n        )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <JDtable\r\n        {...ReactTableDefault}\r\n        columns={TableColumns}\r\n        data={roomSelectInfo}\r\n        minRows={1}\r\n        noDataText={LANG(\"no_choosen_option\")}\r\n      />\r\n      <JDbox className=\"JDmargin-bottom0--wmdUp\" mode=\"border\">\r\n        <span>\r\n          {LANG(\"total_price\")}: {autoComma(totalPrice)}\r\n        </span>\r\n        <span> /{LANG(\"money_unit\")}</span>\r\n      </JDbox>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingInfoBox;\r\n"]},"metadata":{},"sourceType":"module"}