{"ast":null,"code":"import { toast } from \"react-toastify\"; // 한국어인지 검사한다 한국어검사\n\nexport var isIncludeKr = function isIncludeKr(str) {\n  if (!str) return false;\n  var check = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n  if (check.test(str)) return true;\n  return false;\n};\n\nvar onCompletedMessage = function onCompletedMessage(result, resultOK, resultFale) {\n  if (!result) {\n    return;\n  }\n\n  var haveKr = isIncludeKr(result.error);\n\n  if (result.ok) {\n    toast.success(resultOK); // 한글이 있다면 에러 메세지는 백엔드에서 온것\n  } else if (haveKr) {\n    toast.warn(result.error); // 한글이 없다면 에러 메세지는 프론트에서 기입한것\n  } else {\n    console.error(\"Error From BackEnd Message  : \".concat(result.error));\n    resultFale && toast.warn(resultFale);\n    resultFale || toast.warn(result.error);\n  }\n};\n\nexport default onCompletedMessage;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/utils/onCompletedMessage.tsx"],"names":["toast","isIncludeKr","str","check","test","onCompletedMessage","result","resultOK","resultFale","haveKr","error","ok","success","warn","console"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB,C,CAEA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAiC;AAC1D,MAAI,CAACA,GAAL,EAAU,OAAO,KAAP;AACV,MAAMC,KAAK,GAAG,eAAd;AACA,MAAIA,KAAK,CAACC,IAAN,CAAWF,GAAX,CAAJ,EAAqB,OAAO,IAAP;AACrB,SAAO,KAAP;AACD,CALM;;AAaP,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,MADyB,EAEzBC,QAFyB,EAGzBC,UAHyB,EAItB;AACH,MAAI,CAACF,MAAL,EAAa;AACX;AACD;;AACD,MAAMG,MAAM,GAAGR,WAAW,CAACK,MAAM,CAACI,KAAR,CAA1B;;AACA,MAAIJ,MAAM,CAACK,EAAX,EAAe;AACbX,IAAAA,KAAK,CAACY,OAAN,CAAcL,QAAd,EADa,CAEb;AACD,GAHD,MAGO,IAAIE,MAAJ,EAAY;AACjBT,IAAAA,KAAK,CAACa,IAAN,CAAWP,MAAM,CAACI,KAAlB,EADiB,CAEjB;AACD,GAHM,MAGA;AACLI,IAAAA,OAAO,CAACJ,KAAR,yCAA+CJ,MAAM,CAACI,KAAtD;AACAF,IAAAA,UAAU,IAAIR,KAAK,CAACa,IAAN,CAAWL,UAAX,CAAd;AACAA,IAAAA,UAAU,IAAIR,KAAK,CAACa,IAAN,CAAWP,MAAM,CAACI,KAAlB,CAAd;AACD;AACF,CApBD;;AAsBA,eAAeL,kBAAf","sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\n// 한국어인지 검사한다 한국어검사\r\nexport const isIncludeKr = (str: string | null): boolean => {\r\n  if (!str) return false;\r\n  const check = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\r\n  if (check.test(str)) return true;\r\n  return false;\r\n};\r\n\r\ninterface result {\r\n  error: string | null;\r\n  ok: boolean | null;\r\n  [data: string]: any;\r\n}\r\n\r\nconst onCompletedMessage = (\r\n  result: result,\r\n  resultOK: string,\r\n  resultFale: string | undefined\r\n) => {\r\n  if (!result) {\r\n    return;\r\n  }\r\n  const haveKr = isIncludeKr(result.error);\r\n  if (result.ok) {\r\n    toast.success(resultOK);\r\n    // 한글이 있다면 에러 메세지는 백엔드에서 온것\r\n  } else if (haveKr) {\r\n    toast.warn(result.error);\r\n    // 한글이 없다면 에러 메세지는 프론트에서 기입한것\r\n  } else {\r\n    console.error(`Error From BackEnd Message  : ${result.error}`);\r\n    resultFale && toast.warn(resultFale);\r\n    resultFale || toast.warn(result.error);\r\n  }\r\n};\r\n\r\nexport default onCompletedMessage;\r\n"]},"metadata":{},"sourceType":"module"}