{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\searchInput\\\\list.tsx\";\n\n/* eslint-disable react/no-array-index-key */\nimport React, { Fragment } from \"react\";\nimport classNames from \"classnames\";\nimport { isEmpty } from \"../../utils/utils\";\n\nvar List = function List(_ref) {\n  var dataList = _ref.dataList,\n      refContainer = _ref.refContainer,\n      onListClick = _ref.onListClick,\n      onListKeyPress = _ref.onListKeyPress,\n      currentValue = _ref.currentValue,\n      setIsMatched = _ref.setIsMatched,\n      alwaysListShow = _ref.alwaysListShow;\n  return !isEmpty(dataList) ? React.createElement(\"ul\", {\n    ref: refContainer,\n    className: \"JDsearchInput__ul \".concat(alwaysListShow && \"JDsearchInput__ul--show\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, setIsMatched && setIsMatched(false), dataList.map(function (data, index) {\n    // 현재값이 데이터 와 일치되는것이 있다면\n    if (currentValue === data.name) {\n      setIsMatched && setIsMatched(true);\n    }\n\n    var classes = classNames({\n      JDsearchInput__li: true,\n      \"JDsearchInput__li--selected\": index === 0,\n      \"JDsearchInput__li--correspond\": currentValue === data.name,\n      \"JDsearchInput__li--unDetail\": !data.detail\n    });\n    return (// eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"li\", {\n        role: \"menuitem\",\n        onKeyPress: onListKeyPress,\n        onClick: onListClick,\n        className: classes,\n        key: \"list\".concat(data.id),\n        value: data.name,\n        id: \"\".concat(data.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, data.name, data.detail && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"JDsearchInput__detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, data.detail))))\n    );\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  });\n};\n\nexport default List;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/searchInput/list.tsx"],"names":["React","Fragment","classNames","isEmpty","List","dataList","refContainer","onListClick","onListKeyPress","currentValue","setIsMatched","alwaysListShow","map","data","index","name","classes","JDsearchInput__li","detail","id"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;;AAYA,IAAMC,IAAsB,GAAG,SAAzBA,IAAyB;AAAA,MAC7BC,QAD6B,QAC7BA,QAD6B;AAAA,MAE7BC,YAF6B,QAE7BA,YAF6B;AAAA,MAG7BC,WAH6B,QAG7BA,WAH6B;AAAA,MAI7BC,cAJ6B,QAI7BA,cAJ6B;AAAA,MAK7BC,YAL6B,QAK7BA,YAL6B;AAAA,MAM7BC,YAN6B,QAM7BA,YAN6B;AAAA,MAO7BC,cAP6B,QAO7BA,cAP6B;AAAA,SAS7B,CAACR,OAAO,CAACE,QAAD,CAAR,GACE;AACE,IAAA,GAAG,EAAEC,YADP;AAEE,IAAA,SAAS,8BAAuBK,cAAc,IAC5C,yBADO,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,YAAY,IAAIA,YAAY,CAAC,KAAD,CAL/B,EAMGL,QAAQ,CAACO,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7B;AACA,QAAIL,YAAY,KAAKI,IAAI,CAACE,IAA1B,EAAgC;AAC9BL,MAAAA,YAAY,IAAIA,YAAY,CAAC,IAAD,CAA5B;AACD;;AACD,QAAMM,OAAO,GAAGd,UAAU,CAAC;AACzBe,MAAAA,iBAAiB,EAAE,IADM;AAEzB,qCAA+BH,KAAK,KAAK,CAFhB;AAGzB,uCAAiCL,YAAY,KAAKI,IAAI,CAACE,IAH9B;AAIzB,qCAA+B,CAACF,IAAI,CAACK;AAJZ,KAAD,CAA1B;AAOA,WACE;AACA;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,UAAU,EAAEV,cAFd;AAGE,QAAA,OAAO,EAAED,WAHX;AAIE,QAAA,SAAS,EAAES,OAJb;AAKE,QAAA,GAAG,gBAASH,IAAI,CAACM,EAAd,CALL;AAME,QAAA,KAAK,EAAEN,IAAI,CAACE,IANd;AAOE,QAAA,EAAE,YAAKF,IAAI,CAACM,EAAV,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,IAAI,CAACE,IADR,EAEGF,IAAI,CAACK,MAAL,IACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCL,IAAI,CAACK,MAA9C,CAFF,CAHJ,CATF;AAFF;AAsBD,GAlCA,CANH,CADF,GA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArD2B;AAAA,CAA/B;;AAwDA,eAAed,IAAf","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React, {Fragment} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {isEmpty} from \"../../utils/utils\";\r\n\r\ninterface IProps {\r\n  dataList: Array<any>;\r\n  refContainer: React.MutableRefObject<null>;\r\n  onListKeyPress: any;\r\n  onListClick(e: React.MouseEvent<HTMLElement>): any;\r\n  setIsMatched?(foo?: boolean): any;\r\n  currentValue?: string;\r\n  alwaysListShow?: boolean;\r\n}\r\n\r\nconst List: React.FC<IProps> = ({\r\n  dataList,\r\n  refContainer,\r\n  onListClick,\r\n  onListKeyPress,\r\n  currentValue,\r\n  setIsMatched,\r\n  alwaysListShow\r\n}) =>\r\n  !isEmpty(dataList) ? (\r\n    <ul\r\n      ref={refContainer}\r\n      className={`JDsearchInput__ul ${alwaysListShow &&\r\n        \"JDsearchInput__ul--show\"}`}\r\n    >\r\n      {setIsMatched && setIsMatched(false)}\r\n      {dataList.map((data, index) => {\r\n        // 현재값이 데이터 와 일치되는것이 있다면\r\n        if (currentValue === data.name) {\r\n          setIsMatched && setIsMatched(true);\r\n        }\r\n        const classes = classNames({\r\n          JDsearchInput__li: true,\r\n          \"JDsearchInput__li--selected\": index === 0,\r\n          \"JDsearchInput__li--correspond\": currentValue === data.name,\r\n          \"JDsearchInput__li--unDetail\": !data.detail\r\n        });\r\n\r\n        return (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <li\r\n            role=\"menuitem\"\r\n            onKeyPress={onListKeyPress}\r\n            onClick={onListClick}\r\n            className={classes}\r\n            key={`list${data.id}`}\r\n            value={data.name}\r\n            id={`${data.id}`}\r\n          >\r\n            <span>\r\n              {data.name}\r\n              {data.detail && (\r\n                <Fragment>\r\n                  <br />\r\n                  <span className=\"JDsearchInput__detail\">{data.detail}</span>\r\n                </Fragment>\r\n              )}\r\n            </span>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  ) : (\r\n    <div />\r\n  );\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}