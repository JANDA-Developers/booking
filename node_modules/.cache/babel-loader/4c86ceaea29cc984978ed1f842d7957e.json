{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\button\\\\Button.tsx\";\n\n/* eslint-disable react/button-has-type */\nimport React, { Fragment } from \"react\";\nimport \"./Button.scss\";\nimport classNames from \"classnames\";\nimport ErrProtecter from \"../../utils/errProtect\";\nimport Icon from \"../icons/Icons\";\nimport Preloader from \"../preloader/Preloader\";\nimport { s4, colorClass } from \"../../utils/utils\";\nimport Tooltip from \"../tooltip/Tooltip\";\n\nvar Button = function Button(_ref) {\n  var disabled = _ref.disabled,\n      label = _ref.label,\n      icon = _ref.icon,\n      tooltip = _ref.tooltip,\n      onClick = _ref.onClick,\n      iconClasses = _ref.iconClasses,\n      dataTip = _ref.dataTip,\n      dataFor = _ref.dataFor,\n      flat = _ref.flat,\n      mode = _ref.mode,\n      float = _ref.float,\n      type = _ref.type,\n      color = _ref.color,\n      thema = _ref.thema,\n      redirect = _ref.redirect,\n      pulse = _ref.pulse,\n      blink = _ref.blink,\n      preloader = _ref.preloader,\n      className = _ref.className,\n      transparent = _ref.transparent,\n      size = _ref.size,\n      hrefOpen = _ref.hrefOpen,\n      toggle = _ref.toggle,\n      props = _objectWithoutProperties(_ref, [\"disabled\", \"label\", \"icon\", \"tooltip\", \"onClick\", \"iconClasses\", \"dataTip\", \"dataFor\", \"flat\", \"mode\", \"float\", \"type\", \"color\", \"thema\", \"redirect\", \"pulse\", \"blink\", \"preloader\", \"className\", \"transparent\", \"size\", \"hrefOpen\", \"toggle\"]);\n\n  var classes = classNames(\"JDbtn\", className, _objectSpread({\n    \"JDbtn--flat\": mode === \"flat\" || flat,\n    \"JDbtn--small\": size === \"small\",\n    \"JDbtn--large\": size === \"large\" || size === \"longLarge\",\n    \"JDbtn--long\": size === \"long\" || size === \"longLarge\",\n    \"JDbtn--border\": mode === \"border\",\n    \"JDbtn--left\": float === \"left\",\n    \"JDbtn--right\": float === \"right\",\n    \"JDbtn--text-white\": color === \"white\",\n    \"JDbtn--transparent\": transparent\n  }, colorClass(\"JDbtn\", thema), {\n    \"JDwaves-effect-dark\": mode === \"flat\" && thema === \"normal\",\n    \"JDbtn--pulse\": pulse,\n    \"JDbtn--toogleOn\": toggle === true,\n    \"JDbtn--toogle111Off\": toggle === false,\n    \"JDtext-blink\": blink\n  }));\n\n  var handleClickButton = function handleClickButton(event) {\n    hrefOpen && window.open(hrefOpen);\n\n    if (redirect) {\n      document.location.href = redirect;\n    }\n\n    onClick && onClick(event);\n  };\n\n  var handleKeyPress = function handleKeyPress() {};\n\n  var newId = s4();\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"button\", Object.assign({}, props, {\n    type: type,\n    disabled: disabled,\n    className: \"JDbtn JDwaves-effect \".concat(classes),\n    onClick: handleClickButton,\n    onKeyPress: handleKeyPress,\n    \"data-tip\": tooltip ? true : dataTip,\n    \"data-for\": tooltip ? \"btnTooltip\".concat(newId) : dataFor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"JDbtn__contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, preloader ? React.createElement(Preloader, {\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }) : label, !preloader && icon && React.createElement(\"i\", {\n    className: \"JDbtn__icon \".concat(iconClasses && iconClasses.join(\" \")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, icon && React.createElement(Icon, {\n    icon: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })))), tooltip && React.createElement(Tooltip, {\n    type: \"dark\",\n    effect: \"solid\",\n    id: \"btnTooltip\".concat(newId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, tooltip)));\n};\n\nButton.defaultProps = {\n  disabled: false,\n  label: \"\",\n  onClick: function onClick() {},\n  iconClasses: [\"\"],\n  dataTip: false,\n  dataFor: \"\",\n  pulse: false,\n  blink: false,\n  float: \"\",\n  color: \"\",\n  thema: \"normal\",\n  type: \"button\",\n  preloader: false\n};\nexport default ErrProtecter(Button);","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/button/Button.tsx"],"names":["React","Fragment","classNames","ErrProtecter","Icon","Preloader","s4","colorClass","Tooltip","Button","disabled","label","icon","tooltip","onClick","iconClasses","dataTip","dataFor","flat","mode","float","type","color","thema","redirect","pulse","blink","preloader","className","transparent","size","hrefOpen","toggle","props","classes","handleClickButton","event","window","open","document","location","href","handleKeyPress","newId","join","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/button-has-type */\r\nimport React, {Fragment} from \"react\";\r\nimport \"./Button.scss\";\r\nimport classNames from \"classnames\";\r\nimport ErrProtecter from \"../../utils/errProtect\";\r\nimport Icon, {IIcons} from \"../icons/Icons\";\r\nimport Preloader from \"../preloader/Preloader\";\r\nimport {s4, colorClass} from \"../../utils/utils\";\r\nimport Tooltip from \"../tooltip/Tooltip\";\r\nimport {JDColor} from \"../../types/enum\";\r\n\r\ninterface IProps extends React.HTMLAttributes<HTMLButtonElement> {\r\n  disabled?: boolean;\r\n  label?: string;\r\n  icon?: IIcons;\r\n  onClick?(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void;\r\n  iconClasses?: string[];\r\n  dataTip?: any;\r\n  dataFor?: any;\r\n  mode?: \"flat\" | \"normal\" | \"border\";\r\n  size?: \"small\" | \"large\" | \"long\" | \"longLarge\";\r\n  flat?: boolean;\r\n  float?: string;\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n  color?: string;\r\n  thema?: JDColor | null;\r\n  pulse?: boolean;\r\n  blink?: boolean;\r\n  toggle?: boolean;\r\n  preloader?: boolean;\r\n  transparent?: boolean;\r\n  className?: string;\r\n  hrefOpen?: string;\r\n  tooltip?: string;\r\n  redirect?: string;\r\n}\r\n\r\nconst Button: React.FC<IProps> = ({\r\n  disabled,\r\n  label,\r\n  icon,\r\n  tooltip,\r\n  onClick,\r\n  iconClasses,\r\n  dataTip,\r\n  dataFor,\r\n  flat,\r\n  mode,\r\n  float,\r\n  type,\r\n  color,\r\n  thema,\r\n  redirect,\r\n  pulse,\r\n  blink,\r\n  preloader,\r\n  className,\r\n  transparent,\r\n  size,\r\n  hrefOpen,\r\n  // 투글은 클래스만 바꾸어 줍니다.\r\n  toggle,\r\n  ...props\r\n}) => {\r\n  const classes = classNames(\"JDbtn\", className, {\r\n    \"JDbtn--flat\": mode === \"flat\" || flat,\r\n    \"JDbtn--small\": size === \"small\",\r\n    \"JDbtn--large\": size === \"large\" || size === \"longLarge\",\r\n    \"JDbtn--long\": size === \"long\" || size === \"longLarge\",\r\n    \"JDbtn--border\": mode === \"border\",\r\n    \"JDbtn--left\": float === \"left\",\r\n    \"JDbtn--right\": float === \"right\",\r\n    \"JDbtn--text-white\": color === \"white\",\r\n    \"JDbtn--transparent\": transparent,\r\n    ...colorClass(\"JDbtn\", thema),\r\n    \"JDwaves-effect-dark\": mode === \"flat\" && thema === \"normal\",\r\n    \"JDbtn--pulse\": pulse,\r\n    \"JDbtn--toogleOn\": toggle === true,\r\n    \"JDbtn--toogle111Off\": toggle === false,\r\n    \"JDtext-blink\": blink\r\n  });\r\n\r\n  const handleClickButton = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    hrefOpen && window.open(hrefOpen);\r\n    if (redirect) {\r\n      document.location.href = redirect;\r\n    }\r\n    onClick && onClick(event);\r\n  };\r\n\r\n  const handleKeyPress = () => {};\r\n\r\n  const newId = s4();\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        {...props}\r\n        type={type}\r\n        disabled={disabled}\r\n        className={`JDbtn JDwaves-effect ${classes}`}\r\n        onClick={handleClickButton}\r\n        onKeyPress={handleKeyPress}\r\n        data-tip={tooltip ? true : dataTip}\r\n        data-for={tooltip ? `btnTooltip${newId}` : dataFor}\r\n      >\r\n        <span className=\"JDbtn__contents\">\r\n          {preloader ? <Preloader loading={true} /> : label}\r\n          {!preloader && icon && (\r\n            <i\r\n              className={`JDbtn__icon ${iconClasses && iconClasses.join(\" \")}`}\r\n            >\r\n              {icon && <Icon icon={icon} />}\r\n            </i>\r\n          )}\r\n        </span>\r\n      </button>\r\n      {tooltip && (\r\n        <Tooltip type=\"dark\" effect=\"solid\" id={`btnTooltip${newId}`}>\r\n          <span>{tooltip}</span>\r\n        </Tooltip>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  disabled: false,\r\n  label: \"\",\r\n  onClick: () => {},\r\n  iconClasses: [\"\"],\r\n  dataTip: false,\r\n  dataFor: \"\",\r\n  pulse: false,\r\n  blink: false,\r\n  float: \"\",\r\n  color: \"\",\r\n  thema: \"normal\",\r\n  type: \"button\",\r\n  preloader: false\r\n};\r\n\r\nexport default ErrProtecter(Button);\r\n"]},"metadata":{},"sourceType":"module"}