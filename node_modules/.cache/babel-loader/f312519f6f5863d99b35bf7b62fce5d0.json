{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\createHouse\\\\CreateHouse.tsx\";\nimport { toast } from \"react-toastify\";\n/* eslint-disable max-len */\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport { reverseGeoCode, geoCode } from \"./mapHelper\";\nimport { useInput, useSelect, useFetch, useDebounce, LANG } from \"../../../hooks/hook\";\nimport { SELECT_HOUSE } from \"../../../clientQueries\";\nimport { CREATE_HOUSE, GET_USER_INFO } from \"../../../queries\";\nimport { ADDRESS_API_KEY } from \"../../../keys\";\nimport utils, { ErrProtecter } from \"../../../utils/utils\";\nimport GoogleMap from \"./components/googleMap\";\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\nimport SelectBox from \"../../../atoms/forms/selectBox/SelectBox\";\nimport Button from \"../../../atoms/button/Button\";\nimport SearchInput from \"../../../atoms/searchInput/SearchInput\";\nimport \"./CreateHouse.scss\";\nimport Preloader from \"../../../atoms/preloader/Preloader\";\nimport { getOperationName } from \"apollo-link\";\nimport { FLOATING_PRELOADER_SIZE } from \"../../../types/enum\";\nimport PreloaderModal from \"../../../atoms/preloaderModal/PreloaderModal\";\nimport { Redirect } from \"react-router\";\nvar map = null;\n\nvar SelectHouseMu =\n/*#__PURE__*/\nfunction (_Mutation) {\n  _inherits(SelectHouseMu, _Mutation);\n\n  function SelectHouseMu() {\n    _classCallCheck(this, SelectHouseMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SelectHouseMu).apply(this, arguments));\n  }\n\n  return SelectHouseMu;\n}(Mutation);\n\nvar CreateHouseMu =\n/*#__PURE__*/\nfunction (_Mutation2) {\n  _inherits(CreateHouseMu, _Mutation2);\n\n  function CreateHouseMu() {\n    _classCallCheck(this, CreateHouseMu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CreateHouseMu).apply(this, arguments));\n  }\n\n  return CreateHouseMu;\n}(Mutation); // eslint-disable-next-line react/prop-types\n\n\nvar CreateHouse = function CreateHouse(_ref) {\n  var context = _ref.context,\n      google = _ref.google;\n  var history = context.history;\n  var houseNameHoook = useInput(\"\");\n  var deatailaddressHook = useInput(\"\");\n  var typeSelectHook = useSelect(null);\n\n  var _useState = useState({\n    address: \"\",\n    lat: 0,\n    lng: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var debouncedAdress = useDebounce(location.address, 500);\n  var addressGeturl = \"http://www.juso.go.kr/addrlink/addrLinkApi.do?currentPage=1&resultType=json&countPerPage=100&keyword=\".concat(debouncedAdress, \"&confmKey=\").concat(ADDRESS_API_KEY);\n\n  var _useFetch = useFetch(addressGeturl),\n      _useFetch2 = _slicedToArray(_useFetch, 4),\n      adressData = _useFetch2[0],\n      adressLoading = _useFetch2[1],\n      getAdressError = _useFetch2[2],\n      adressGet = _useFetch2[3];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      redirect = _useState4[0],\n      setRedirect = _useState4[1];\n\n  var mapRef = useRef(null);\n  if (getAdressError) console.error(getAdressError); // 제출전 입력값이 정확한지 검사\n\n  var submitValidation = function submitValidation() {\n    if (adressLoading) {\n      return false;\n    }\n\n    if (houseNameHoook.isValid === \"\") {\n      toast.warn(LANG(\"please_enter_the_name_of_the_house\"));\n      return false;\n    }\n\n    if (houseNameHoook.isValid === false) {\n      toast.warn(LANG(\"the_max_count_of_houseName_is_20\"));\n      return false;\n    }\n\n    if (typeSelectHook.selectedOption === null) {\n      toast.warn(LANG(\"please_select_the_accommodation_type\"));\n      return false;\n    }\n\n    if (location.address === \"\") {\n      toast.warn(LANG(\"please_search_house_location\"));\n      return false;\n    }\n\n    return true;\n  }; // 선택가능한 숙소타입 목록\n\n\n  var selectTypeHouse = [{\n    value: \"GUEST_HOUSE\",\n    label: LANG(\"guestHouse\")\n  }, {\n    value: \"HOTEL\",\n    label: LANG(\"hotel\")\n  }, {\n    value: \"MOTEL\",\n    label: LANG(\"motel\")\n  }, {\n    value: \"PENSION\",\n    label: LANG(\"pension\")\n  }, {\n    value: \"HOSTEL\",\n    label: LANG(\"hostel\")\n  }, {\n    value: \"YOUTH_HOSTEL\",\n    label: LANG(\"youth_hostel\")\n  }]; // 지도 드래그가 끝날때 좌표값을 받아서 저장함\n\n  var handleDragEnd =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var newCenter, lat, lng, reversedAddress;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (map) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              newCenter = map.getCenter();\n              lat = newCenter.lat();\n              lng = newCenter.lng();\n              _context.next = 7;\n              return reverseGeoCode(lat, lng);\n\n            case 7:\n              reversedAddress = _context.sent;\n              if (reversedAddress !== false) setLocation({\n                address: reversedAddress,\n                lat: lat,\n                lng: lng\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDragEnd() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // Map Config 그리고 생성\n\n\n  var loadMap = function loadMap(lat, lng) {\n    var maps = google.maps;\n    var mapNode = mapRef.current;\n    var mapConfig = {\n      center: {\n        lat: lat,\n        lng: lng\n      },\n      disableDefaultUI: true,\n      minZoom: 8,\n      zoom: 15,\n      zoomControl: true\n    };\n    map = new maps.Map(mapNode, mapConfig);\n    map.addListener(\"dragend\", handleDragEnd);\n  }; // 구글맵 네비 현재위치 조회 성공시\n\n\n  var handleGeoSucces = function handleGeoSucces(positon) {\n    var _positon$coords = positon.coords,\n        latitude = _positon$coords.latitude,\n        longitude = _positon$coords.longitude;\n    loadMap(latitude, longitude);\n  }; // 인풋서치 이후에 구글맵 위치를 변환\n\n\n  var changeMapBySearch =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(value) {\n      var result, lat, lng;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (value) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              _context2.next = 4;\n              return geoCode(value);\n\n            case 4:\n              result = _context2.sent;\n\n              if (!(!map || !value)) {\n                _context2.next = 7;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              if (result !== false) {\n                lat = result.lat, lng = result.lng;\n                setLocation({\n                  address: value,\n                  lat: lat,\n                  lng: lng\n                });\n                map.panTo({\n                  lat: lat,\n                  lng: lng\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function changeMapBySearch(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // 서치인풋에 값이 제출될때마다.\n\n\n  var handleOnFind = function handleOnFind(value) {\n    changeMapBySearch(value);\n  }; // 서치인풋에 값을 입력할때마다.\n\n\n  var onTypeChange = function onTypeChange(value) {\n    setLocation(_objectSpread({}, location, {\n      address: value || \"\"\n    }));\n  }; // 도로명주소 가져오기\n\n\n  var handleGeoError = function handleGeoError(error) {\n    console.error(error);\n  }; // 도로명주소 가져오기\n\n\n  useEffect(function () {\n    adressGet(addressGeturl);\n  }, [addressGeturl]); // 구글맵 첫 생성 (현재위치)\n\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(location) {\n        var _location$coords, lat, lng, address;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                handleGeoSucces(location);\n                _location$coords = location.coords, lat = _location$coords.latitude, lng = _location$coords.longitude;\n\n                if (map) {\n                  map.panTo({\n                    lat: lat || 35.1484595,\n                    lng: lng || 129.0632157\n                  });\n                }\n\n                _context3.next = 5;\n                return reverseGeoCode(lat, lng);\n\n              case 5:\n                address = _context3.sent;\n                setLocation({\n                  lat: lat,\n                  lng: lng,\n                  address: address\n                });\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }(), function (prop) {\n      handleGeoError(prop);\n    });\n  }, []);\n\n  if (redirect) {\n    return React.createElement(Redirect, {\n      to: redirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    id: \"createHomePage\",\n    className: \"container container--sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"docs-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(SelectHouseMu, {\n    mutation: SELECT_HOUSE,\n    refetchQueries: [getOperationName(GET_USER_INFO)],\n    awaitRefetchQueries: true,\n    onCompleted: function onCompleted() {\n      setRedirect(\"dashboard\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, function (selectHouseMutation) {\n    return (// Mutation : 숙소생성\n      React.createElement(CreateHouseMu, {\n        mutation: CREATE_HOUSE,\n        variables: {\n          name: houseNameHoook.value,\n          houseType: typeSelectHook.selectedOption ? typeSelectHook.selectedOption.value : \"GUEST_HOUSE\",\n          location: {\n            address: location.address,\n            addressDetail: deatailaddressHook.value,\n            lat: location.lat,\n            lng: location.lng\n          }\n        },\n        refetchQueries: [{\n          query: GET_USER_INFO\n        }],\n        awaitRefetchQueries: true,\n        onCompleted: function onCompleted(_ref5) {\n          var CreateHouse = _ref5.CreateHouse;\n\n          if (CreateHouse.ok && CreateHouse.house) {\n            toast.success(LANG(\"create_house_completed\"));\n            var variables = {\n              value: CreateHouse.house._id,\n              label: CreateHouse.house.name\n            };\n            selectHouseMutation({\n              variables: {\n                selectedHouse: variables\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, function (createHouseMutation, _ref6) {\n        var createHouseMuLoading = _ref6.loading;\n\n        // 숙소생성 서브밋\n        var createHouseSubmit = function createHouseSubmit(e) {\n          if (createHouseMuLoading) return;\n          e.preventDefault();\n          if (submitValidation()) createHouseMutation();\n        };\n\n        return React.createElement(\"form\", {\n          onSubmit: createHouseSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(PreloaderModal, {\n          loading: createHouseMuLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, LANG(\"create_house\")), React.createElement(\"div\", {\n          className: \"flex-grid docs-section__box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"flex-grid__col col--full-12 col--md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, React.createElement(InputText, Object.assign({}, houseNameHoook, {\n          validation: utils.isMaxOver,\n          max: 20,\n          label: LANG(\"houseName\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"flex-grid__col col--full-12 col--md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, React.createElement(SelectBox, Object.assign({}, typeSelectHook, {\n          options: selectTypeHouse,\n          isOpen: true,\n          label: LANG(\"select_house_type\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"flex-grid__col col--full-8 col--md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(SearchInput, {\n          maxCount: 10,\n          filter: false,\n          feedBackMessage: adressData.results ? adressData.results.common.errorMessage : \"\",\n          dataList: adressData.results && adressData.results.juso,\n          label: LANG(\"house_adress\"),\n          asId: \"bdMgtSn\",\n          asName: \"roadAddr\",\n          asDetail: \"jibunAddr\",\n          isLoading: adressLoading,\n          onFindOne: handleOnFind,\n          onTypeChange: onTypeChange,\n          onTypeValue: location.address,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"flex-grid__col col--full-4 col--md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, React.createElement(InputText, Object.assign({}, deatailaddressHook, {\n          validation: utils.isMaxOver,\n          max: 50,\n          label: LANG(\"detail_adress\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"createHomePage__map flex-grid__col col--full-12 col--md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(GoogleMap, {\n          mapRef: mapRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        })), React.createElement(Button, {\n          type: \"submit\",\n          thema: \"primary\",\n          label: LANG(\"create_house_completed\"),\n          mode: \"normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        })));\n      })\n    );\n  })));\n};\n\nexport default ErrProtecter( // @ts-ignore\nGoogleApiWrapper({\n  apiKey: \"AIzaSyCLG8qPORYv6HJIDSgXpLqYDDzIKgSs6FY\",\n  LoadingContainer: function LoadingContainer() {\n    return React.createElement(\"div\", {\n      style: {\n        height: \"85vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Preloader, {\n      floating: true,\n      size: FLOATING_PRELOADER_SIZE,\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }));\n  }\n})(CreateHouse));","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/createHouse/CreateHouse.tsx"],"names":["toast","React","useState","useEffect","useRef","Mutation","GoogleApiWrapper","reverseGeoCode","geoCode","useInput","useSelect","useFetch","useDebounce","LANG","SELECT_HOUSE","CREATE_HOUSE","GET_USER_INFO","ADDRESS_API_KEY","utils","ErrProtecter","GoogleMap","InputText","SelectBox","Button","SearchInput","Preloader","getOperationName","FLOATING_PRELOADER_SIZE","PreloaderModal","Redirect","map","SelectHouseMu","CreateHouseMu","CreateHouse","context","google","history","houseNameHoook","deatailaddressHook","typeSelectHook","address","lat","lng","location","setLocation","debouncedAdress","addressGeturl","adressData","adressLoading","getAdressError","adressGet","redirect","setRedirect","mapRef","console","error","submitValidation","isValid","warn","selectedOption","selectTypeHouse","value","label","handleDragEnd","newCenter","getCenter","reversedAddress","loadMap","maps","mapNode","current","mapConfig","center","disableDefaultUI","minZoom","zoom","zoomControl","Map","addListener","handleGeoSucces","positon","coords","latitude","longitude","changeMapBySearch","result","panTo","handleOnFind","onTypeChange","handleGeoError","navigator","geolocation","getCurrentPosition","prop","selectHouseMutation","name","houseType","addressDetail","query","ok","house","success","variables","_id","selectedHouse","createHouseMutation","createHouseMuLoading","loading","createHouseSubmit","e","preventDefault","isMaxOver","results","common","errorMessage","juso","apiKey","LoadingContainer","height"],"mappings":"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","sourcesContent":["import {toast} from \"react-toastify\";\r\n/* eslint-disable max-len */\r\nimport React, {useState, useEffect, useRef} from \"react\";\r\nimport {Mutation} from \"react-apollo\";\r\nimport {GoogleApiWrapper, ProvidedProps} from \"google-maps-react\";\r\nimport {reverseGeoCode, geoCode} from \"./mapHelper\";\r\nimport {\r\n  useInput,\r\n  useSelect,\r\n  useFetch,\r\n  useDebounce,\r\n  LANG\r\n} from \"../../../hooks/hook\";\r\nimport {SELECT_HOUSE} from \"../../../clientQueries\";\r\nimport {CREATE_HOUSE, GET_USER_INFO} from \"../../../queries\";\r\nimport {ADDRESS_API_KEY} from \"../../../keys\";\r\nimport utils, {ErrProtecter} from \"../../../utils/utils\";\r\nimport GoogleMap from \"./components/googleMap\";\r\nimport InputText from \"../../../atoms/forms/inputText/InputText\";\r\nimport SelectBox from \"../../../atoms/forms/selectBox/SelectBox\";\r\nimport Button from \"../../../atoms/button/Button\";\r\nimport SearchInput from \"../../../atoms/searchInput/SearchInput\";\r\nimport \"./CreateHouse.scss\";\r\nimport {createHouse, createHouseVariables} from \"../../../types/api\";\r\nimport Preloader from \"../../../atoms/preloader/Preloader\";\r\nimport {getOperationName} from \"apollo-link\";\r\nimport {FLOATING_PRELOADER_SIZE} from \"../../../types/enum\";\r\nimport {IContext} from \"../../MiddleServerRouter\";\r\nimport PreloaderModal from \"../../../atoms/preloaderModal/PreloaderModal\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nlet map: google.maps.Map | null = null;\r\n\r\ninterface IProps extends ProvidedProps {\r\n  context: IContext;\r\n}\r\n\r\nclass SelectHouseMu extends Mutation<any, any> {}\r\n\r\nclass CreateHouseMu extends Mutation<createHouse, createHouseVariables> {}\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst CreateHouse: React.FC<IProps> = ({context, google}) => {\r\n  const {history} = context;\r\n  const houseNameHoook = useInput(\"\");\r\n  const deatailaddressHook = useInput(\"\");\r\n  const typeSelectHook = useSelect(null);\r\n  const [location, setLocation] = useState({address: \"\", lat: 0, lng: 0});\r\n  const debouncedAdress = useDebounce(location.address, 500);\r\n  const addressGeturl = `http://www.juso.go.kr/addrlink/addrLinkApi.do?currentPage=1&resultType=json&countPerPage=100&keyword=${debouncedAdress}&confmKey=${ADDRESS_API_KEY}`;\r\n  const [adressData, adressLoading, getAdressError, adressGet] = useFetch(\r\n    addressGeturl\r\n  );\r\n  const [redirect, setRedirect] = useState(\"\");\r\n  const mapRef = useRef(null);\r\n\r\n  if (getAdressError) console.error(getAdressError);\r\n\r\n  // 제출전 입력값이 정확한지 검사\r\n  const submitValidation = () => {\r\n    if (adressLoading) {\r\n      return false;\r\n    }\r\n\r\n    if (houseNameHoook.isValid === \"\") {\r\n      toast.warn(LANG(\"please_enter_the_name_of_the_house\"));\r\n      return false;\r\n    }\r\n\r\n    if (houseNameHoook.isValid === false) {\r\n      toast.warn(LANG(\"the_max_count_of_houseName_is_20\"));\r\n      return false;\r\n    }\r\n\r\n    if (typeSelectHook.selectedOption === null) {\r\n      toast.warn(LANG(\"please_select_the_accommodation_type\"));\r\n      return false;\r\n    }\r\n\r\n    if (location.address === \"\") {\r\n      toast.warn(LANG(\"please_search_house_location\"));\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  // 선택가능한 숙소타입 목록\r\n  const selectTypeHouse = [\r\n    {value: \"GUEST_HOUSE\", label: LANG(\"guestHouse\")},\r\n    {value: \"HOTEL\", label: LANG(\"hotel\")},\r\n    {value: \"MOTEL\", label: LANG(\"motel\")},\r\n    {value: \"PENSION\", label: LANG(\"pension\")},\r\n    {value: \"HOSTEL\", label: LANG(\"hostel\")},\r\n    {value: \"YOUTH_HOSTEL\", label: LANG(\"youth_hostel\")}\r\n  ];\r\n\r\n  // 지도 드래그가 끝날때 좌표값을 받아서 저장함\r\n  const handleDragEnd = async () => {\r\n    if (!map) return;\r\n    const newCenter = map.getCenter();\r\n    const lat = newCenter.lat();\r\n    const lng = newCenter.lng();\r\n    const reversedAddress = await reverseGeoCode(lat, lng);\r\n    if (reversedAddress !== false)\r\n      setLocation({address: reversedAddress, lat, lng});\r\n  };\r\n\r\n  // Map Config 그리고 생성\r\n  const loadMap = (lat: number, lng: number) => {\r\n    const {maps} = google;\r\n    const mapNode = mapRef.current;\r\n    const mapConfig = {\r\n      center: {\r\n        lat,\r\n        lng\r\n      },\r\n      disableDefaultUI: true,\r\n      minZoom: 8,\r\n      zoom: 15,\r\n      zoomControl: true\r\n    };\r\n    map = new maps.Map(mapNode, mapConfig);\r\n    map.addListener(\"dragend\", handleDragEnd);\r\n  };\r\n\r\n  // 구글맵 네비 현재위치 조회 성공시\r\n  const handleGeoSucces = (positon: Position) => {\r\n    const {\r\n      coords: {latitude, longitude}\r\n    } = positon;\r\n    loadMap(latitude, longitude);\r\n  };\r\n\r\n  // 인풋서치 이후에 구글맵 위치를 변환\r\n  const changeMapBySearch = async (value: string | null) => {\r\n    if (!value) return;\r\n    const result = await geoCode(value);\r\n    if (!map || !value) return;\r\n    if (result !== false) {\r\n      const {lat, lng} = result;\r\n      setLocation({\r\n        address: value,\r\n        lat,\r\n        lng\r\n      });\r\n      map.panTo({lat, lng});\r\n    }\r\n  };\r\n\r\n  // 서치인풋에 값이 제출될때마다.\r\n  const handleOnFind = (value: string | null) => {\r\n    changeMapBySearch(value);\r\n  };\r\n\r\n  // 서치인풋에 값을 입력할때마다.\r\n  const onTypeChange = (value?: string) => {\r\n    setLocation({\r\n      ...location,\r\n      address: value || \"\"\r\n    });\r\n  };\r\n\r\n  // 도로명주소 가져오기\r\n  const handleGeoError = (error: PositionError) => {\r\n    console.error(error);\r\n  };\r\n\r\n  // 도로명주소 가져오기\r\n  useEffect(() => {\r\n    adressGet(addressGeturl);\r\n  }, [addressGeturl]);\r\n\r\n  // 구글맵 첫 생성 (현재위치)\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      async location => {\r\n        handleGeoSucces(location);\r\n        const {\r\n          coords: {latitude: lat, longitude: lng}\r\n        } = location;\r\n        if (map) {\r\n          map.panTo({lat: lat || 35.1484595, lng: lng || 129.0632157});\r\n        }\r\n        const address = await reverseGeoCode(lat, lng);\r\n        setLocation({\r\n          lat,\r\n          lng,\r\n          address\r\n        });\r\n      },\r\n      prop => {\r\n        handleGeoError(prop);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  if (redirect) {\r\n    return <Redirect to={redirect} />;\r\n  }\r\n\r\n  return (\r\n    <div id=\"createHomePage\" className=\"container container--sm\">\r\n      <div className=\"docs-section\">\r\n        {/* 하우스 선택 */}\r\n        <SelectHouseMu\r\n          mutation={SELECT_HOUSE}\r\n          refetchQueries={[getOperationName(GET_USER_INFO)!]}\r\n          awaitRefetchQueries\r\n          onCompleted={() => {\r\n            setRedirect(\"dashboard\");\r\n          }}\r\n        >\r\n          {selectHouseMutation => (\r\n            // Mutation : 숙소생성\r\n            <CreateHouseMu\r\n              mutation={CREATE_HOUSE}\r\n              variables={{\r\n                name: houseNameHoook.value,\r\n                houseType: typeSelectHook.selectedOption\r\n                  ? typeSelectHook.selectedOption.value\r\n                  : \"GUEST_HOUSE\",\r\n                location: {\r\n                  address: location.address,\r\n                  addressDetail: deatailaddressHook.value,\r\n                  lat: location.lat,\r\n                  lng: location.lng\r\n                }\r\n              }}\r\n              refetchQueries={[{query: GET_USER_INFO}]}\r\n              awaitRefetchQueries\r\n              onCompleted={({CreateHouse}) => {\r\n                if (CreateHouse.ok && CreateHouse.house) {\r\n                  toast.success(LANG(\"create_house_completed\"));\r\n                  const variables = {\r\n                    value: CreateHouse.house._id,\r\n                    label: CreateHouse.house.name\r\n                  };\r\n                  selectHouseMutation({variables: {selectedHouse: variables}});\r\n                }\r\n              }}\r\n            >\r\n              {(createHouseMutation, {loading: createHouseMuLoading}) => {\r\n                // 숙소생성 서브밋\r\n                const createHouseSubmit = (\r\n                  e: React.FormEvent<HTMLFormElement>\r\n                ) => {\r\n                  if (createHouseMuLoading) return;\r\n                  e.preventDefault();\r\n                  if (submitValidation()) createHouseMutation();\r\n                };\r\n                return (\r\n                  <form onSubmit={createHouseSubmit}>\r\n                    <PreloaderModal loading={createHouseMuLoading} />\r\n                    <h3>{LANG(\"create_house\")}</h3>\r\n                    <div className=\"flex-grid docs-section__box\">\r\n                      {/* 숙소명 입력 */}\r\n                      <div className=\"flex-grid__col col--full-12 col--md-12\">\r\n                        <InputText\r\n                          {...houseNameHoook}\r\n                          validation={utils.isMaxOver}\r\n                          max={20}\r\n                          label={LANG(\"houseName\")}\r\n                        />\r\n                      </div>\r\n                      {/* 숙소 타입 선택 */}\r\n                      <div className=\"flex-grid__col col--full-12 col--md-12\">\r\n                        <SelectBox\r\n                          {...typeSelectHook}\r\n                          options={selectTypeHouse}\r\n                          isOpen\r\n                          label={LANG(\"select_house_type\")}\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex-grid__col col--full-8 col--md-12\">\r\n                        <SearchInput\r\n                          maxCount={10}\r\n                          filter={false}\r\n                          feedBackMessage={\r\n                            adressData.results\r\n                              ? adressData.results.common.errorMessage\r\n                              : \"\"\r\n                          }\r\n                          dataList={\r\n                            adressData.results && adressData.results.juso\r\n                          }\r\n                          label={LANG(\"house_adress\")}\r\n                          asId=\"bdMgtSn\"\r\n                          asName=\"roadAddr\"\r\n                          asDetail=\"jibunAddr\"\r\n                          isLoading={adressLoading}\r\n                          onFindOne={handleOnFind}\r\n                          onTypeChange={onTypeChange}\r\n                          onTypeValue={location.address}\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex-grid__col col--full-4 col--md-12\">\r\n                        <InputText\r\n                          {...deatailaddressHook}\r\n                          validation={utils.isMaxOver}\r\n                          max={50}\r\n                          label={LANG(\"detail_adress\")}\r\n                        />\r\n                      </div>\r\n                      <div className=\"createHomePage__map flex-grid__col col--full-12 col--md-12\">\r\n                        <GoogleMap mapRef={mapRef} />\r\n                      </div>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        thema=\"primary\"\r\n                        label={LANG(\"create_house_completed\")}\r\n                        mode=\"normal\"\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                );\r\n              }}\r\n            </CreateHouseMu>\r\n          )}\r\n        </SelectHouseMu>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrProtecter(\r\n  // @ts-ignore\r\n  GoogleApiWrapper({\r\n    apiKey: \"AIzaSyCLG8qPORYv6HJIDSgXpLqYDDzIKgSs6FY\",\r\n    LoadingContainer: () => (\r\n      <div style={{height: \"85vh\"}}>\r\n        <Preloader floating size={FLOATING_PRELOADER_SIZE} loading={true} />\r\n      </div>\r\n    )\r\n  })(CreateHouse)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}