{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport isEmpty from \"./isEmptyData\"; //  ðŸ”´ ë³´ë¥˜\n\nfunction pageNationFormater(data, queryName, falsyReturn) {\n  var getOrigin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (!isEmpty(data)) {\n    if (!isEmpty(data[queryName])) {\n      var upData = data[queryName];\n\n      if (upData.error) {\n        console.error(\"queryDataFormater: Error From BackEnd\");\n        console.error(upData.error);\n        toast.error(upData.error);\n        return falsyReturn;\n      }\n\n      var origin = null;\n\n      if (getOrigin) {\n        origin = upData.result.edges.map(function (edge) {\n          return edge.node;\n        });\n      }\n\n      var inData = upData.result.edges;\n      var _upData$result = upData.result,\n          pageInfo = _upData$result.pageInfo,\n          totalCount = _upData$result.totalCount;\n      var inPageInfo = {\n        pageInfo: pageInfo,\n        totalCount: totalCount\n      };\n      var result = {\n        origin: origin,\n        data: inData,\n        pageInfo: inPageInfo\n      };\n      return result;\n    }\n\n    console.info(\"pageNationFormater - 1\");\n    return falsyReturn;\n  }\n\n  console.info(\"pageNationFormater - 2\");\n  return falsyReturn;\n}\n\nexport default pageNationFormater;","map":{"version":3,"sources":["C:/Users/ê¹€ë¯¼ìž¬/Desktop/projects/jd-api-server-client/src/utils/paginationFormat.tsx"],"names":["toast","isEmpty","pageNationFormater","data","queryName","falsyReturn","getOrigin","upData","error","console","origin","result","edges","map","edge","node","inData","pageInfo","totalCount","inPageInfo","info"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,gBAApB;AAEA,OAAOC,OAAP,MAAoB,eAApB,C,CAEA;;AACA,SAASC,kBAAT,CACEC,IADF,EAEEC,SAFF,EAGEC,WAHF,EAKmB;AAAA,MADjBC,SACiB,uEADI,KACJ;;AACjB,MAAI,CAACL,OAAO,CAACE,IAAD,CAAZ,EAAoB;AAClB,QAAI,CAACF,OAAO,CAACE,IAAI,CAACC,SAAD,CAAL,CAAZ,EAA+B;AAC7B,UAAMG,MAAM,GAAGJ,IAAI,CAACC,SAAD,CAAnB;;AACA,UAAIG,MAAM,CAACC,KAAX,EAAkB;AAChBC,QAAAA,OAAO,CAACD,KAAR,CAAc,uCAAd;AACAC,QAAAA,OAAO,CAACD,KAAR,CAAcD,MAAM,CAACC,KAArB;AACAR,QAAAA,KAAK,CAACQ,KAAN,CAAYD,MAAM,CAACC,KAAnB;AACA,eAAOH,WAAP;AACD;;AAED,UAAIK,MAAW,GAAG,IAAlB;;AACA,UAAIJ,SAAJ,EAAe;AACbI,QAAAA,MAAM,GAAGH,MAAM,CAACI,MAAP,CAAcC,KAAd,CAAoBC,GAApB,CAAwB,UAACC,IAAD;AAAA,iBAAeA,IAAI,CAACC,IAApB;AAAA,SAAxB,CAAT;AACD;;AACD,UAAMC,MAAW,GAAGT,MAAM,CAACI,MAAP,CAAcC,KAAlC;AAb6B,2BAcEL,MAAM,CAACI,MAdT;AAAA,UActBM,QAdsB,kBActBA,QAdsB;AAAA,UAcZC,UAdY,kBAcZA,UAdY;AAe7B,UAAMC,UAAU,GAAG;AACjBF,QAAAA,QAAQ,EAARA,QADiB;AAEjBC,QAAAA,UAAU,EAAVA;AAFiB,OAAnB;AAIA,UAAMP,MAAmB,GAAG;AAC1BD,QAAAA,MAAM,EAANA,MAD0B;AAE1BP,QAAAA,IAAI,EAAEa,MAFoB;AAG1BC,QAAAA,QAAQ,EAAEE;AAHgB,OAA5B;AAKA,aAAOR,MAAP;AACD;;AACDF,IAAAA,OAAO,CAACW,IAAR,CAAa,wBAAb;AACA,WAAOf,WAAP;AACD;;AACDI,EAAAA,OAAO,CAACW,IAAR,CAAa,wBAAb;AACA,SAAOf,WAAP;AACD;;AACD,eAAeH,kBAAf","sourcesContent":["import {toast} from \"react-toastify\";\r\nimport {IPageResult} from \"../types/interface\";\r\nimport isEmpty from \"./isEmptyData\";\r\n\r\n//  ðŸ”´ ë³´ë¥˜\r\nfunction pageNationFormater<T>(\r\n  data: any,\r\n  queryName: string,\r\n  falsyReturn: T,\r\n  getOrigin: boolean = false\r\n): IPageResult | T {\r\n  if (!isEmpty(data)) {\r\n    if (!isEmpty(data[queryName])) {\r\n      const upData = data[queryName];\r\n      if (upData.error) {\r\n        console.error(\"queryDataFormater: Error From BackEnd\");\r\n        console.error(upData.error);\r\n        toast.error(upData.error);\r\n        return falsyReturn;\r\n      }\r\n\r\n      let origin: any = null;\r\n      if (getOrigin) {\r\n        origin = upData.result.edges.map((edge: any) => edge.node);\r\n      }\r\n      const inData: any = upData.result.edges;\r\n      const {pageInfo, totalCount} = upData.result;\r\n      const inPageInfo = {\r\n        pageInfo,\r\n        totalCount\r\n      };\r\n      const result: IPageResult = {\r\n        origin,\r\n        data: inData,\r\n        pageInfo: inPageInfo\r\n      };\r\n      return result;\r\n    }\r\n    console.info(\"pageNationFormater - 1\");\r\n    return falsyReturn;\r\n  }\r\n  console.info(\"pageNationFormater - 2\");\r\n  return falsyReturn;\r\n}\r\nexport default pageNationFormater;\r\n"]},"metadata":{},"sourceType":"module"}