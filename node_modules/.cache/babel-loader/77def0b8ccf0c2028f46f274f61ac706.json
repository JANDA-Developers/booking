{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\bookingHost\\\\product\\\\components\\\\applyProductModal.tsx\";\nimport React, { useState } from \"react\";\nimport Modal from \"../../../../atoms/modal/Modal\";\nimport { LANG } from \"../../../../hooks/hook\";\nimport Button from \"../../../../atoms/button/Button\";\nimport Radio from \"../../../../atoms/forms/radio/Radio\";\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\nimport LayoutCards from \"./layoutCard/LayoutCards\";\nimport { LayoutType, ProductTypeKey } from \"../../../../types/enum\";\nimport { isUrl } from \"../../../../utils/inputValidations\";\n\n// ❕ 어차피 버튼 눌러서 수정할거니까 전부 STATE 에 하면됨\nvar ApplyProductModal = function ApplyProductModal(_ref) {\n  var houseId = _ref.houseId,\n      modalHook = _ref.modalHook,\n      buyProductMu = _ref.buyProductMu;\n  if (!modalHook.isOpen) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n  var productType = modalHook.info.productType;\n  var isSelectExMode = productType.key === ProductTypeKey.DEMO;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState({\n    useLayout: false,\n    url: \"\",\n    layoutType: LayoutType.Layout_A\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      appInfoValue = _useState4[0],\n      setAppInfoValue = _useState4[1];\n\n  var layoutType = appInfoValue.layoutType,\n      url = appInfoValue.url,\n      useLayout = appInfoValue.useLayout;\n\n  var handleUseLayoutRadio = function handleUseLayoutRadio(value) {\n    setAppInfoValue(_objectSpread({}, appInfoValue, {\n      useLayout: value\n    }));\n  };\n\n  var validation = function validation() {\n    return true;\n  };\n\n  return React.createElement(Modal, Object.assign({\n    className: \"applyProductModal\"\n  }, modalHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), step === 1 && React.createElement(\"div\", {\n    className: \"JDmodal__endSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, productType.name), React.createElement(\"div\", {\n    className: \"modal__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, productType.detailDesc), React.createElement(Button, {\n    thema: \"point\",\n    label: LANG(\"apply_this_product_to_house\"),\n    onClick: function onClick() {\n      setStep(2);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), step === 2 && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, isSelectExMode ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, LANG(\"JANDA_provide_free_homepage_for_guest\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), LANG(\"check_our_samples\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, LANG(\"JANDA_provide_free_homepage_for_guest\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), LANG(\"do_you_want_request_making_homepage\"))), React.createElement(\"div\", {\n    className: \"modal__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    selectedValue: useLayout,\n    onChange: handleUseLayoutRadio,\n    value: true,\n    label: LANG(\"yes\"),\n    id: \"HR1--1\",\n    groupName: \"HompageRadio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Radio, {\n    selectedValue: useLayout,\n    onChange: handleUseLayoutRadio,\n    value: false,\n    label: LANG(\"will_only_use_the_reservation_system\"),\n    id: \"HR1--2\",\n    groupName: \"HompageRadio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), step === 3 && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, LANG(\"select_layout\")), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"applyProductModal__cardsWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(LayoutCards, {\n    selectedLayout: layoutType,\n    setLayout: function setLayout(value) {\n      setAppInfoValue(_objectSpread({}, appInfoValue, {\n        layoutType: value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }))), isSelectExMode || React.createElement(InputText, {\n    placeholder: \"http://\",\n    validation: isUrl,\n    label: LANG(\"request_url\"),\n    value: url,\n    onChange: function onChange(value) {\n      setAppInfoValue(_objectSpread({}, appInfoValue, {\n        url: value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))), step > 1 && React.createElement(\"div\", {\n    className: \"JDmodal__endSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Button, {\n    thema: \"primary\",\n    label: LANG(\"Apply\"),\n    onClick: function onClick() {\n      if (useLayout && step === 2) setStep(3);else if (validation()) {\n        buyProductMu({\n          variables: {\n            houseId: houseId,\n            productTypeId: productType._id,\n            appInfoRequest: {\n              layoutType: appInfoValue.layoutType,\n              url: appInfoValue.url,\n              useHostApp: appInfoValue.useLayout\n            }\n          }\n        });\n        modalHook.closeModal();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })));\n};\n\nexport default ApplyProductModal;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/bookingHost/product/components/applyProductModal.tsx"],"names":["React","useState","Modal","LANG","Button","Radio","InputText","LayoutCards","LayoutType","ProductTypeKey","isUrl","ApplyProductModal","houseId","modalHook","buyProductMu","isOpen","productType","info","isSelectExMode","key","DEMO","step","setStep","useLayout","url","layoutType","Layout_A","appInfoValue","setAppInfoValue","handleUseLayoutRadio","value","validation","name","detailDesc","variables","productTypeId","_id","appInfoRequest","useHostApp","closeModal"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from \"react\";\r\nimport {toast} from \"react-toastify\";\r\nimport Modal from \"../../../../atoms/modal/Modal\";\r\nimport {\r\n  IUseModal,\r\n  useSwitch,\r\n  useRadio,\r\n  useInput,\r\n  LANG\r\n} from \"../../../../hooks/hook\";\r\nimport Button from \"../../../../atoms/button/Button\";\r\nimport Radio from \"../../../../atoms/forms/radio/Radio\";\r\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\r\nimport LayoutCards from \"./layoutCard/LayoutCards\";\r\nimport JDLabel from \"../../../../atoms/label/JDLabel\";\r\nimport {IAdditionHook} from \"../SelectProductWrap\";\r\nimport {LayoutType, ProductTypeKey} from \"../../../../types/enum\";\r\nimport {isUrl} from \"../../../../utils/inputValidations\";\r\nimport {\r\n  getAllProductTypes_GetAllProductTypes_productTypes,\r\n  buyProduct,\r\n  buyProductVariables\r\n} from \"../../../../types/api\";\r\nimport {MutationFn} from \"react-apollo\";\r\nimport {IProductTypeDesc} from \"../../../../types/interface\";\r\n\r\nexport interface applyProductModalInfo {\r\n  productType: IProductTypeDesc;\r\n}\r\n\r\ninterface IProps {\r\n  buyProductMu: MutationFn<buyProduct, buyProductVariables>;\r\n  modalHook: IUseModal<applyProductModalInfo>;\r\n  houseId: string;\r\n}\r\n\r\n// ❕ 어차피 버튼 눌러서 수정할거니까 전부 STATE 에 하면됨\r\nconst ApplyProductModal: React.FC<IProps> = ({\r\n  houseId,\r\n  modalHook,\r\n  buyProductMu\r\n}) => {\r\n  if (!modalHook.isOpen) return <div />;\r\n\r\n  const {productType} = modalHook.info;\r\n  const isSelectExMode = productType.key === ProductTypeKey.DEMO;\r\n\r\n  const [step, setStep] = useState(1);\r\n  const [appInfoValue, setAppInfoValue] = useState({\r\n    useLayout: false,\r\n    url: \"\",\r\n    layoutType: LayoutType.Layout_A\r\n  });\r\n\r\n  const {layoutType, url, useLayout} = appInfoValue;\r\n  const handleUseLayoutRadio = (value: boolean) => {\r\n    setAppInfoValue({...appInfoValue, useLayout: value});\r\n  };\r\n\r\n  const validation = () => {\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <Modal className=\"applyProductModal\" {...modalHook}>\r\n      {step === 1 && (\r\n        <div className=\"JDmodal__endSection\">\r\n          <h3>{productType.name}</h3>\r\n          <div className=\"modal__section\">{productType.detailDesc}</div>\r\n          <Button\r\n            thema=\"point\"\r\n            label={LANG(\"apply_this_product_to_house\")}\r\n            onClick={() => {\r\n              setStep(2);\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n      {step === 2 && (\r\n        <div>\r\n          <div className=\"modal__section\">\r\n            {isSelectExMode ? (\r\n              <div>\r\n                {LANG(\"JANDA_provide_free_homepage_for_guest\")} <br />\r\n                {LANG(\"check_our_samples\")}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {LANG(\"JANDA_provide_free_homepage_for_guest\")} <br />\r\n                {LANG(\"do_you_want_request_making_homepage\")}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"modal__section\">\r\n            <Radio\r\n              selectedValue={useLayout}\r\n              onChange={handleUseLayoutRadio}\r\n              value={true}\r\n              label={LANG(\"yes\")}\r\n              id=\"HR1--1\"\r\n              groupName=\"HompageRadio\"\r\n            />\r\n            <Radio\r\n              selectedValue={useLayout}\r\n              onChange={handleUseLayoutRadio}\r\n              value={false}\r\n              label={LANG(\"will_only_use_the_reservation_system\")}\r\n              id=\"HR1--2\"\r\n              groupName=\"HompageRadio\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {step === 3 && (\r\n        <div>\r\n          <div className=\"modal__section\">\r\n            <h5>{LANG(\"select_layout\")}</h5>\r\n            <div className=\"\">\r\n              <div className=\"applyProductModal__cardsWrap\">\r\n                <LayoutCards\r\n                  selectedLayout={layoutType}\r\n                  setLayout={(value: LayoutType) => {\r\n                    setAppInfoValue({...appInfoValue, layoutType: value});\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            {isSelectExMode || (\r\n              <InputText\r\n                placeholder=\"http://\"\r\n                validation={isUrl}\r\n                label={LANG(\"request_url\")}\r\n                value={url}\r\n                onChange={(value: string) => {\r\n                  setAppInfoValue({...appInfoValue, url: value});\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {step > 1 && (\r\n        <div className=\"JDmodal__endSection\">\r\n          <Button\r\n            thema=\"primary\"\r\n            label={LANG(\"Apply\")}\r\n            onClick={() => {\r\n              if (useLayout && step === 2) setStep(3);\r\n              else if (validation()) {\r\n                buyProductMu({\r\n                  variables: {\r\n                    houseId,\r\n                    productTypeId: productType._id,\r\n                    appInfoRequest: {\r\n                      layoutType: appInfoValue.layoutType,\r\n                      url: appInfoValue.url,\r\n                      useHostApp: appInfoValue.useLayout\r\n                    }\r\n                  }\r\n                });\r\n\r\n                modalHook.closeModal();\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApplyProductModal;\r\n"]},"metadata":{},"sourceType":"module"}