{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\badge\\\\Badge.tsx\";\nimport React from \"react\";\nimport \"./Badge.scss\";\nimport classnames from \"classnames\";\nimport { colorClass, s4 } from \"../../utils/utils\";\nimport JDToolTip from \"../tooltip/Tooltip\";\n\nvar JDbadge = function JDbadge(_ref) {\n  var className = _ref.className,\n      hover = _ref.hover,\n      tooltip = _ref.tooltip,\n      badgeSize = _ref.badgeSize,\n      thema = _ref.thema,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"className\", \"hover\", \"tooltip\", \"badgeSize\", \"thema\", \"children\"]);\n\n  var classNames = classnames(\"JDbadge\", className, _objectSpread({\n    \"JDbadge--tiny\": badgeSize === \"tiny\",\n    \"JDbadge--hover\": hover\n  }, colorClass(\"JDbadge\", thema)));\n  var newId = s4();\n  return React.createElement(\"span\", Object.assign({\n    \"data-tip\": tooltip ? true : undefined,\n    \"data-for\": tooltip ? \"badgeTooltip\".concat(newId) : undefined,\n    className: classNames\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), children, tooltip && React.createElement(JDToolTip, {\n    type: \"dark\",\n    effect: \"solid\",\n    id: \"badgeTooltip\".concat(newId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, tooltip)));\n};\n\nexport default JDbadge;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/badge/Badge.tsx"],"names":["React","classnames","colorClass","s4","JDToolTip","JDbadge","className","hover","tooltip","badgeSize","thema","children","props","classNames","newId","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAAQC,UAAR,EAAoBC,EAApB,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAWA,IAAMC,OAA4B,GAAG,SAA/BA,OAA+B,OAQ/B;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,UAAU,GAAGZ,UAAU,CAAC,SAAD,EAAYK,SAAZ;AAC3B,qBAAiBG,SAAS,KAAK,MADJ;AAE3B,sBAAkBF;AAFS,KAGxBL,UAAU,CAAC,SAAD,EAAYQ,KAAZ,CAHc,EAA7B;AAMA,MAAMI,KAAK,GAAGX,EAAE,EAAhB;AAEA,SACE;AACE,gBAAUK,OAAO,GAAG,IAAH,GAAUO,SAD7B;AAEE,gBAAUP,OAAO,yBAAkBM,KAAlB,IAA4BC,SAF/C;AAGE,IAAA,SAAS,EAAEF;AAHb,KAIMD,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGD,QANH,EAOGH,OAAO,IACN,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,MAAM,EAAC,OAA9B;AAAsC,IAAA,EAAE,wBAAiBM,KAAjB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,OAAP,CADF,CARJ,CADF;AAeD,CAhCD;;AAkCA,eAAeH,OAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Badge.scss\";\r\nimport classnames from \"classnames\";\r\nimport {JDColor} from \"../../types/enum\";\r\nimport {colorClass, s4} from \"../../utils/utils\";\r\nimport JDToolTip from \"../tooltip/Tooltip\";\r\n\r\nexport interface IJDbadge extends React.HTMLAttributes<HTMLSpanElement> {\r\n  badgeSize?: \"noraml\" | \"tiny\";\r\n  thema?: JDColor;\r\n  hover?: boolean;\r\n  className?: string;\r\n  children?: any;\r\n  tooltip?: string;\r\n}\r\n\r\nconst JDbadge: React.SFC<IJDbadge> = ({\r\n  className,\r\n  hover,\r\n  tooltip,\r\n  badgeSize,\r\n  thema,\r\n  children,\r\n  ...props\r\n}) => {\r\n  const classNames = classnames(\"JDbadge\", className, {\r\n    \"JDbadge--tiny\": badgeSize === \"tiny\",\r\n    \"JDbadge--hover\": hover,\r\n    ...colorClass(\"JDbadge\", thema)\r\n  });\r\n\r\n  const newId = s4();\r\n\r\n  return (\r\n    <span\r\n      data-tip={tooltip ? true : undefined}\r\n      data-for={tooltip ? `badgeTooltip${newId}` : undefined}\r\n      className={classNames}\r\n      {...props}\r\n    >\r\n      {children}\r\n      {tooltip && (\r\n        <JDToolTip type=\"dark\" effect=\"solid\" id={`badgeTooltip${newId}`}>\r\n          <span>{tooltip}</span>\r\n        </JDToolTip>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default JDbadge;\r\n"]},"metadata":{},"sourceType":"module"}