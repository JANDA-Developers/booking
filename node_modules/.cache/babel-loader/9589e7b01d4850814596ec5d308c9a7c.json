{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\imageUploader\\\\ImageUploader.tsx\";\n\n/* eslint-disable prop-types */\nimport React, { useRef, useEffect } from \"react\";\nimport \"./ImageUploader.scss\";\nimport classnames from \"classnames\";\nimport Preloader from \"../preloader/Preloader\";\nimport JDVideo from \"../video/Video\";\nimport $ from \"jquery\";\nimport { s4 } from \"../../utils/utils\";\nimport { DEFAULT_FILE } from \"../../types/defaults\";\n\nvar ImageUploader = function ImageUploader(_ref) {\n  var uploading = _ref.uploading,\n      file = _ref.file,\n      isError = _ref.isError,\n      mode = _ref.mode,\n      coverImg = _ref.coverImg,\n      _ref$canUploadImg = _ref.canUploadImg,\n      canUploadImg = _ref$canUploadImg === void 0 ? true : _ref$canUploadImg,\n      onChangeFile = _ref.onChangeFile,\n      autoHeight = _ref.autoHeight,\n      minHeight = _ref.minHeight,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? \"200px\" : _ref$height,\n      option = _ref.option,\n      props = _objectWithoutProperties(_ref, [\"uploading\", \"file\", \"isError\", \"mode\", \"coverImg\", \"canUploadImg\", \"onChangeFile\", \"autoHeight\", \"minHeight\", \"height\", \"option\"]);\n\n  var _ref2 = file || DEFAULT_FILE,\n      url = _ref2.url,\n      mimeType = _ref2.mimeType;\n\n  var isVideo = mimeType.includes(\"video\");\n  var isImg = mimeType.includes(\"image\");\n  var imageUploaderRef = useRef(null); // 이미지 Hook으로 부터 스타일을 추출해낸다.\n\n  var classes = classnames(\"imageUploader\", props && props.className, {\n    \"imageUploader--error\": isError,\n    \"imageUploader--loading\": uploading,\n    \"imageUploader--coverImg\": coverImg,\n    \"imageUploader--noBg\": mode === \"noBg\",\n    \"imageUploader--noEffect\": mode === \"noEffect\"\n  });\n  var imageUploaderStyle = {\n    height: height,\n    minHeight: minHeight\n  };\n  var imageUploader_loading_style = {\n    backgroundImage: \"none\",\n    minHeight: minHeight\n  };\n  var imageStyle = {\n    minHeight: minHeight,\n    backgroundImage: \"url(\".concat(url, \")\")\n  };\n  var randomKey = s4();\n  useEffect(function () {\n    if (autoHeight) {\n      setTimeout(function () {\n        var target = document.getElementById(\"file\".concat(randomKey));\n        if (!target) return;\n        var toHeight = target.clientHeight;\n        if (imageUploaderRef.current && url && toHeight) $(imageUploaderRef.current).height(toHeight);\n      }, 200);\n    }\n  });\n  return React.createElement(\"div\", {\n    ref: imageUploaderRef,\n    className: \"imageUploader \".concat(classes),\n    style: !uploading && !url ? imageUploaderStyle : imageUploader_loading_style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, canUploadImg && React.createElement(\"input\", {\n    className: \"imageUploader__input\",\n    onChange: onChangeFile,\n    id: \"photo\",\n    type: \"file\",\n    accept: \"image/*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), isImg && React.createElement(\"div\", {\n    className: \"imageUploader__image\",\n    style: imageStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), isVideo && React.createElement(JDVideo, {\n    className: \"imageUploader__video\",\n    url: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: {\n      visibility: \"hidden\",\n      opacity: 0,\n      position: \"absolute\"\n    },\n    id: \"file\".concat(randomKey),\n    src: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Preloader, {\n    size: \"large\",\n    noAnimation: true,\n    loading: uploading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }));\n};\n\nexport default ImageUploader;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/imageUploader/ImageUploader.tsx"],"names":["React","useRef","useEffect","classnames","Preloader","JDVideo","$","s4","DEFAULT_FILE","ImageUploader","uploading","file","isError","mode","coverImg","canUploadImg","onChangeFile","autoHeight","minHeight","height","option","props","url","mimeType","isVideo","includes","isImg","imageUploaderRef","classes","className","imageUploaderStyle","imageUploader_loading_style","backgroundImage","imageStyle","randomKey","setTimeout","target","document","getElementById","toHeight","clientHeight","current","visibility","opacity","position"],"mappings":"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","sourcesContent":["/* eslint-disable prop-types */\r\nimport React, {useRef, useEffect} from \"react\";\r\nimport \"./ImageUploader.scss\";\r\nimport classnames from \"classnames\";\r\nimport Preloader from \"../preloader/Preloader\";\r\nimport {IuseImageUploader} from \"../../hooks/hook\";\r\nimport JDVideo from \"../video/Video\";\r\nimport $ from \"jquery\";\r\nimport {s4} from \"../../utils/utils\";\r\nimport {DEFAULT_FILE} from \"../../types/defaults\";\r\n\r\nexport interface ImageUploaderIProps extends IuseImageUploader {\r\n  minHeight: string;\r\n  height?: string;\r\n  mode?: \"noEffect\" | \"noBg\";\r\n  className?: any;\r\n  coverImg?: boolean;\r\n  canUploadImg?: boolean;\r\n  autoHeight?: boolean;\r\n}\r\n\r\nconst ImageUploader: React.SFC<ImageUploaderIProps> = ({\r\n  uploading,\r\n  file,\r\n  isError,\r\n  mode,\r\n  coverImg,\r\n  canUploadImg = true,\r\n  onChangeFile,\r\n  autoHeight,\r\n  minHeight,\r\n  height = \"200px\",\r\n  // 옵션은 HOOK에 지정된 것들\r\n  option,\r\n  ...props\r\n}) => {\r\n  const {url, mimeType} = file || DEFAULT_FILE;\r\n  const isVideo = mimeType.includes(\"video\");\r\n  const isImg = mimeType.includes(\"image\");\r\n  const imageUploaderRef = useRef<HTMLDivElement>(null);\r\n  // 이미지 Hook으로 부터 스타일을 추출해낸다.\r\n\r\n  const classes = classnames(\"imageUploader\", props && props.className, {\r\n    \"imageUploader--error\": isError,\r\n    \"imageUploader--loading\": uploading,\r\n    \"imageUploader--coverImg\": coverImg,\r\n    \"imageUploader--noBg\": mode === \"noBg\",\r\n    \"imageUploader--noEffect\": mode === \"noEffect\"\r\n  });\r\n\r\n  const imageUploaderStyle = {\r\n    height,\r\n    minHeight\r\n  };\r\n\r\n  const imageUploader_loading_style = {\r\n    backgroundImage: \"none\",\r\n    minHeight\r\n  };\r\n\r\n  const imageStyle = {\r\n    minHeight,\r\n    backgroundImage: `url(${url})`\r\n  };\r\n\r\n  const randomKey = s4();\r\n\r\n  useEffect(() => {\r\n    if (autoHeight) {\r\n      setTimeout(() => {\r\n        const target = document.getElementById(`file${randomKey}`);\r\n        if (!target) return;\r\n        const toHeight = target.clientHeight;\r\n        if (imageUploaderRef.current && url && toHeight)\r\n          $(imageUploaderRef.current).height(toHeight);\r\n      }, 200);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={imageUploaderRef}\r\n      className={`imageUploader ${classes}`}\r\n      style={\r\n        !uploading && !url ? imageUploaderStyle : imageUploader_loading_style\r\n      }\r\n    >\r\n      {canUploadImg && (\r\n        <input\r\n          className=\"imageUploader__input\"\r\n          onChange={onChangeFile}\r\n          id=\"photo\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n        />\r\n      )}\r\n      {isImg && <div className=\"imageUploader__image\" style={imageStyle}></div>}\r\n      {isVideo && <JDVideo className=\"imageUploader__video\" url={url} />}\r\n      {/* 이 이미지는 이미지 크기를 재는 용도로만 사용됨 */}\r\n      <img\r\n        style={{\r\n          visibility: \"hidden\",\r\n          opacity: 0,\r\n          position: \"absolute\"\r\n        }}\r\n        id={`file${randomKey}`}\r\n        src={url}\r\n      />\r\n      <Preloader size=\"large\" noAnimation loading={uploading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n"]},"metadata":{},"sourceType":"module"}