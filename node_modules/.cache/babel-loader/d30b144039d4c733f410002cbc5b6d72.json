{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\smsModal\\\\SendSmsModal.tsx\";\nimport React, { useState, Fragment, useEffect } from \"react\";\nimport JDmodal from \"../../atoms/modal/Modal\";\nimport { useSelect, LANG } from \"../../hooks/hook\";\nimport JDbox from \"../../atoms/box/JDbox\";\nimport JDselect from \"../../atoms/forms/selectBox/SelectBox\";\nimport { GET_SMS_TARGET_OP, GetSmsTarget } from \"../../types/enum\";\nimport Button from \"../../atoms/button/Button\";\nimport \"./SendSmsModal.scss\";\nimport InputText from \"../../atoms/forms/inputText/InputText\";\nimport { smsMsgParser, templateOpCreater, smsMessageFormatter } from \"../../utils/smsUtils\";\nimport moment from \"moment\";\nimport { autoComma, autoHypen, s4, queryDataFormater } from \"../../utils/utils\";\nimport JDLabel from \"../../atoms/label/JDLabel\";\nimport { GET_BOOKINGS_PHONE_NUMBERS } from \"../../queries\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport client from \"../../apolloClient\";\nimport JDpreloader from \"../../atoms/preloader/Preloader\";\n\nvar SendSmsModal = function SendSmsModal(_ref) {\n  var context = _ref.context,\n      modalHook = _ref.modalHook,\n      sendSmsMu = _ref.sendSmsMu,\n      smsInfo = _ref.smsInfo,\n      callBackFn = _ref.callBackFn,\n      bookingIds = _ref.bookingIds,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? \"Noraml\" : _ref$mode,\n      autoSendWhen = _ref.autoSendWhen;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      msg = _useState2[0],\n      setMsg = _useState2[1];\n\n  var today = new Date();\n  var houseId = context.house._id;\n  var templateSelectHook = useSelect(null);\n  var smsTargetOpHook = useSelect(GET_SMS_TARGET_OP[0]);\n\n  var _useQuery = useQuery(GET_BOOKINGS_PHONE_NUMBERS, {\n    client: client,\n    variables: {\n      count: 0,\n      page: 0,\n      houseId: houseId,\n      filter: {\n        stayDate: moment(today).format(\"YYYY-MM-DD\")\n      }\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      refetch = _useQuery.refetch;\n\n  var bookings = queryDataFormater(data, \"GetBookings\", \"bookings\", undefined);\n  useEffect(function () {\n    if (smsInfo && smsInfo.smsTemplates) {\n      var targetTemplate = smsTemplates.find(function (template) {\n        if (template.smsSendCase && template.smsSendCase.when) {\n          return template.smsSendCase.when === autoSendWhen;\n        }\n\n        return false;\n      });\n\n      if (targetTemplate) {\n        var targetTempOp = smsTemplateOp.find(function (temp) {\n          return temp.value === targetTemplate._id;\n        });\n\n        if (targetTempOp) {\n          templateSelectHook.onChange(targetTempOp);\n          handleSelectTemplate(targetTempOp);\n        }\n      }\n    }\n  }, [modalHook.isOpen]);\n  var phoneNumbers = bookings ? bookings.map(function (booking) {\n    return booking.phoneNumber;\n  }) : undefined;\n  var tempBookingIds = bookings ? bookings.map(function (booking) {\n    return booking._id;\n  }) : [];\n  var sendTargets = smsTargetOpHook.selectedOption.value === GetSmsTarget.EXSIST_INFO ? modalHook.info.receivers : phoneNumbers;\n  var smsTemplates = smsInfo && smsInfo.smsTemplates || [];\n  var smsTemplateOp = templateOpCreater(smsTemplates); // 문자전송 버튼 클릭시\n\n  var handleSendSmsBtnClick = function handleSendSmsBtnClick(flag) {\n    modalHook.closeModal();\n\n    if (!smsInfo) {\n      throw Error(\"smsInfo is not exist\");\n    }\n\n    var sendSMSfn = sendSmsMu.bind(sendSmsMu, {\n      variables: {\n        smsInfoId: smsInfo._id,\n        msg: smsMessageFormatter(msg),\n        receivers: sendTargets,\n        bookingIds: tempBookingIds || bookingIds\n      }\n    });\n\n    if (callBackFn) {\n      callBackFn(flag, sendSMSfn);\n    } else {\n      sendSMSfn();\n    }\n  }; // 전송 타겟 변경시\n  // API 해당 타켓들의 전화번호를 요청함\n\n\n  var handleSmsTargetChange = function handleSmsTargetChange(v) {\n    smsTargetOpHook.onChange(v);\n\n    if (v.value === GetSmsTarget.TODAY_STAY) {\n      refetch({\n        houseId: houseId,\n        count: 99,\n        page: 1,\n        filter: {\n          stayDate: moment(today).toDate()\n        }\n      });\n    }\n  }; // 예약정보를 기반으로 뷰 변환\n\n\n  var handleSelectTemplate = function handleSelectTemplate(selectedOp) {\n    if (smsInfo && smsInfo.smsTemplates) {\n      var targetTemplate = smsInfo.smsTemplates.find(function (template) {\n        return template._id === selectedOp.value;\n      });\n\n      if (targetTemplate) {\n        var _msg = \"\";\n        var smsFormatInfo = modalHook.info.smsFormatInfo;\n\n        if (smsFormatInfo) {\n          var payMethod = smsFormatInfo.payMethod,\n              end = smsFormatInfo.end,\n              name = smsFormatInfo.name,\n              paymentStatus = smsFormatInfo.paymentStatus,\n              price = smsFormatInfo.price,\n              start = smsFormatInfo.start;\n          _msg = smsMsgParser(targetTemplate.smsFormat, {\n            BOOKERNAME: name,\n            ROOMTYPE_N_COUNT: \"\",\n            STAYDATE: \"\".concat(moment(start).format(\"MM-DD\"), \"~\").concat(moment(end).format(\"MM-DD\")),\n            STAYDATE_YMD: \"\".concat(moment(start).format(\"YY-MM-DD\"), \"~\").concat(moment(end).format(\"YY-MM-DD\")),\n            TOTALPRICE: \"\".concat(autoComma(price)),\n            PAYMENTSTATUS: \"\".concat(paymentStatus),\n            PAYMETHOD: \"\".concat(payMethod),\n            HM: \"[하우스메뉴얼 주소]\"\n          });\n        } else {\n          _msg = smsMsgParser(targetTemplate.smsFormat, LANG(\"SmsReplaceKey\"));\n        }\n\n        setMsg(_msg);\n      }\n    }\n  };\n\n  return React.createElement(JDmodal, Object.assign({\n    className: \"sendSmsModal \".concat(loading && \"sendSmsModal--loading\")\n  }, modalHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }), React.createElement(JDpreloader, {\n    size: \"large\",\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), loading || React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, LANG(\"send_sms\")), mode === \"Noraml\" && React.createElement(\"div\", {\n    className: \"JDz-index-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(JDselect, Object.assign({}, smsTargetOpHook, {\n    onChange: handleSmsTargetChange,\n    options: GET_SMS_TARGET_OP,\n    label: LANG(\"find_destination\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(JDLabel, {\n    txt: LANG(\"outgoing_destination\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), React.createElement(JDbox, {\n    className: \"clear-fix\",\n    mode: \"border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, sendTargets && sendTargets.map(function (receiver) {\n    return React.createElement(JDbox, {\n      size: sendTargets.length > 4 ? \"small\" : undefined,\n      float: true,\n      key: s4(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, autoHypen(receiver)));\n  }))), React.createElement(\"div\", {\n    className: \"JDz-index-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(JDselect, {\n    label: LANG(\"sms_template\"),\n    selectedOption: templateSelectHook.selectedOption,\n    onChange: function onChange(v) {\n      templateSelectHook.onChange(v);\n      handleSelectTemplate(v);\n    },\n    noOptionsMessage: LANG(\"try_to_create_in_SMS_settings\"),\n    options: smsTemplateOp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    doubleHeight: true,\n    onChange: setMsg,\n    value: msg,\n    label: LANG(\"msg_content\"),\n    textarea: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"JDmodal__endSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    thema: \"primary\",\n    disabled: !msg,\n    onClick: function onClick() {\n      handleSendSmsBtnClick(true);\n    },\n    label: LANG(\"sendSMS\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }), callBackFn && React.createElement(Button, {\n    size: \"small\",\n    onClick: function onClick() {\n      handleSendSmsBtnClick(false);\n    },\n    label: LANG(\"dontSMS\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }))));\n};\n\nexport default SendSmsModal;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/smsModal/SendSmsModal.tsx"],"names":["React","useState","Fragment","useEffect","JDmodal","useSelect","LANG","JDbox","JDselect","GET_SMS_TARGET_OP","GetSmsTarget","Button","InputText","smsMsgParser","templateOpCreater","smsMessageFormatter","moment","autoComma","autoHypen","s4","queryDataFormater","JDLabel","GET_BOOKINGS_PHONE_NUMBERS","useQuery","client","JDpreloader","SendSmsModal","context","modalHook","sendSmsMu","smsInfo","callBackFn","bookingIds","mode","autoSendWhen","msg","setMsg","today","Date","houseId","house","_id","templateSelectHook","smsTargetOpHook","variables","count","page","filter","stayDate","format","data","loading","refetch","bookings","undefined","smsTemplates","targetTemplate","find","template","smsSendCase","when","targetTempOp","smsTemplateOp","temp","value","onChange","handleSelectTemplate","isOpen","phoneNumbers","map","booking","phoneNumber","tempBookingIds","sendTargets","selectedOption","EXSIST_INFO","info","receivers","handleSendSmsBtnClick","flag","closeModal","Error","sendSMSfn","bind","smsInfoId","handleSmsTargetChange","v","TODAY_STAY","toDate","selectedOp","smsFormatInfo","payMethod","end","name","paymentStatus","price","start","smsFormat","BOOKERNAME","ROOMTYPE_N_COUNT","STAYDATE","STAYDATE_YMD","TOTALPRICE","PAYMENTSTATUS","PAYMETHOD","HM","receiver","length"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from \"react\";\r\nimport JDmodal from \"../../atoms/modal/Modal\";\r\nimport { IUseModal, useSelect, LANG } from \"../../hooks/hook\";\r\nimport JDbox from \"../../atoms/box/JDbox\";\r\nimport JDselect, {\r\n  IselectedOption\r\n} from \"../../atoms/forms/selectBox/SelectBox\";\r\nimport { GET_SMS_TARGET_OP, GetSmsTarget } from \"../../types/enum\";\r\nimport Button from \"../../atoms/button/Button\";\r\nimport \"./SendSmsModal.scss\";\r\nimport { MutationFn } from \"react-apollo\";\r\nimport {\r\n  sendSms,\r\n  sendSmsVariables,\r\n  getSmsInfo_GetSmsInfo_smsInfo,\r\n  getBookings,\r\n  getBookingsVariables,\r\n  AutoSendWhen\r\n} from \"../../types/api\";\r\nimport InputText from \"../../atoms/forms/inputText/InputText\";\r\nimport {\r\n  smsMsgParser,\r\n  templateOpCreater,\r\n  smsMessageFormatter\r\n} from \"../../utils/smsUtils\";\r\nimport moment from \"moment\";\r\nimport { IModalSMSinfo } from \"./SendSmsModalWrap\";\r\nimport { autoComma, autoHypen, s4, queryDataFormater } from \"../../utils/utils\";\r\nimport JDLabel from \"../../atoms/label/JDLabel\";\r\nimport { GET_BOOKINGS_PHONE_NUMBERS } from \"../../queries\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { IContext } from \"../../pages/bookingHost/BookingHostRouter\";\r\nimport client from \"../../apolloClient\";\r\nimport JDpreloader from \"../../atoms/preloader/Preloader\";\r\n\r\ninterface IProps {\r\n  context: IContext;\r\n  modalHook: IUseModal<IModalSMSinfo>;\r\n  sendSmsMu: MutationFn<sendSms, sendSmsVariables>;\r\n  loading: boolean;\r\n  bookingIds?: string[];\r\n  smsInfo: getSmsInfo_GetSmsInfo_smsInfo | null | undefined;\r\n  callBackFn?(flag: boolean, smsSendFn: any): any;\r\n  autoSendWhen?: AutoSendWhen;\r\n  mode?: \"Booking\" | \"Noraml\";\r\n}\r\n\r\nconst SendSmsModal: React.FC<IProps> = ({\r\n  context,\r\n  modalHook,\r\n  sendSmsMu,\r\n  smsInfo,\r\n  callBackFn,\r\n  bookingIds,\r\n  mode = \"Noraml\",\r\n  autoSendWhen\r\n}) => {\r\n  const [msg, setMsg] = useState(\"\");\r\n  const today = new Date();\r\n  const {\r\n    house: { _id: houseId }\r\n  } = context;\r\n  const templateSelectHook = useSelect(null);\r\n  const smsTargetOpHook = useSelect(GET_SMS_TARGET_OP[0]);\r\n  const { data, loading, refetch } = useQuery<\r\n    getBookings,\r\n    getBookingsVariables\r\n  >(GET_BOOKINGS_PHONE_NUMBERS, {\r\n    client,\r\n    variables: {\r\n      count: 0,\r\n      page: 0,\r\n      houseId,\r\n      filter: {\r\n        stayDate: moment(today).format(\"YYYY-MM-DD\")\r\n      }\r\n    }\r\n  });\r\n\r\n  const bookings = queryDataFormater(\r\n    data,\r\n    \"GetBookings\",\r\n    \"bookings\",\r\n    undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (smsInfo && smsInfo.smsTemplates) {\r\n      const targetTemplate = smsTemplates.find(template => {\r\n        if (template.smsSendCase && template.smsSendCase.when) {\r\n          return template.smsSendCase.when === autoSendWhen;\r\n        }\r\n        return false;\r\n      });\r\n      if (targetTemplate) {\r\n        const targetTempOp = smsTemplateOp.find(\r\n          temp => temp.value === targetTemplate._id\r\n        );\r\n        if (targetTempOp) {\r\n          templateSelectHook.onChange(targetTempOp);\r\n          handleSelectTemplate(targetTempOp);\r\n        }\r\n      }\r\n    }\r\n  }, [modalHook.isOpen]);\r\n\r\n  const phoneNumbers = bookings\r\n    ? bookings.map(booking => booking.phoneNumber)\r\n    : undefined;\r\n  const tempBookingIds = bookings ? bookings.map(booking => booking._id) : [];\r\n  const sendTargets =\r\n    smsTargetOpHook.selectedOption!.value === GetSmsTarget.EXSIST_INFO\r\n      ? modalHook.info.receivers\r\n      : phoneNumbers;\r\n  const smsTemplates = (smsInfo && smsInfo.smsTemplates) || [];\r\n  const smsTemplateOp = templateOpCreater(smsTemplates);\r\n\r\n  // 문자전송 버튼 클릭시\r\n  const handleSendSmsBtnClick = (flag: boolean) => {\r\n    modalHook.closeModal();\r\n    if (!smsInfo) {\r\n      throw Error(\"smsInfo is not exist\");\r\n    }\r\n    const sendSMSfn = sendSmsMu.bind(sendSmsMu, {\r\n      variables: {\r\n        smsInfoId: smsInfo._id,\r\n        msg: smsMessageFormatter(msg),\r\n        receivers: sendTargets,\r\n        bookingIds: tempBookingIds || bookingIds\r\n      }\r\n    });\r\n\r\n    if (callBackFn) {\r\n      callBackFn(flag, sendSMSfn);\r\n    } else {\r\n      sendSMSfn();\r\n    }\r\n  };\r\n\r\n  // 전송 타겟 변경시\r\n  // API 해당 타켓들의 전화번호를 요청함\r\n  const handleSmsTargetChange = (v: IselectedOption<any>) => {\r\n    smsTargetOpHook.onChange(v);\r\n    if (v.value === GetSmsTarget.TODAY_STAY) {\r\n      refetch({\r\n        houseId,\r\n        count: 99,\r\n        page: 1,\r\n        filter: {\r\n          stayDate: moment(today).toDate()\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // 예약정보를 기반으로 뷰 변환\r\n  const handleSelectTemplate = (selectedOp: IselectedOption) => {\r\n    if (smsInfo && smsInfo.smsTemplates) {\r\n      const targetTemplate = smsInfo.smsTemplates.find(\r\n        template => template._id === selectedOp.value\r\n      );\r\n\r\n      if (targetTemplate) {\r\n        let msg = \"\";\r\n        const { smsFormatInfo } = modalHook.info;\r\n        if (smsFormatInfo) {\r\n          const {\r\n            payMethod,\r\n            end,\r\n            name,\r\n            paymentStatus,\r\n            price,\r\n            start\r\n          } = smsFormatInfo;\r\n          msg = smsMsgParser(targetTemplate.smsFormat, {\r\n            BOOKERNAME: name,\r\n            ROOMTYPE_N_COUNT: \"\",\r\n            STAYDATE: `${moment(start).format(\"MM-DD\")}~${moment(end).format(\r\n              \"MM-DD\"\r\n            )}`,\r\n            STAYDATE_YMD: `${moment(start).format(\"YY-MM-DD\")}~${moment(\r\n              end\r\n            ).format(\"YY-MM-DD\")}`,\r\n            TOTALPRICE: `${autoComma(price)}`,\r\n            PAYMENTSTATUS: `${paymentStatus}`,\r\n            PAYMETHOD: `${payMethod}`,\r\n            HM: \"[하우스메뉴얼 주소]\"\r\n          });\r\n        } else {\r\n          msg = smsMsgParser(targetTemplate.smsFormat, LANG(\"SmsReplaceKey\"));\r\n        }\r\n        setMsg(msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <JDmodal\r\n      className={`sendSmsModal ${loading && \"sendSmsModal--loading\"}`}\r\n      {...modalHook}\r\n    >\r\n      <JDpreloader size=\"large\" loading={loading} />\r\n      {loading || (\r\n        <Fragment>\r\n          <h5>{LANG(\"send_sms\")}</h5>\r\n          {mode === \"Noraml\" && (\r\n            <div className=\"JDz-index-2\">\r\n              <JDselect\r\n                {...smsTargetOpHook}\r\n                onChange={handleSmsTargetChange}\r\n                options={GET_SMS_TARGET_OP}\r\n                label={LANG(\"find_destination\")}\r\n              />\r\n            </div>\r\n          )}\r\n          <div>\r\n            <JDLabel txt={LANG(\"outgoing_destination\")} />\r\n            <JDbox className=\"clear-fix\" mode=\"border\">\r\n              {sendTargets &&\r\n                sendTargets.map(receiver => (\r\n                  <JDbox\r\n                    size={sendTargets.length > 4 ? \"small\" : undefined}\r\n                    float\r\n                    key={s4()}\r\n                  >\r\n                    <span>{autoHypen(receiver)}</span>\r\n                  </JDbox>\r\n                ))}\r\n            </JDbox>\r\n          </div>\r\n          <div className=\"JDz-index-1\">\r\n            <JDselect\r\n              label={LANG(\"sms_template\")}\r\n              selectedOption={templateSelectHook.selectedOption}\r\n              onChange={(v: any) => {\r\n                templateSelectHook.onChange(v);\r\n                handleSelectTemplate(v);\r\n              }}\r\n              noOptionsMessage={LANG(\"try_to_create_in_SMS_settings\")}\r\n              options={smsTemplateOp}\r\n            />\r\n          </div>\r\n          <div>\r\n            <InputText\r\n              doubleHeight\r\n              onChange={setMsg}\r\n              value={msg}\r\n              label={LANG(\"msg_content\")}\r\n              textarea\r\n            />\r\n          </div>\r\n          <div className=\"JDmodal__endSection\">\r\n            <Button\r\n              size={\"small\"}\r\n              thema=\"primary\"\r\n              disabled={!msg}\r\n              onClick={() => {\r\n                handleSendSmsBtnClick(true);\r\n              }}\r\n              label={LANG(\"sendSMS\")}\r\n            />\r\n            {callBackFn && (\r\n              <Button\r\n                size={\"small\"}\r\n                onClick={() => {\r\n                  handleSendSmsBtnClick(false);\r\n                }}\r\n                label={LANG(\"dontSMS\")}\r\n              />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </JDmodal>\r\n  );\r\n};\r\n\r\nexport default SendSmsModal;\r\n"]},"metadata":{},"sourceType":"module"}