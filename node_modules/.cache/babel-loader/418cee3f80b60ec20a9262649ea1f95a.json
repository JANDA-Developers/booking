{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\middleServer\\\\statistic\\\\StatisticWrap.tsx\";\nimport React, { useState } from \"react\";\nimport Statistic from \"./Statistic\";\nimport moment from \"moment\";\nimport { useDayPicker, LANG } from \"../../../hooks/hook\";\nimport { Query } from \"react-apollo\";\nimport { GET_SALES_STATISTIC } from \"../../../queries\";\nimport { SalesStatisticsUnit } from \"../../../types/enum\";\nimport { queryDataFormater } from \"../../../utils/utils\";\n\nvar GetSalesStatistic =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(GetSalesStatistic, _Query);\n\n  function GetSalesStatistic() {\n    _classCallCheck(this, GetSalesStatistic);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GetSalesStatistic).apply(this, arguments));\n  }\n\n  return GetSalesStatistic;\n}(Query);\n\nvar StatisticWrap = function StatisticWrap(_ref) {\n  var context = _ref.context;\n  var house = context.house;\n\n  var _useState = useState({\n    selectStatic: LANG(\"sales_statistics\"),\n    unit: SalesStatisticsUnit.BY_DAY_OF_WEEK\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      queryOp = _useState2[0],\n      setQueryOp = _useState2[1];\n\n  var queryDateHook = useDayPicker(moment(new Date()).add(-1, \"day\").toDate(), new Date());\n  var data = [];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(GetSalesStatistic, {\n    skip: !queryDateHook.to || !queryDateHook.from,\n    variables: {\n      unit: queryOp.unit,\n      checkOut: queryDateHook.to,\n      checkIn: queryDateHook.from,\n      houseId: house._id\n    },\n    query: GET_SALES_STATISTIC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, function (_ref2) {\n    var statisticData = _ref2.data,\n        loading = _ref2.loading,\n        error = _ref2.error,\n        networkStatus = _ref2.networkStatus;\n    var statistic = queryDataFormater(statisticData, \"GetSalesStatistic\", \"data\", []);\n    var staticsWrapProps = {\n      queryOp: queryOp,\n      setQueryOp: setQueryOp,\n      staticData: statistic || [],\n      queryDateHook: queryDateHook\n    };\n    return React.createElement(Statistic, {\n      staticsWrapProps: staticsWrapProps,\n      context: context,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default StatisticWrap;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/middleServer/statistic/StatisticWrap.tsx"],"names":["React","useState","Statistic","moment","useDayPicker","LANG","Query","GET_SALES_STATISTIC","SalesStatisticsUnit","queryDataFormater","GetSalesStatistic","StatisticWrap","context","house","selectStatic","unit","BY_DAY_OF_WEEK","queryOp","setQueryOp","queryDateHook","Date","add","toDate","data","to","from","checkOut","checkIn","houseId","_id","statisticData","loading","error","networkStatus","statistic","staticsWrapProps","staticData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAA2C,aAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,YAAR,EAAsBC,IAAtB,QAAiC,qBAAjC;AACA,SAAQC,KAAR,QAAoB,cAApB;AAKA,SAAQC,mBAAR,QAAkC,kBAAlC;AACA,SAAQC,mBAAR,QAAkC,qBAAlC;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;;IAaMC,iB;;;;;;;;;;;;EAA0BJ,K;;AAKhC,IAAMK,aAA+B,GAAG,SAAlCA,aAAkC,OAAe;AAAA,MAAbC,OAAa,QAAbA,OAAa;AAAA,MAC9CC,KAD8C,GACrCD,OADqC,CAC9CC,KAD8C;;AAAA,kBAEvBZ,QAAQ,CAAW;AAC/Ca,IAAAA,YAAY,EAAET,IAAI,CAAC,kBAAD,CAD6B;AAE/CU,IAAAA,IAAI,EAAEP,mBAAmB,CAACQ;AAFqB,GAAX,CAFe;AAAA;AAAA,MAE9CC,OAF8C;AAAA,MAErCC,UAFqC;;AAOrD,MAAMC,aAAa,GAAGf,YAAY,CAChCD,MAAM,CAAC,IAAIiB,IAAJ,EAAD,CAAN,CACGC,GADH,CACO,CAAC,CADR,EACW,KADX,EAEGC,MAFH,EADgC,EAIhC,IAAIF,IAAJ,EAJgC,CAAlC;AAOA,MAAMG,IAAW,GAAG,EAApB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAE,CAACJ,aAAa,CAACK,EAAf,IAAqB,CAACL,aAAa,CAACM,IAD5C;AAEE,IAAA,SAAS,EAAE;AACTV,MAAAA,IAAI,EAAEE,OAAO,CAACF,IADL;AAETW,MAAAA,QAAQ,EAAEP,aAAa,CAACK,EAFf;AAGTG,MAAAA,OAAO,EAAER,aAAa,CAACM,IAHd;AAITG,MAAAA,OAAO,EAAEf,KAAK,CAACgB;AAJN,KAFb;AAQE,IAAA,KAAK,EAAEtB,mBART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG,iBAA0D;AAAA,QAAlDuB,aAAkD,SAAxDP,IAAwD;AAAA,QAAnCQ,OAAmC,SAAnCA,OAAmC;AAAA,QAA1BC,KAA0B,SAA1BA,KAA0B;AAAA,QAAnBC,aAAmB,SAAnBA,aAAmB;AACzD,QAAMC,SAAS,GAAGzB,iBAAiB,CACjCqB,aADiC,EAEjC,mBAFiC,EAGjC,MAHiC,EAIjC,EAJiC,CAAnC;AAOA,QAAMK,gBAAmC,GAAG;AAC1ClB,MAAAA,OAAO,EAAPA,OAD0C;AAE1CC,MAAAA,UAAU,EAAVA,UAF0C;AAG1CkB,MAAAA,UAAU,EAAEF,SAAS,IAAI,EAHiB;AAI1Cf,MAAAA,aAAa,EAAbA;AAJ0C,KAA5C;AAOA,WACE,oBAAC,SAAD;AACE,MAAA,gBAAgB,EAAEgB,gBADpB;AAEE,MAAA,OAAO,EAAEvB,OAFX;AAGE,MAAA,OAAO,EAAEmB,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GAhCH,CADF,CADF;AAsCD,CArDD;;AAuDA,eAAepB,aAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport Statistic, {IStaticsWrapProps} from \"./Statistic\";\r\nimport moment from \"moment\";\r\nimport {useDayPicker, LANG} from \"../../../hooks/hook\";\r\nimport {Query} from \"react-apollo\";\r\nimport {\r\n  getSalesStatistic,\r\n  getSalesStatisticVariables\r\n} from \"../../../types/api\";\r\nimport {GET_SALES_STATISTIC} from \"../../../queries\";\r\nimport {SalesStatisticsUnit} from \"../../../types/enum\";\r\nimport {queryDataFormater} from \"../../../utils/utils\";\r\nimport {IContext} from \"../../MiddleServerRouter\";\r\n\r\ninterface IProps {\r\n  context: IContext;\r\n}\r\n// refetch 가 Query 컴포넌트 리턴 프로프임\r\n\r\nexport interface IQueryOp {\r\n  selectStatic: string;\r\n  unit: SalesStatisticsUnit;\r\n}\r\n\r\nclass GetSalesStatistic extends Query<\r\n  getSalesStatistic,\r\n  getSalesStatisticVariables\r\n> {}\r\n\r\nconst StatisticWrap: React.FC<IProps> = ({context}) => {\r\n  const {house} = context;\r\n  const [queryOp, setQueryOp] = useState<IQueryOp>({\r\n    selectStatic: LANG(\"sales_statistics\"),\r\n    unit: SalesStatisticsUnit.BY_DAY_OF_WEEK\r\n  });\r\n\r\n  const queryDateHook = useDayPicker(\r\n    moment(new Date())\r\n      .add(-1, \"day\")\r\n      .toDate(),\r\n    new Date()\r\n  );\r\n\r\n  const data: any[] = [];\r\n  return (\r\n    <div>\r\n      <GetSalesStatistic\r\n        skip={!queryDateHook.to || !queryDateHook.from}\r\n        variables={{\r\n          unit: queryOp.unit,\r\n          checkOut: queryDateHook.to,\r\n          checkIn: queryDateHook.from,\r\n          houseId: house._id\r\n        }}\r\n        query={GET_SALES_STATISTIC}\r\n      >\r\n        {({data: statisticData, loading, error, networkStatus}) => {\r\n          const statistic = queryDataFormater(\r\n            statisticData,\r\n            \"GetSalesStatistic\",\r\n            \"data\",\r\n            []\r\n          );\r\n\r\n          const staticsWrapProps: IStaticsWrapProps = {\r\n            queryOp,\r\n            setQueryOp,\r\n            staticData: statistic || [],\r\n            queryDateHook\r\n          };\r\n\r\n          return (\r\n            <Statistic\r\n              staticsWrapProps={staticsWrapProps}\r\n              context={context}\r\n              loading={loading}\r\n            />\r\n          );\r\n        }}\r\n      </GetSalesStatistic>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticWrap;\r\n"]},"metadata":{},"sourceType":"module"}