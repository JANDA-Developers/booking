{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\bookingHost\\\\assig\\\\helpers\\\\BlockOpModal.tsx\";\nimport React from \"react\";\nimport JDcolorPicker from \"../../../../atoms/colorPicker/ColorPicker\";\nimport { useColorPicker, useCheckBox, LANG } from \"../../../../hooks/hook\";\nimport Button from \"../../../../atoms/button/Button\";\nimport JDmodal from \"../../../../atoms/modal/Modal\";\nimport CheckBox from \"../../../../atoms/forms/checkBox/CheckBox\";\nimport { muResult } from \"../../../../utils/utils\";\n\nvar BlockOpModal = function BlockOpModal(_ref) {\n  var _ref$assigUtils = _ref.assigUtils,\n      getGroupById = _ref$assigUtils.getGroupById,\n      getItemById = _ref$assigUtils.getItemById,\n      getGuestsByBookingId = _ref$assigUtils.getGuestsByBookingId,\n      _ref$assigHooks = _ref.assigHooks,\n      bookingModal = _ref$assigHooks.bookingModal,\n      createMenuProps = _ref$assigHooks.createMenuProps,\n      blockOpModal = _ref$assigHooks.blockOpModal,\n      guestValue = _ref$assigHooks.guestValue,\n      setGuestValue = _ref$assigHooks.setGuestValue,\n      groupData = _ref.assigContext.groupData,\n      updateBlockOpMu = _ref.assigDataControl.updateBlockOpMu;\n  var target = blockOpModal.info;\n  var colorPickerHook = useColorPicker(target.blockOption ? target.blockOption.color : \"#2153dbcc\");\n  var addmitToAll = useCheckBox(false);\n\n  var handleClickAdmit = function handleClickAdmit(flag) {\n    var result = updateBlockOpMu({\n      variables: {\n        applyWithBooking: addmitToAll.checked,\n        blockOption: {\n          color: flag ? null : colorPickerHook.color\n        },\n        guestId: blockOpModal.info.id\n      }\n    });\n\n    if (!muResult(result, \"updateBlockOption\")) {\n      var inTarget = [target];\n      if (addmitToAll.checked) inTarget = getGuestsByBookingId(target.bookingId);\n\n      if (!flag) {\n        inTarget.forEach(function (ininTarget) {\n          return ininTarget.blockOption.color = colorPickerHook.color;\n        });\n      } else if (flag === \"cancel\") {\n        inTarget.forEach(function (ininTarget) {\n          return ininTarget.blockOption.color = null;\n        });\n      }\n\n      setGuestValue(_toConsumableArray(guestValue));\n    }\n  };\n\n  return React.createElement(JDmodal, Object.assign({\n    visibleOverflow: true,\n    className: \"assig__blockOpModal\"\n  }, blockOpModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"blockOpMenu\",\n    id: \"blockOpMenu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, LANG(\"block_highlights\"), \"}\"), React.createElement(JDcolorPicker, {\n    label: LANG(\"apply_color\"),\n    colorHook: colorPickerHook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(CheckBox, Object.assign({\n    label: LANG(\"applies_to_all_reservations_booked_together\")\n  }, addmitToAll, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"JDmodal__endSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      handleClickAdmit();\n    },\n    thema: \"primary\",\n    size: \"small\",\n    label: LANG(\"Apply\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))));\n};\n\nexport default BlockOpModal;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/bookingHost/assig/helpers/BlockOpModal.tsx"],"names":["React","JDcolorPicker","useColorPicker","useCheckBox","LANG","Button","JDmodal","CheckBox","muResult","BlockOpModal","assigUtils","getGroupById","getItemById","getGuestsByBookingId","assigHooks","bookingModal","createMenuProps","blockOpModal","guestValue","setGuestValue","groupData","assigContext","updateBlockOpMu","assigDataControl","target","info","colorPickerHook","blockOption","color","addmitToAll","handleClickAdmit","flag","result","variables","applyWithBooking","checked","guestId","id","inTarget","bookingId","forEach","ininTarget"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IAssigTimelineUtils,\r\n  IAssigTimelineContext,\r\n  IAssigTimelineHooks,\r\n  IAssigDataControl\r\n} from \"./assigIntrerface\";\r\nimport JDcolorPicker from \"../../../../atoms/colorPicker/ColorPicker\";\r\nimport { useColorPicker, useCheckBox, LANG } from \"../../../../hooks/hook\";\r\nimport Button from \"../../../../atoms/button/Button\";\r\nimport JDmodal from \"../../../../atoms/modal/Modal\";\r\nimport CheckBox from \"../../../../atoms/forms/checkBox/CheckBox\";\r\nimport { muResult } from \"../../../../utils/utils\";\r\n\r\ninterface IProps {\r\n  assigHooks: IAssigTimelineHooks;\r\n  assigUtils: IAssigTimelineUtils;\r\n  assigContext: IAssigTimelineContext;\r\n  assigDataControl: IAssigDataControl;\r\n}\r\n\r\nconst BlockOpModal: React.FC<IProps> = ({\r\n  assigUtils: { getGroupById, getItemById, getGuestsByBookingId },\r\n  assigHooks: {\r\n    bookingModal,\r\n    createMenuProps,\r\n    blockOpModal,\r\n    guestValue,\r\n    setGuestValue\r\n  },\r\n  assigContext: { groupData },\r\n  assigDataControl: { updateBlockOpMu }\r\n}) => {\r\n  const target = blockOpModal.info;\r\n  const colorPickerHook = useColorPicker(\r\n    target.blockOption ? target.blockOption.color : \"#2153dbcc\"\r\n  );\r\n  const addmitToAll = useCheckBox(false);\r\n\r\n  const handleClickAdmit = (flag?: \"cancel\") => {\r\n    const result = updateBlockOpMu({\r\n      variables: {\r\n        applyWithBooking: addmitToAll.checked,\r\n        blockOption: {\r\n          color: flag ? null : colorPickerHook.color\r\n        },\r\n        guestId: blockOpModal.info.id\r\n      }\r\n    });\r\n\r\n    if (!muResult(result, \"updateBlockOption\")) {\r\n      let inTarget = [target];\r\n      if (addmitToAll.checked)\r\n        inTarget = getGuestsByBookingId(target.bookingId);\r\n\r\n      if (!flag) {\r\n        inTarget.forEach(\r\n          ininTarget => (ininTarget.blockOption.color = colorPickerHook.color)\r\n        );\r\n      } else if (flag === \"cancel\") {\r\n        inTarget.forEach(ininTarget => (ininTarget.blockOption.color = null));\r\n      }\r\n      setGuestValue([...guestValue]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <JDmodal visibleOverflow className=\"assig__blockOpModal\" {...blockOpModal}>\r\n      <div className=\"blockOpMenu\" id=\"blockOpMenu\">\r\n        <div>\r\n          <h6>{LANG(\"block_highlights\")}}</h6>\r\n          <JDcolorPicker\r\n            label={LANG(\"apply_color\")}\r\n            colorHook={colorPickerHook}\r\n          />\r\n          <CheckBox\r\n            label={LANG(\"applies_to_all_reservations_booked_together\")}\r\n            {...addmitToAll}\r\n          />\r\n        </div>\r\n        <div className=\"JDmodal__endSection\">\r\n          <Button\r\n            onClick={() => {\r\n              handleClickAdmit();\r\n            }}\r\n            thema=\"primary\"\r\n            size=\"small\"\r\n            label={LANG(\"Apply\")}\r\n          />\r\n        </div>\r\n      </div>\r\n    </JDmodal>\r\n  );\r\n};\r\n\r\nexport default BlockOpModal;\r\n"]},"metadata":{},"sourceType":"module"}