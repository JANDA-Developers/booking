{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\noti\\\\component\\\\NotiIcon.tsx\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_NOTI } from \"../../../queries\";\nimport { queryDataFormater } from \"../../../utils/utils\";\nimport JDIcon from \"../../../atoms/icons/Icons\";\nimport { NotiLevel } from \"../../../types/enum\";\nimport client from \"../../../apolloClient\";\nimport JDbadge from \"../../../atoms/badge/Badge\";\n\nvar NotiIcon = function NotiIcon(_ref) {\n  var context = _ref.context,\n      props = _objectWithoutProperties(_ref, [\"context\"]);\n\n  var house = context.house;\n\n  var _useQuery = useQuery(GET_NOTI, {\n    client: client,\n    variables: {\n      houseId: house._id,\n      count: 20\n    }\n  }),\n      data = _useQuery.data;\n\n  var notis = queryDataFormater(data, \"GetNotis\", \"notis\", []) || [];\n  var countNew = 0;\n  var countWarn = 0;\n  notis.forEach(function (noti) {\n    if (!noti.isConfirm) {\n      if (noti.notiLevel === NotiLevel.NORMAL) countNew++;\n      if (noti.notiLevel === NotiLevel.WARN) countWarn++;\n    }\n  });\n\n  var badges = function () {\n    var tempbadges = [];\n    if (countNew !== 0 && countWarn === 0) tempbadges.push(React.createElement(JDbadge, {\n      key: \"badgeNotiNew\",\n      thema: \"new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n    if (countWarn !== 0) tempbadges.push(React.createElement(JDbadge, {\n      key: \"badgeNotiWarn\",\n      thema: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n    return tempbadges;\n  }();\n\n  return React.createElement(JDIcon, Object.assign({\n    icon: \"notify\"\n  }, props, {\n    dots: badges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nexport default NotiIcon;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/noti/component/NotiIcon.tsx"],"names":["React","useQuery","GET_NOTI","queryDataFormater","JDIcon","NotiLevel","client","JDbadge","NotiIcon","context","props","house","variables","houseId","_id","count","data","notis","countNew","countWarn","forEach","noti","isConfirm","notiLevel","NORMAL","WARN","badges","tempbadges","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAkBC,QAAlB,QAAiC,kBAAjC;AAOA,SAAQC,iBAAR,QAAoC,sBAApC;AACA,OAAOC,MAAP,MAAsC,4BAAtC;AAEA,SAAkBC,SAAlB,QAAkC,qBAAlC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;AAMA,IAAMC,QAA0B,GAAG,SAA7BA,QAA6B,OAAyB;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAXC,KAAW;;AAAA,MACnDC,KADmD,GAC1CF,OAD0C,CACnDE,KADmD;;AAAA,kBAE3CV,QAAQ,CAA8BC,QAA9B,EAAwC;AAC7DI,IAAAA,MAAM,EAANA,MAD6D;AAE7DM,IAAAA,SAAS,EAAE;AAACC,MAAAA,OAAO,EAAEF,KAAK,CAACG,GAAhB;AAAqBC,MAAAA,KAAK,EAAE;AAA5B;AAFkD,GAAxC,CAFmC;AAAA,MAEnDC,IAFmD,aAEnDA,IAFmD;;AAO1D,MAAMC,KAAK,GAAGd,iBAAiB,CAACa,IAAD,EAAO,UAAP,EAAmB,OAAnB,EAA4B,EAA5B,CAAjB,IAAoD,EAAlE;AAEA,MAAIE,QAAQ,GAAG,CAAf;AACA,MAAIC,SAAS,GAAG,CAAhB;AAEAF,EAAAA,KAAK,CAACG,OAAN,CAAc,UAAAC,IAAI,EAAI;AACpB,QAAI,CAACA,IAAI,CAACC,SAAV,EAAqB;AACnB,UAAID,IAAI,CAACE,SAAL,KAAmBlB,SAAS,CAACmB,MAAjC,EAAyCN,QAAQ;AACjD,UAAIG,IAAI,CAACE,SAAL,KAAmBlB,SAAS,CAACoB,IAAjC,EAAuCN,SAAS;AACjD;AACF,GALD;;AAOA,MAAMO,MAAM,GAAI,YAAM;AACpB,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIT,QAAQ,KAAK,CAAb,IAAkBC,SAAS,KAAK,CAApC,EACEQ,UAAU,CAACC,IAAX,CAAgB,oBAAC,OAAD;AAAS,MAAA,GAAG,gBAAZ;AAA8B,MAAA,KAAK,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACF,QAAIT,SAAS,KAAK,CAAlB,EACEQ,UAAU,CAACC,IAAX,CAAgB,oBAAC,OAAD;AAAS,MAAA,GAAG,iBAAZ;AAA+B,MAAA,KAAK,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACF,WAAOD,UAAP;AACD,GAPc,EAAf;;AASA,SAAO,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,KAA0BjB,KAA1B;AAAiC,IAAA,IAAI,EAAEgB,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CA7BD;;AA+BA,eAAelB,QAAf","sourcesContent":["import React from \"react\";\r\nimport {useQuery} from \"@apollo/react-hooks\";\r\nimport {GET_MEMO, GET_NOTI} from \"../../../queries\";\r\nimport {\r\n  getMemos,\r\n  getMemosVariables,\r\n  getNotis,\r\n  getNotisVariables\r\n} from \"../../../types/api\";\r\nimport {queryDataFormater, s4} from \"../../../utils/utils\";\r\nimport JDIcon, {IconConifgProps} from \"../../../atoms/icons/Icons\";\r\nimport {IContext} from \"../../../pages/bookingHost/BookingHostRouter\";\r\nimport {MemoType, NotiLevel} from \"../../../types/enum\";\r\nimport client from \"../../../apolloClient\";\r\nimport JDbadge from \"../../../atoms/badge/Badge\";\r\n\r\ninterface Iprops extends IconConifgProps {\r\n  context: IContext;\r\n}\r\n\r\nconst NotiIcon: React.FC<Iprops> = ({context, ...props}) => {\r\n  const {house} = context;\r\n  const {data} = useQuery<getNotis, getNotisVariables>(GET_NOTI, {\r\n    client,\r\n    variables: {houseId: house._id, count: 20}\r\n  });\r\n\r\n  const notis = queryDataFormater(data, \"GetNotis\", \"notis\", []) || [];\r\n\r\n  let countNew = 0;\r\n  let countWarn = 0;\r\n\r\n  notis.forEach(noti => {\r\n    if (!noti.isConfirm) {\r\n      if (noti.notiLevel === NotiLevel.NORMAL) countNew++;\r\n      if (noti.notiLevel === NotiLevel.WARN) countWarn++;\r\n    }\r\n  });\r\n\r\n  const badges = (() => {\r\n    let tempbadges = [];\r\n    if (countNew !== 0 && countWarn === 0)\r\n      tempbadges.push(<JDbadge key={`badgeNotiNew`} thema=\"new\" />);\r\n    if (countWarn !== 0)\r\n      tempbadges.push(<JDbadge key={`badgeNotiWarn`} thema=\"error\" />);\r\n    return tempbadges;\r\n  })();\r\n\r\n  return <JDIcon icon=\"notify\" {...props} dots={badges} />;\r\n};\r\n\r\nexport default NotiIcon;\r\n"]},"metadata":{},"sourceType":"module"}