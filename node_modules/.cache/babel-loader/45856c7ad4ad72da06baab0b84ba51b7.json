{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\outPages\\\\reservation\\\\ReservationWrap.tsx\";\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React from \"react\";\nimport Reservation from \"./Reservation\";\nimport $ from \"jquery\";\nimport { onCompletedMessage } from \"../../../utils/utils\";\nimport { START_BOOKING_FOR_PUBLIC, GET_PAYMENT_AUTH } from \"../../../queries\";\nimport { isInIfram } from \"../../../utils/isInIfram\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport client from \"../../../apolloClient\";\n\n// 하우스 아이디를 우선 Props를 통해서 받아야함\nvar ReservationWrap = function ReservationWrap(_ref) {\n  var match = _ref.match,\n      publicKey = _ref.publicKey,\n      context = _ref.context,\n      modalHook = _ref.modalHook,\n      callBackCreateBookingMu = _ref.callBackCreateBookingMu;\n  // hpk 를 URL로 부터 받아 헤더에 셋팅\n  sessionStorage.setItem(\"hpk\", publicKey || match.params.publickey); // 스타트부킹(게스트)\n\n  var _useMutation = useMutation(START_BOOKING_FOR_PUBLIC, {\n    client: client,\n    awaitRefetchQueries: true,\n    onCompleted: function onCompleted(_ref2) {\n      var StartBookingForPublic = _ref2.StartBookingForPublic;\n      process.env.NODE_ENV === \"development\" && onCompletedMessage(StartBookingForPublic, \"개발 메세지: StartBooking Sucess\", \"개발 메세지: StartBooking Fail\");\n      startBookingCallBackFn(StartBookingForPublic);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      startBookingForPublicMu = _useMutation2[0],\n      startBookingLoading = _useMutation2[1].loading; // 페이 인증\n\n\n  var _useQuery = useQuery(GET_PAYMENT_AUTH, {\n    client: client,\n    skip: true\n  }),\n      payAuthQu = _useQuery.refetch;\n\n  var startBookingCallBackFn = function startBookingCallBackFn(result) {\n    modalHook && modalHook.closeModal();\n    callBackCreateBookingMu && callBackCreateBookingMu(result);\n  };\n\n  if (isInIfram) {\n    $(\"html\").addClass(\"inIframe\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Reservation, {\n    context: context,\n    startBookingForPublicMu: startBookingForPublicMu,\n    payAuthQu: payAuthQu,\n    createLoading: startBookingLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nexport default ReservationWrap; // 🚁 iFrame 에서 상위페이지를 Redirect 하는 방법 [https://help.surveygizmo.com/help/break-out-of-iframe];\n// ⭐️⭐️ ⭐️⭐️ ⭐️⭐️ ⭐️⭐️ ⭐️⭐️  IFRAME 코드 IFRAME 코드 IFRAME 코드\n// {\n\n/* \r\n<iframe id=\"JD_RESV_APP\" style=\"border:none;min-height:400px\" scrolling=\"no\" title=\"JDqna\" src=\"http://localhost:3000/#/outpage/reservation/c61bf04b-446b-7907-54d5-d509147ca39e\" width=\"100%\" height=\"1500px\"></iframe>\r\n\r\n<script>\r\nwindow.addEventListener('message', function(e) {\r\n  console.log(e.data); \r\n  if(e.data.height) {\r\n    jQuery('#JD_RESV_APP').height(e.data.height);\r\n }\r\n})\r\n</script>\r\n  */\n// }","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/outPages/reservation/ReservationWrap.tsx"],"names":["React","Reservation","$","onCompletedMessage","START_BOOKING_FOR_PUBLIC","GET_PAYMENT_AUTH","isInIfram","useMutation","useQuery","client","ReservationWrap","match","publicKey","context","modalHook","callBackCreateBookingMu","sessionStorage","setItem","params","publickey","awaitRefetchQueries","onCompleted","StartBookingForPublic","process","env","NODE_ENV","startBookingCallBackFn","startBookingForPublicMu","startBookingLoading","loading","skip","payAuthQu","refetch","result","closeModal","addClass"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AAQA,SAASC,wBAAT,EAAmCC,gBAAnC,QAA2D,kBAA3D;AAEA,SAASC,SAAT,QAA0B,0BAA1B;AAEA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAUA;AACA,IAAMC,eACqB,GAAG,SADxBA,eACwB,OAMxB;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,uBACI,QADJA,uBACI;AACJ;AACAC,EAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8BL,SAAS,IAAID,KAAK,CAACO,MAAN,CAAaC,SAAxD,EAFI,CAIJ;;AAJI,qBAQAZ,WAAW,CACbH,wBADa,EAEb;AACEK,IAAAA,MAAM,EAANA,MADF;AAEEW,IAAAA,mBAAmB,EAAE,IAFvB;AAGEC,IAAAA,WAAW,EAAE,4BAA+B;AAAA,UAA5BC,qBAA4B,SAA5BA,qBAA4B;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IACEtB,kBAAkB,CAChBmB,qBADgB,EAEhB,6BAFgB,EAGhB,2BAHgB,CADpB;AAMAI,MAAAA,sBAAsB,CAACJ,qBAAD,CAAtB;AACD;AAXH,GAFa,CARX;AAAA;AAAA,MAMFK,uBANE;AAAA,MAOSC,mBAPT,oBAOAC,OAPA,EAwBJ;;;AAxBI,kBAyB2BrB,QAAQ,CAGrCH,gBAHqC,EAGnB;AAAEI,IAAAA,MAAM,EAANA,MAAF;AAAUqB,IAAAA,IAAI,EAAE;AAAhB,GAHmB,CAzBnC;AAAA,MAyBaC,SAzBb,aAyBIC,OAzBJ;;AA8BJ,MAAMN,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACO,MAAD,EAAiB;AAC9CnB,IAAAA,SAAS,IAAIA,SAAS,CAACoB,UAAV,EAAb;AACAnB,IAAAA,uBAAuB,IAAIA,uBAAuB,CAACkB,MAAD,CAAlD;AACD,GAHD;;AAKA,MAAI3B,SAAJ,EAAe;AACbJ,IAAAA,CAAC,CAAC,MAAD,CAAD,CAAUiC,QAAV,CAAmB,UAAnB;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAEtB,OADX;AAEE,IAAA,uBAAuB,EAAEc,uBAF3B;AAGE,IAAA,SAAS,EAAEI,SAHb;AAIE,IAAA,aAAa,EAAEH,mBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAxDD;;AA0DA,eAAelB,eAAf,C,CAEA;AAEA;AACA;;AACA;;;;;;;;;;;;AAYA","sourcesContent":["/* eslint-disable react/prop-types */\r\n/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport Reservation from \"./Reservation\";\r\nimport $ from \"jquery\";\r\nimport { onCompletedMessage } from \"../../../utils/utils\";\r\nimport {\r\n  startBooking_StartBooking,\r\n  startBookingForPublic,\r\n  startBookingForPublicVariables,\r\n  getPaymentAuth,\r\n  getPaymentAuthVariables\r\n} from \"../../../types/api\";\r\nimport { START_BOOKING_FOR_PUBLIC, GET_PAYMENT_AUTH } from \"../../../queries\";\r\nimport { IUseModal } from \"../../../hooks/hook\";\r\nimport { isInIfram } from \"../../../utils/isInIfram\";\r\nimport { IContext } from \"../../bookingHost/BookingHostRouter\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport client from \"../../../apolloClient\";\r\n\r\nexport interface IReservationWrapProps {\r\n  publicKey?: string;\r\n  // context가 존재하면 Host가 한 예약\r\n  context?: IContext;\r\n  modalHook?: IUseModal;\r\n  callBackCreateBookingMu?: (CreateBooking: startBooking_StartBooking) => void;\r\n}\r\n\r\n// 하우스 아이디를 우선 Props를 통해서 받아야함\r\nconst ReservationWrap: React.FC<IReservationWrapProps &\r\n  RouteComponentProps<any>> = ({\r\n  match,\r\n  publicKey,\r\n  context,\r\n  modalHook,\r\n  callBackCreateBookingMu\r\n}) => {\r\n  // hpk 를 URL로 부터 받아 헤더에 셋팅\r\n  sessionStorage.setItem(\"hpk\", publicKey || match.params.publickey);\r\n\r\n  // 스타트부킹(게스트)\r\n  const [\r\n    startBookingForPublicMu,\r\n    { loading: startBookingLoading }\r\n  ] = useMutation<startBookingForPublic, startBookingForPublicVariables>(\r\n    START_BOOKING_FOR_PUBLIC,\r\n    {\r\n      client,\r\n      awaitRefetchQueries: true,\r\n      onCompleted: ({ StartBookingForPublic }) => {\r\n        process.env.NODE_ENV === \"development\" &&\r\n          onCompletedMessage(\r\n            StartBookingForPublic,\r\n            \"개발 메세지: StartBooking Sucess\",\r\n            \"개발 메세지: StartBooking Fail\"\r\n          );\r\n        startBookingCallBackFn(StartBookingForPublic);\r\n      }\r\n    }\r\n  );\r\n  // 페이 인증\r\n  const { refetch: payAuthQu } = useQuery<\r\n    getPaymentAuth,\r\n    getPaymentAuthVariables\r\n  >(GET_PAYMENT_AUTH, { client, skip: true });\r\n\r\n  const startBookingCallBackFn = (result: any) => {\r\n    modalHook && modalHook.closeModal();\r\n    callBackCreateBookingMu && callBackCreateBookingMu(result);\r\n  };\r\n\r\n  if (isInIfram) {\r\n    $(\"html\").addClass(\"inIframe\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Reservation\r\n        context={context}\r\n        startBookingForPublicMu={startBookingForPublicMu}\r\n        payAuthQu={payAuthQu}\r\n        createLoading={startBookingLoading}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservationWrap;\r\n\r\n// 🚁 iFrame 에서 상위페이지를 Redirect 하는 방법 [https://help.surveygizmo.com/help/break-out-of-iframe];\r\n\r\n// ⭐️⭐️ ⭐️⭐️ ⭐️⭐️ ⭐️⭐️ ⭐️⭐️  IFRAME 코드 IFRAME 코드 IFRAME 코드\r\n// {\r\n/* \r\n<iframe id=\"JD_RESV_APP\" style=\"border:none;min-height:400px\" scrolling=\"no\" title=\"JDqna\" src=\"http://localhost:3000/#/outpage/reservation/c61bf04b-446b-7907-54d5-d509147ca39e\" width=\"100%\" height=\"1500px\"></iframe>\r\n\r\n<script>\r\nwindow.addEventListener('message', function(e) {\r\n  console.log(e.data); \r\n  if(e.data.height) {\r\n    jQuery('#JD_RESV_APP').height(e.data.height);\r\n }\r\n})\r\n</script>\r\n  */\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}