{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject115() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createNoti($houseIds: [ID]!, $createNotiParams: CreateNotiParams!) {\\n        CreateNoti(houseIds: $houseIds, createNotiParams: $createNotiParams) {\\n            ok\\n            error\\n        }\\n    } \\n\"]);\n\n  _templateObject115 = function _templateObject115() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject114() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation confirmNoti($houseId: ID!, $notiIds: [ID!]!) {\\n        ConfirmNoti(houseId: $houseId, notiIds:$notiIds) {\\n            ok\\n            error\\n        }\\n    } \\n\"]);\n\n  _templateObject114 = function _templateObject114() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject113() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation singleUpload($file: Upload!) {\\n    SingleUpload(file: $file) {\\n      ok\\n      error\\n      jdFile {\\n          ...Fimg\\n      }\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject113 = function _templateObject113() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject112() {\n  var data = _taggedTemplateLiteral([\"\\n    query getNotis($houseId: ID!, $count: Int!) {\\n        GetNotis(houseId: $houseId count: $count) {\\n            ok\\n            error\\n            notis {\\n                ...FNoti\\n            }\\n        }\\n    }\\n\", \"\\n\"]);\n\n  _templateObject112 = function _templateObject112() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject111() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteMemo($memoId: ID!) {\\n        DeleteMemo(memoId: $memoId) {\\n            ok\\n            error\\n        }\\n    } \\n\"]);\n\n  _templateObject111 = function _templateObject111() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject110() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createMemo($houseId: ID!, $createMemoParams: CreateMemoParams!) {\\n        CreateMemo(houseId: $houseId, createMemoParams: $createMemoParams) {\\n            ok\\n            error\\n        }\\n    } \\n\"]);\n\n  _templateObject110 = function _templateObject110() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject109() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateMemo($memoId: ID!, $updateMemoParams: UpdateMemoParams!) {\\n        UpdateMemo(memoId: $memoId, updateMemoParams: $updateMemoParams) {\\n            ok\\n            error\\n        }\\n    } \\n\"]);\n\n  _templateObject109 = function _templateObject109() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject108() {\n  var data = _taggedTemplateLiteral([\"\\n    query getMemos($houseId: ID!, $memoType: MemoType) {\\n        GetMemos(houseId: $houseId, memoType: $memoType) {\\n            ok\\n            error\\n            memos {\\n                ...Fmemo\\n            }\\n        }\\n    }\\n\", \"\\n\"]);\n\n  _templateObject108 = function _templateObject108() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject107() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateHM($houseId: ID!, $updateParams: UpdateHMparams!) {\\n        UpdateHM(houseId: $houseId, updateParams: $updateParams) {\\n            ok\\n            error\\n        }\\n    } \\n\"]);\n\n  _templateObject107 = function _templateObject107() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject106() {\n  var data = _taggedTemplateLiteral([\"\\n    query getHMforPublic {\\n            GetHMforPublic {\\n                ok\\n                error\\n                HM {\\n                    ...FHM\\n                    menus {\\n                        ...FHMmenu\\n                    }\\n                    location {\\n                        address\\n                        addressDetail\\n                        lat\\n                        lng\\n                    }\\n                }\\n            }\\n        } \\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject106 = function _templateObject106() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject105() {\n  var data = _taggedTemplateLiteral([\"\\n    query getHM($houseId: ID!) {\\n            GetHM(houseId:$houseId) {\\n                ok\\n                error\\n                HM {\\n                    ...FHM\\n                    menus {\\n                        ...FHMmenu\\n                    }\\n                    location {\\n                        address\\n                        addressDetail\\n                        lat\\n                        lng\\n                    }\\n                }\\n            }\\n        } \\n    \", \"\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject105 = function _templateObject105() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject104() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateSender($houseId: ID!, $sender: SmsSenderInput!) {\\n        UpdateSender(houseId: $houseId, sender: $sender) {\\n            ok\\n            error\\n            sender {\\n                ...FsmsSender\\n            }\\n            verified\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject104 = function _templateObject104() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject103() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation confirmBooking(\\n        $bookingId: ID!\\n    ) {\\n        ConfirmBooking(\\n        bookingId: $bookingId\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject103 = function _templateObject103() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject102() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateUserForSU(\\n        $productId: ID!\\n        $productParams: UpdateProductParams!\\n        $houseId: ID!\\n        $status: HouseStatus!\\n    ) {\\n        UpdateProductForSU(productId: $productId, params: $productParams) {\\n            ok\\n            error\\n        }\\n        UpdateHouse(houseId: $houseId, status: $status) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject102 = function _templateObject102() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject101() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation sendSms(\\n        $receivers: [PhoneNumber!]\\n        $msg: String!\\n        $smsInfoId: ID!\\n        $bookingIds: [ID!]\\n    ) {\\n        SendSms(bookingIds:$bookingIds, smsInfoId: $smsInfoId, receivers: $receivers, msg: $msg) {\\n            ok\\n            error\\n            result {\\n                resultCode\\n                message\\n                msgType\\n                msgId\\n                successCnt\\n                errorCnt\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject101 = function _templateObject101() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject100() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateSmsTemplate(\\n        $smsTemplateId: ID!\\n        $houseId: ID!\\n        $params: UpdateSmsTemplateInput!\\n    ) {\\n        UpdateSmsTemplate(\\n            smsTemplateId: $smsTemplateId\\n            houseId: $houseId\\n            params: $params\\n        ) {\\n            ok\\n            error\\n            smsTemplate {\\n                ...FsmsTemplate\\n            }\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject100 = function _templateObject100() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject99() {\n  var data = _taggedTemplateLiteral([\"\\n    query getSmsInfo($houseId: ID!) {\\n        GetSmsInfo(houseId: $houseId) {\\n            ok\\n            error\\n            smsInfo {\\n                _id\\n                sender {\\n                    ...FsmsSender\\n                }\\n                receivers\\n                smsTemplates {\\n                    ...FsmsTemplate\\n                }\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject99 = function _templateObject99() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject98() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteSmsTemplate($smsInfoId: ID!, $smsTemplateId: ID!) {\\n        DeleteSmsTemplate(\\n            smsInfoId: $smsInfoId\\n            smsTemplateId: $smsTemplateId\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject98 = function _templateObject98() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject97() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createSmsTemplate($houseId: ID!, $params: SmsTemplateInput!) {\\n        CreateSmsTemplate(houseId: $houseId, params: $params) {\\n            ok\\n            error\\n            smsTemplate {\\n                ...FsmsTemplate\\n            }\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject97 = function _templateObject97() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject96() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation refundProduct($houseId: ID!, $productId: ID!) {\\n        RefundProduct(houseId: $houseId, productId: $productId) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject96 = function _templateObject96() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject95() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation buyProduct($houseId: ID!, $productTypeId: ID!, $appInfoRequest: AppInfoRequestInput!) {\\n        BuyProduct(houseId: $houseId, productTypeId: $productTypeId, appInfoRequest: $appInfoRequest) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject95 = function _templateObject95() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject94() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteHouse($id: String!) {\\n        DeleteHouse(_id: $id) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject94 = function _templateObject94() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject93() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createHouse(\\n        $name: String!\\n        $houseType: HouseType!\\n        $location: LocationInput!\\n    ) {\\n        CreateHouse(name: $name, houseType: $houseType, location: $location) {\\n            ok\\n            error\\n            house {\\n                _id\\n                name\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject93 = function _templateObject93() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject92() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateHouseConfig(\\n        $houseId: ID!\\n        $UpdateHouseConfigParams: UpdateHouseConfigParams\\n    ) {\\n        UpdateHouseConfig(\\n            houseId: $houseId\\n            params: $UpdateHouseConfigParams\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject92 = function _templateObject92() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject91() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateHouse(\\n        $houseId: ID!\\n        $name: String\\n        $houseType: HouseType\\n        $location: LocationInput\\n        $completeDefaultSetting: Boolean\\n        $refundPolicy: [TermsOfRefundInput!]\\n        $termsOfBooking: TermsOfBookingInput\\n    ) {\\n        UpdateHouse(\\n            houseId: $houseId\\n            name: $name\\n            houseType: $houseType\\n            location: $location\\n            refundPolicy: $refundPolicy\\n            termsOfBooking: $termsOfBooking\\n            completeDefaultSetting: $completeDefaultSetting\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject91 = function _templateObject91() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject90() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation emailSignUp(\\n        $name: Name!\\n        $email: EmailAddress!\\n        $phoneNumber: PhoneNumber!\\n        $password: Password!\\n    ) {\\n        EmailSignUp(\\n            name: $name\\n            email: $email\\n            password: $password\\n            phoneNumber: $phoneNumber\\n        ) {\\n            ok\\n            error\\n            token\\n        }\\n    }\\n\"]);\n\n  _templateObject90 = function _templateObject90() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject89() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation completePhoneVerification($key: String!) {\\n        CompletePhoneVerification(key: $key) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject89 = function _templateObject89() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject88() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation startPhoneVerificationWithPhoneNumber($phoneNumber: PhoneNumber!) {\\n        StartSenderVerification(phoneNumber: $phoneNumber) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject88 = function _templateObject88() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject87() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation startPhoneVerification {\\n        StartPhoneVerification {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject87 = function _templateObject87() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject86() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateMyProfile(\\n        $name: Name!\\n        $phoneNumber: PhoneNumber!\\n        $email: EmailAddress!\\n        $password: Password!\\n        $profileImg: JdFileInput\\n    ) {\\n        UpdateMyProfile(\\n            name: $name\\n            phoneNumber: $phoneNumber\\n            email: $email\\n            password: $password\\n            profileImg: $profileImg\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject86 = function _templateObject86() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject85() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateSeason(\\n        $name: String\\n        $start: DateTime\\n        $end: DateTime\\n        $seasonId: ID!\\n        $color: String\\n        $description: String\\n        $seasonPrices: [SeasonPriceInput!]\\n    ) {\\n        UpdateSeason(\\n            seasonPrices: $seasonPrices\\n            name: $name\\n            start: $start\\n            end: $end\\n            seasonId: $seasonId\\n            color: $color\\n            description: $description\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject85 = function _templateObject85() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject84() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteSeason($seasonId: ID!, $houseId: ID!) {\\n        DeleteSeason(seasonId: $seasonId, houseId: $houseId) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject84 = function _templateObject84() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject83() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation changePriority($seasonId: ID!, $houseId: ID!, $priority: Int!) {\\n        ChangePriority(\\n            seasonId: $seasonId\\n            houseId: $houseId\\n            priority: $priority\\n        ) {\\n            ok\\n            error\\n            season {\\n                _id\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject83 = function _templateObject83() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject82() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createSeason(\\n        $name: String!\\n        $start: DateTime!\\n        $end: DateTime!\\n        $houseId: ID!\\n        $color: String\\n        $description: String\\n        $seasonPrices: [SeasonPriceInput!]\\n    ) {\\n        CreateSeason(\\n            name: $name\\n            start: $start\\n            end: $end\\n            houseId: $houseId\\n            color: $color\\n            description: $description\\n            seasonPrices: $seasonPrices\\n        ) {\\n            ok\\n            error\\n            season {\\n                _id\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject82 = function _templateObject82() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject81() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createSeasonPrice(\\n        $roomTypeId: ID!\\n        $seasonId: ID!\\n        $defaultPrice: Float!\\n        $dayOfWeekPriceList: [DayOfWeekPriceInput!]\\n    ) {\\n        CreateSeasonPrice(\\n            roomTypeId: $roomTypeId\\n            seasonId: $seasonId\\n            defaultPrice: $defaultPrice\\n            dayOfWeekPriceList: $dayOfWeekPriceList\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject81 = function _templateObject81() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject80() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateRoomType(\\n        $roomTypeId: ID!\\n        $params: UpdateRoomTypeInput!\\n    ) {\\n        UpdateRoomType(\\n            roomTypeId: $roomTypeId\\n            params: $params\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject80 = function _templateObject80() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject79() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateRoom($roomId: ID!, $name: String) {\\n        UpdateRoom(roomId: $roomId, name: $name) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject79 = function _templateObject79() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject78() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteRoom($roomId: ID!) {\\n        DeleteRoom(roomId: $roomId) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject78 = function _templateObject78() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject77() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteRoomType($houseId: ID!, $roomTypeId: ID!) {\\n        DeleteRoomType(houseId: $houseId, roomTypeId: $roomTypeId) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject77 = function _templateObject77() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject76() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteDailyPrice($roomTypeId: ID!, $date: DateTime!) {\\n        DeleteDailyPrice(roomTypeId: $roomTypeId, date: $date) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject76 = function _templateObject76() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject75() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteBooking($bookingId: ID!) {\\n        DeleteBooking(bookingId: $bookingId) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject75 = function _templateObject75() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject74() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createDailyPrice(\\n        $price: Float!\\n        $roomTypeId: ID!\\n        $houseId: ID!\\n        $date: DateTime!\\n    ) {\\n        CreateDailyPrice(\\n            price: $price\\n            roomTypeId: $roomTypeId\\n            houseId: $houseId\\n            date: $date\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject74 = function _templateObject74() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject73() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createBlock(\\n        $checkIn: DateTime!\\n        $checkOut: DateTime!\\n        $houseId: ID!\\n        $roomId: ID!\\n        $bedIndex: Int!\\n    ) {\\n        CreateBlock(\\n            checkIn: $checkIn\\n            checkOut: $checkOut\\n            houseId: $houseId\\n            roomId: $roomId\\n            bedIndex: $bedIndex\\n        ) {\\n            ok\\n            error\\n            block {\\n                ...Fblock\\n                room {\\n                    ...Froom\\n                }\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject73 = function _templateObject73() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject72() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteBlock($blockId: ID!) {\\n        DeleteBlock(blockId: $blockId) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject72 = function _templateObject72() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject71() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createRoom($name: String!, $roomType: ID!) {\\n        CreateRoom(name: $name, roomType: $roomType) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject71 = function _templateObject71() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject70() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createRoomType(\\n        $params: CreateRoomTypeInput!\\n    ) {\\n        CreateRoomType(\\n            params: $params\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject70 = function _templateObject70() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject69() {\n  var data = _taggedTemplateLiteral([\"\\n    query getPaymentAuth(\\n        $price: Float!\\n    ){\\n        GetPaymentAuth(\\n            price: $price\\n        ){\\n            ok\\n            error\\n            auth {\\n                merchantId\\n                mid\\n                hash\\n            }\\n            houseName\\n            date\\n        }\\n    }\\n\"]);\n\n  _templateObject69 = function _templateObject69() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject68() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation allocateGuestToRoom($guestId: ID!, $allocateInfo: AllocateInfoInput!, $options: AllocateOptions) {\\n        AllocateGuestToRoom(\\n            guestId: $guestId\\n            allocateInfo: $allocateInfo\\n            options: $options\\n        ) {\\n            ok\\n            error\\n            guest {\\n                ...Fguest\\n            }\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject68 = function _templateObject68() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject67() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation startBooking(\\n        $houseId: ID!\\n        $bookerParams: StartBookingBookerInput!\\n        $checkInOut: CheckInOutInput!\\n        $guestDomitoryParams: [StartBookingDomitoryGuestInput!]\\n        $guestRoomParams: [StartBookingRoomGuestInput!]\\n        $paymentParams: StartBookingPaymentInput!\\n        $allocationParams: [AllocationInput!]\\n        $forceToAllocate: Boolean\\n    ) {\\n        StartBooking(\\n            houseId: $houseId\\n            bookerParams: $bookerParams\\n            checkInOut: $checkInOut\\n            guestDomitoryParams: $guestDomitoryParams\\n            guestRoomParams: $guestRoomParams\\n            paymentParams: $paymentParams\\n            allocationParams: $allocationParams\\n            forceToAllocate: $forceToAllocate\\n        ) {\\n            ok\\n            error\\n            bookingTransaction {\\n              ...FbookingTransaction\\n              booking {\\n                  _id\\n              }\\n            }\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject67 = function _templateObject67() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject66() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation startBookingForPublic(\\n        $bookerParams: StartBookingBookerInput!\\n        $checkInOut: CheckInOutInput!\\n        $guestDomitoryParams: [StartBookingDomitoryGuestInput!]\\n        $guestRoomParams: [StartBookingRoomGuestInput!]\\n        $paymentParams: StartBookingPaymentInput!\\n    ) {\\n        StartBookingForPublic(\\n            bookerParams: $bookerParams\\n            checkInOut: $checkInOut\\n            guestDomitoryParams: $guestDomitoryParams\\n            guestRoomParams: $guestRoomParams\\n            paymentParams: $paymentParams\\n        ) {\\n            ok\\n            error\\n            bookingTransaction {\\n              ...FbookingTransaction\\n            }\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject66 = function _templateObject66() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject65() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteGuests($guestIds: [ID!]) {\\n        DeleteGuests(guestIds: $guestIds) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject65 = function _templateObject65() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject64() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateBooking(\\n        $bookingId: ID!\\n        $params: UpdateBookingMutationParamsInput!\\n        $sendSmsFlag: Boolean\\n    ) {\\n        UpdateBooking(\\n            bookingId: $bookingId\\n            params: $params\\n            sendSmsFlag: $sendSmsFlag\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject64 = function _templateObject64() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject63() {\n  var data = _taggedTemplateLiteral([\"\\n    query getAllSeasonTable($houseId: ID!) {\\n        GetAllSeason(houseId: $houseId) {\\n            ok\\n            error\\n            seasons {\\n                ...FallSeason\\n            }\\n        }\\n        GetAllRoomType(houseId: $houseId) {\\n            ok\\n            error\\n            roomTypes {\\n                _id\\n                name\\n                index\\n                description\\n                defaultPrice\\n            }\\n        }\\n        GetSeasonPrice(houseId: $houseId) {\\n            ok\\n            error\\n            seasonPrices {\\n                _id\\n                roomType {\\n                    _id\\n                }\\n                season {\\n                    _id\\n                }\\n                defaultPrice\\n                dayOfWeekPriceList {\\n                    day\\n                    price\\n                    additionalPrice\\n                }\\n            }\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject63 = function _templateObject63() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject62() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation changeIndexForRoomType($roomTypeId: ID!, $houseId: ID!, $index: Int!) {\\n        ChangeIndexForRoomType(\\n            roomTypeId:$roomTypeId\\n            houseId: $houseId\\n            index: $index\\n        ) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject62 = function _templateObject62() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject61() {\n  var data = _taggedTemplateLiteral([\"\\n    query getSalesStatistic(\\n        $houseId: ID!\\n        $checkIn: DateTime!\\n        $checkOut: DateTime!\\n        $unit: SalesStatisticsUnit!\\n        $groupByPayMethod: Boolean\\n    ){ \\n        GetSalesStatistic(houseId:$houseId, checkIn:$checkIn, checkOut:$checkOut, unit:$unit, groupByPayMethod: $groupByPayMethod) {\\n            ok\\n            error\\n            data {\\n                dateInfo {\\n                    year\\n                    month\\n                    week\\n                    date\\n                    dayOfWeek\\n                }\\n                price\\n                payMethod\\n            }\\n        }\\n}\"]);\n\n  _templateObject61 = function _templateObject61() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject60() {\n  var data = _taggedTemplateLiteral([\"\\n    query getBooking($bookingId: ID!) {\\n        GetBooking(bookingId: $bookingId) {\\n            ok\\n            error\\n            booking {\\n                ...Fbooking\\n                guests {\\n                    ... on GuestDomitory {\\n                        ...FguestDomitory\\n                        roomType {\\n                            _id\\n                            name\\n                        }\\n                        room {\\n                            _id\\n                            name\\n                        }\\n                    }\\n                    ... on GuestRoom {\\n                        ...FguestRoom\\n                        roomType {\\n                            _id\\n                            name\\n                        }\\n                        room {\\n                            _id\\n                            name\\n                        }\\n                    }\\n                }\\n                roomTypes {\\n                    _id\\n                    name\\n                    pricingType\\n                }\\n                createdAt\\n                updatedAt\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject60 = function _templateObject60() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject59() {\n  var data = _taggedTemplateLiteral([\"\\n    query getBookings(\\n        $houseId: ID!\\n        $page: Int!\\n        $count: Int!\\n        $filter: GetBookingsFilter\\n    ) {\\n        GetBookings(\\n            houseId: $houseId\\n            page: $page\\n            count: $count\\n            filter: $filter\\n        ) {\\n            ok\\n            error\\n            bookings {\\n                ...Fbooking\\n                guests {\\n                    ... on GuestDomitory {\\n                        ...FguestDomitory\\n                        roomType {\\n                            _id\\n                            name\\n                        }\\n                    }\\n                    ... on GuestRoom {\\n                        ...FguestRoom\\n                        roomType {\\n                            _id\\n                        }\\n                    }\\n                }\\n                roomTypes {\\n                    _id\\n                    name\\n                    pricingType\\n                }\\n                createdAt\\n                updatedAt\\n            }\\n            pageInfo {\\n                ...FpageInfo\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject59 = function _templateObject59() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject58() {\n  var data = _taggedTemplateLiteral([\"\\n    query getCheckIns(\\n        $houseId: ID!\\n        $page: Int!\\n        $count: Int!\\n        $filter: GetBookingsFilter\\n    ) {\\n        GetBookings(\\n            houseId: $houseId\\n            page: $page\\n            count: $count\\n            filter: $filter\\n        ) {\\n            ok\\n            error\\n            bookings {\\n                checkInInfo {\\n            isIn\\n            checkInDateTime\\n            }\\n            }\\n        }\\n    }\"]);\n\n  _templateObject58 = function _templateObject58() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject57() {\n  var data = _taggedTemplateLiteral([\"\\n    query getPhoneNumbers(\\n        $houseId: ID!\\n        $page: Int!\\n        $count: Int!\\n        $filter: GetBookingsFilter\\n    ) {\\n        GetBookings(\\n            houseId: $houseId\\n            page: $page\\n            count: $count\\n            filter: $filter\\n        ) {\\n            ok\\n            error\\n            bookings {\\n                _id\\n                phoneNumber\\n            }\\n        }\\n    }\"]);\n\n  _templateObject57 = function _templateObject57() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject56() {\n  var data = _taggedTemplateLiteral([\"\\n    query getBookingForPublic(\\n        $transactionId: String\\n        $getBookingParam: GetBookingParams\\n        $skip: Boolean!\\n    ) {\\n        GetBookingForPublic(transactionId: $transactionId, getBookingParam:$getBookingParam) @skip(if: $skip) {\\n            ok\\n            error\\n            booking {\\n                ...Fbooking\\n                guests {\\n                    ...Fguest\\n                    roomType {\\n                        _id\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\", \"\\n\", \"\\n\"]);\n\n  _templateObject56 = function _templateObject56() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject55() {\n  var data = _taggedTemplateLiteral([\"\\n    query getFileTxt($path:String!) {\\n        GetFileTxt(path: $path) {\\n            ok\\n            error\\n            fileTxt\\n        }\\n    }\\n\"]);\n\n  _templateObject55 = function _templateObject55() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject54() {\n  var data = _taggedTemplateLiteral([\"\\n    query getAllReadMe {\\n        GetAllReadMe {\\n            ok\\n            error\\n            paths\\n        }\\n    }\\n\"]);\n\n  _templateObject54 = function _templateObject54() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject53() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateBlockOption(\\n        $guestId: ID!\\n        $blockOption: BlockOptionInput!\\n        $applyWithBooking: Boolean!\\n    ) {\\n        UpdateBlockOption(guestId:$guestId, blockOption: $blockOption, applyWithBooking:$applyWithBooking) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject53 = function _templateObject53() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject52() {\n  var data = _taggedTemplateLiteral([\"\\n    query getUserForSU($userId: ID!) {\\n        GetUserForSU(userId: $userId) {\\n            ok\\n            error\\n            user {\\n                ...FieldsUser\\n                houses {\\n                    houseConfig {\\n                        ...FhouseConfig\\n                    }\\n                    smsInfo {\\n                        _id\\n                    }\\n                    roomTypes {\\n                        _id\\n                    }\\n                    appInfo {\\n                        url\\n                    }\\n                    product {\\n                        ...Fproduct\\n                        productType {\\n                            _id\\n                        }\\n                        appInfoRequested { \\n                            ...FappInfoRequest\\n                        }\\n                    }\\n                    _id\\n                    name\\n                    houseType\\n                    location {\\n                        address\\n                        addressDetail\\n                    }\\n                    createdAt\\n                    updatedAt\\n                }\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject52 = function _templateObject52() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject51() {\n  var data = _taggedTemplateLiteral([\"\\n    query getAllRoomTypePrice(\\n        $houseId: ID!\\n        $checkIn: DateTime!\\n        $checkOut: DateTime!\\n    ) {\\n        GetAllRoomType(houseId: $houseId) {\\n            ok\\n            error\\n            roomTypes {\\n                _id\\n                name\\n                index\\n                description\\n            }\\n        }\\n        GetAllDailyPrice(houseId: $houseId, checkIn: $checkIn, checkOut: $checkOut) {\\n            ok\\n            error\\n            dailyPrices {\\n                _id\\n                price\\n                date\\n                roomType {\\n                    _id\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject51 = function _templateObject51() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject50() {\n  var data = _taggedTemplateLiteral([\"\\n    query getAllRoomTypeWithGuest(\\n        $houseId: ID!\\n        $checkIn: DateTime!\\n        $checkOut: DateTime!\\n        $bookingStatuses: [BookingStatus]\\n    ) {\\n        GetAllRoomType(houseId: $houseId) {\\n            ok\\n            error\\n            roomTypes {\\n                ...FroomType\\n                rooms {\\n                    ...Froom\\n                }\\n            }\\n        }\\n        GetGuests(\\n            checkIn: $checkIn\\n            checkOut: $checkOut\\n            houseId: $houseId\\n            bookingStatuses: $bookingStatuses\\n        ) {\\n            ok\\n            error\\n            guests {\\n                ...on GuestDomitory {\\n                    ...FguestDomitory\\n                    room {\\n                        ...Froom\\n                    }\\n                    roomType {\\n                        _id\\n                    }\\n                    booking {\\n                        ...Fbooking\\n                    }\\n                    blockOption {\\n                        ...FblockOp\\n                    }\\n                }\\n                ...on GuestRoom {\\n                    ...FguestRoom\\n                    roomType {\\n                        _id\\n                    }\\n                    room {\\n                        ...Froom\\n                    }\\n                    booking {\\n                        ...Fbooking\\n                    }\\n                    blockOption {\\n                        ...FblockOp\\n                    }\\n                }\\n            }\\n        }\\n\\n        GetBlocks(checkIn: $checkIn, checkOut: $checkOut, houseId: $houseId) {\\n            ok\\n            error\\n            blocks {\\n                ...Fblock\\n                room {\\n                    ...Froom\\n                }\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject50 = function _templateObject50() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject49() {\n  var data = _taggedTemplateLiteral([\"\\n    query getRoomTypeDatePrices(\\n        $checkIn: DateTime!\\n        $checkOut: DateTime!\\n        $roomTypeIds: [ID!]\\n        $houseId: ID\\n    ) {\\n        GetRoomTypeDatePrices(checkIn: $checkIn, checkOut:$checkOut, roomTypeIds:$roomTypeIds, houseId: $houseId) {\\n            ...FroomTypePriceResult\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject49 = function _templateObject49() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject48() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FroomTypePriceResult on GetRoomTypeDatePricesResponse {\\n        ok\\n        error\\n        roomTypeDatePrices {\\n            roomType {\\n                ...FroomType\\n            }\\n            datePrices {\\n                date\\n                price\\n            }\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject48 = function _templateObject48() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject47() {\n  var data = _taggedTemplateLiteral([\"\\n    query findBookingForBooker(\\n        $name: Name!\\n        $phoneNumber: PhoneNumber!\\n        $password: String!\\n    ) {\\n        FindBookingForBooker(\\n            name: $name\\n            phoneNumber: $phoneNumber\\n            password: $password\\n        ) {\\n            ok\\n            error\\n            bookings {\\n                ...Fbooking\\n                payment {\\n                    ...Fpayment\\n                }\\n                guests {\\n                    ...Fguest\\n                    roomType {\\n                        _id\\n                        name\\n                        index\\n                        description\\n                    }\\n                }\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject47 = function _templateObject47() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject46() {\n  var data = _taggedTemplateLiteral([\"\\n    query findBooking(\\n        $name: Name!\\n        $phoneNumber: PhoneNumber!\\n        $password: String!\\n        $houseId: ID\\n    ) {\\n        FindBooking(\\n            name: $name\\n            phoneNumber: $phoneNumber\\n            password: $password\\n            houseId: $houseId\\n        ) {\\n            ok\\n            error\\n            bookings {\\n                ...Fbooking\\n                guests {\\n                    ...Fguest\\n                    roomType {\\n                        _id\\n                        name\\n                        index\\n                        description\\n                    }\\n                }\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject46 = function _templateObject46() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject45() {\n  var data = _taggedTemplateLiteral([\"\\n    query getAllRoomType($houseId: ID!) {\\n        GetAllRoomType(houseId: $houseId) {\\n            ...FsharedGetAllRoomType\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject45 = function _templateObject45() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject44() {\n  var data = _taggedTemplateLiteral([\"\\n    query getAllRoomTypeForBooker {\\n        GetAllRoomTypeForBooker {\\n            ...FsharedGetAllRoomType\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject44 = function _templateObject44() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject43() {\n  var data = _taggedTemplateLiteral([\"\\n    query getCapacityToRoomTypeForBooker(\\n        $roomTypeId: ID!\\n        $checkIn: DateTime!\\n        $checkOut: DateTime!\\n        $initValue: InitValueGetCapacityToRoomInput\\n    ) {\\n    GetCapacityToRoomTypeForBooker(roomTypeId:$roomTypeId, checkIn: $checkIn, checkOut:$checkOut, initValue: $initValue) {\\n        ok\\n        error\\n        capacityRoomType {\\n            ... on CapacityRoomType {\\n                count\\n            }\\n            ... on CapacityRoomTypeDomitory {\\n                    availableCount {\\n                        male\\n                        female\\n                        total\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject43 = function _templateObject43() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject42() {\n  var data = _taggedTemplateLiteral([\"\\n    query getCapacityToRoomType(\\n        $roomTypeId: ID!\\n        $checkIn: DateTime!\\n        $checkOut: DateTime!\\n        $initValue: InitValueGetCapacityToRoomInput\\n    ) {\\n    GetCapacityToRoomType(roomTypeId:$roomTypeId, checkIn:$checkIn, checkOut:$checkOut, initValue: $initValue) {\\n        ok\\n        error\\n        capacityRoomType {\\n            ... on CapacityRoomType {\\n                count\\n            }\\n            ... on CapacityRoomTypeDomitory {\\n                    availableCount {\\n                        male\\n                        female\\n                        total\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject42 = function _templateObject42() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject41() {\n  var data = _taggedTemplateLiteral([\"\\n  query dailyPriceGetPrice(\\n    $houseId: ID!\\n    $checkIn: DateTime!\\n    $checkOut: DateTime!\\n  ) {\\n    GetRoomTypeDatePrices(houseId:$houseId, checkIn: $checkIn, checkOut: $checkOut) {\\n      ok\\n      error\\n      roomTypeDatePrices {\\n        roomType {\\n          ...FroomType\\n        }\\n        datePrices {\\n          date\\n          price\\n        }\\n      }\\n    }\\n    GetAllRoomType(houseId: $houseId) {\\n      ok\\n      error\\n      roomTypes {\\n        _id\\n        name\\n        index\\n        description\\n      }\\n    }\\n    GetAllDailyPrice(houseId: $houseId, checkIn: $checkIn, checkOut: $checkOut) {\\n      ok\\n      error\\n      dailyPrices {\\n        _id\\n        price\\n        date\\n        roomType {\\n          _id\\n        }\\n      }\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject41 = function _templateObject41() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject40() {\n  var data = _taggedTemplateLiteral([\"\\n    query getHouse($houseId: ID!) {\\n        GetHouse(houseId: $houseId) {\\n            ok\\n            error\\n            house {\\n                _id\\n                name\\n                houseType\\n                smsInfo {\\n                    _id\\n                }\\n                roomTypes {\\n                    ...FroomType\\n                    rooms {\\n                        ...Froom\\n                    }\\n                }\\n                appInfo {\\n                    url\\n                }\\n                product {\\n                    _id\\n                    name\\n                    productType {\\n                        _id\\n                    }\\n                }\\n                location {\\n                    address\\n                    addressDetail\\n                }\\n                HM {\\n                    publicKey\\n                }\\n                publicKey\\n                createdAt\\n                updatedAt\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject40 = function _templateObject40() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject39() {\n  var data = _taggedTemplateLiteral([\"\\n    query emailSignIn($email: EmailAddress!, $password: Password!) {\\n        EmailSignIn(email: $email, password: $password) {\\n            ok\\n            error\\n            token\\n        }\\n    }\\n\"]);\n\n  _templateObject39 = function _templateObject39() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject38() {\n  var data = _taggedTemplateLiteral([\"\\n    query getHousesForSU($page: Int!, $count: Int!) {\\n        GetHousesForSU(page: $page, count: $count) {\\n            ok\\n            error\\n            houses {\\n                _id\\n                name\\n                houseType\\n                user {\\n                    _id\\n                    phoneNumber\\n                    profileImg {\\n                        ...Fimg\\n                    }\\n                }\\n                location {\\n                    address\\n                    addressDetail\\n                }\\n                createdAt\\n                updatedAt\\n                product {\\n                    _id\\n                    name\\n                    productType {\\n                        _id\\n                    }\\n                }\\n            }\\n            pageInfo {\\n                ...FpageInfo\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject38 = function _templateObject38() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject37() {\n  var data = _taggedTemplateLiteral([\"\\n    query getMyProfile {\\n        GetMyProfile {\\n            user {\\n                ...FieldsUser\\n                houses {\\n                    # HM {\\n                    #     publicKey\\n                    # }\\n                    houseConfig {\\n                        ...FhouseConfig\\n                    }\\n                    smsInfo {\\n                        _id\\n                    }\\n                    roomTypes {\\n                        _id\\n                        roomCount\\n                    }\\n                    appInfo {\\n                        url\\n                    }\\n                    product {\\n                        ...Fproduct\\n                        productType {\\n                            _id\\n                        }\\n                        appInfoRequested { \\n                            ...FappInfoRequest\\n                        }\\n                    }\\n                    ...Fhouse\\n                    _id\\n                    name\\n                    completeDefaultSetting\\n                    houseType\\n                    publicKey\\n                    location {\\n                        address\\n                        addressDetail\\n                    }\\n                    createdAt\\n                    updatedAt\\n                }\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject37 = function _templateObject37() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject36() {\n  var data = _taggedTemplateLiteral([\"\\n    query getAllProductTypes {\\n        GetAllProductTypes {\\n            ok\\n            error\\n            productTypes {\\n                ...FproductType\\n            }\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject36 = function _templateObject36() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject35() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateSeasonPrices (\\n        $seasonPricesInputs: [UpdateSeasonPriceInput!]\\n        $defaultRoomTypePriceInputs: [RoomTypePriceInput!]\\n    ) {\\n        UpdateSeasonPrices(seasonPricesInputs:$seasonPricesInputs, defaultRoomTypePriceInputs: $defaultRoomTypePriceInputs) {\\n            ok\\n            error\\n        }\\n    }\\n\"]);\n\n  _templateObject35 = function _templateObject35() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject34() {\n  var data = _taggedTemplateLiteral([\"\\n    query getRoomTypeById($roomTypeId: ID!) {\\n        GetRoomTypeById(roomTypeId: $roomTypeId) {\\n            ok\\n            error\\n            roomType {\\n                _id\\n                name\\n                pricingType\\n                peopleCount\\n                peopleCountMax\\n                index\\n                roomGender\\n                img {\\n                    ...Fimg\\n                }\\n                description\\n                defaultPrice\\n                createdAt\\n                updatedAt\\n            }\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject34 = function _templateObject34() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject33() {\n  var data = _taggedTemplateLiteral([\"\\n    query getSmsHistory($smsInfoId: ID! $page: Int! $count: Int!) {\\n        GetSmsHistory(smsInfoId: $smsInfoId,  page: $page, count: $count) {\\n            ok\\n            error\\n            smsHistories {\\n                ...FsmsHistory\\n            }\\n            pageInfo {\\n                ...FpageInfo\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject33 = function _templateObject33() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject32() {\n  var data = _taggedTemplateLiteral([\"\\n    query getSpecification($houseId: ID!) {\\n        GetHouse(houseId: $houseId) {\\n            ok\\n            error\\n            house {\\n                _id\\n                name\\n                houseType\\n                status\\n                appInfo {\\n                    url\\n                }\\n                product {\\n                    ...Fproduct\\n                    appInfoRequested {\\n                        ...FappInfoRequest\\n                    }\\n                    productType {\\n                        _id\\n                        name\\n                    }\\n                }\\n                createdAt\\n                updatedAt\\n                user {\\n                    _id\\n                    name\\n                    phoneNumber\\n                    email\\n                    isPhoneVerified\\n                    userRole\\n                    userRoles\\n                }\\n                HM {\\n                    publicKey\\n                }\\n            }\\n        }\\n    }\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject32 = function _templateObject32() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject31() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FsharedGetAllRoomType on GetAllRoomTypeResponse {\\n        ok\\n        error\\n        roomTypes {\\n            _id\\n            name\\n            index\\n            description\\n            pricingType\\n            peopleCount\\n            peopleCountMax\\n            roomGender\\n            roomCount\\n            createdAt\\n            defaultPrice\\n            updatedAt\\n            img {\\n                ...Fimg\\n            }\\n            rooms {\\n                _id\\n                name\\n                index\\n                createdAt\\n                updatedAt\\n            }\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject31 = function _templateObject31() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject30() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FieldsUser on User {\\n        _id\\n        name\\n        phoneNumber\\n        password\\n        email\\n        profileImg {\\n            ...Fimg\\n        }\\n        isPhoneVerified\\n        checkPrivacyPolicy\\n        userRole\\n        userRoles\\n        createdAt\\n        updatedAt\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject30 = function _templateObject30() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject29() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FroomTypeCapacity on RoomTypeCapacity {\\n        roomTypeId\\n        pricingType\\n        availablePeopleCount {\\n            ...FavailablePeopleCount\\n        }\\n        roomCapacityList {\\n            roomId\\n            roomGender\\n            availableGenders\\n            availableCount\\n            peopleCount\\n            emptyBeds\\n        }\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject29 = function _templateObject29() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject28() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FguestRoom on GuestRoom {\\n        ...Fguest\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject28 = function _templateObject28() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject27() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FguestDomitory on GuestDomitory {\\n        _id\\n        gender\\n        bedIndex\\n        ...Fguest\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject27 = function _templateObject27() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject26() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Fguest on GuestGQLInterface {\\n        _id\\n        pricingType\\n        checkIn\\n        checkOut\\n    }\\n\"]);\n\n  _templateObject26 = function _templateObject26() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject25() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Fblock on Block {\\n        _id\\n        bedIndex\\n        checkIn\\n        checkOut\\n        createdAt\\n        updatedAt\\n    }\\n\"]);\n\n  _templateObject25 = function _templateObject25() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject24() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FbookingTransactionProgress on BookingTransactionProgress {\\n        startBooking {\\n            status\\n            updatedAt\\n        }\\n        payment {\\n            status\\n            updatedAt   \\n        }\\n        completeBooking {\\n            status\\n            updatedAt\\n        }\\n    }\\n\"]);\n\n  _templateObject24 = function _templateObject24() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject23() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FbookingTransaction on BookingTransaction {\\n        _id\\n        transactionId\\n        createdAt\\n        updatedAt\\n    }\\n\"]);\n\n  _templateObject23 = function _templateObject23() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject22() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FblockOp on BlockOption {\\n        color\\n    }\\n\"]);\n\n  _templateObject22 = function _templateObject22() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject21() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Froom on Room {\\n        _id\\n        name\\n        pricingType\\n        peopleCount\\n        peopleCountMax\\n        index\\n        createdAt\\n        updatedAt\\n        roomSrl\\n    }\\n\"]);\n\n  _templateObject21 = function _templateObject21() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject20() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Fbooking on Booking {\\n        _id\\n        roomTypes {\\n            ...FroomType\\n        }\\n        isNew\\n        name\\n        password\\n        phoneNumber\\n        email\\n        checkInInfo {\\n            isIn\\n            checkInDateTime\\n        }\\n        memo\\n        agreePrivacyPolicy\\n        checkIn\\n        checkOut\\n        payment {\\n            ...Fpayment\\n        }\\n        funnels\\n        status\\n        createdAt\\n        updatedAt\\n        isNew\\n        isConfirm\\n    }\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject20 = function _templateObject20() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject19() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FavailablePeopleCount on AvailablePeopleCount {\\n        countAny\\n        countFemale\\n        countMale\\n    }\\n\"]);\n\n  _templateObject19 = function _templateObject19() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FroomType on RoomType {\\n        _id\\n        name\\n        pricingType\\n        peopleCount\\n        peopleCountMax\\n        index\\n        roomCount\\n        roomGender\\n        img {\\n            ...Fimg\\n        }\\n        description\\n        defaultPrice\\n        createdAt\\n        updatedAt\\n        roomTemplateSrl\\n        roomGender\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FsmsHistory on SmsHistory {\\n        _id\\n        msg\\n        sender\\n        receivers\\n        sendResult\\n        autoSend\\n        msgType\\n        createdAt\\n        updatedAt\\n    }\\n\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FsmsSender on SmsSender {\\n        phoneNumber\\n        verified\\n        registered\\n    }\\n\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FpageInfo on PageInfoOffsetBase {\\n        currentPage\\n        totalPage\\n        rowCount\\n    }\\n\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Fpayment on Payment {\\n        type\\n        payMethod\\n        totalPrice\\n        status\\n        paymentResultParam\\n    }\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FallSeason on Season {\\n        _id\\n        name\\n        start\\n        end\\n        priority\\n        color\\n        description\\n        createdAt\\n        updatedAt\\n    }\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FsmsTemplate on SmsTemplate {\\n        _id\\n        formatName\\n        smsFormat\\n        smsSendCase {\\n            enable\\n            when\\n            who\\n        }\\n    }\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Fproduct on Product {\\n        _id\\n        name\\n        price\\n        discountedPrice\\n        roomCount\\n        roomCountExtraCharge\\n        bookingCount\\n        bookingCountExtraCharge\\n        layoutType\\n        layoutPrice\\n        layoutPricePaid\\n        appliedUrl\\n        expireDate\\n        daysLeftToExpire\\n        isExpired\\n        canHaveHostApp\\n        existingHostApp\\n        description\\n        createdAt\\n        updatedAt\\n    }\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FappInfoRequest on AppInfoRequest {\\n        url\\n        layoutType\\n        requestedDate\\n        isDone\\n        useHostApp\\n    }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FproductType on ProductType {\\n        _id\\n        name\\n        price\\n        roomCount\\n        key\\n        roomCountExtraCharge\\n        bookingCount\\n        bookingCountExtraCharge\\n        description\\n        canHaveHostApp\\n        createdAt\\n        updatedAt\\n    }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FhouseConfig on HouseConfig {\\n        assigTimeline {\\n            roomTypeTabEnable\\n            itemBlockOp {\\n                itemBlockOpEnable\\n                useColor\\n            }\\n        }\\n        pollingPeriod {\\n            enable\\n            period\\n        }\\n        bookingConfig {\\n            newBookingMark {\\n                enable\\n                newGuestTime\\n            },\\n            collectingInfoFromGuest {\\n                email\\n                country\\n            }\\n        },\\n        baseConfig {\\n                pricingTypes\\n        }\\n    }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FHMmenu on HMmenu {\\n        id\\n        name\\n        type\\n        icon\\n        img {\\n          ...Fimg\\n        }\\n        content\\n        isEnable\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FHM on HM {\\n        _id\\n        langList\\n        backgroundImg {\\n            ...Fimg\\n        }\\n        profileImg {\\n            ...Fimg\\n        }\\n        phoneNumber\\n        createdAt\\n        email\\n        updatedAt\\n        title\\n    }\\n    \", \"\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Fhouse on House {\\n        _id\\n        name\\n        houseType\\n        status\\n        publicKey\\n        createdAt\\n        updatedAt\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FNoti on Noti {\\n        _id\\n        msg\\n        validPeriod\\n        title\\n        notiType\\n        notiLevel\\n        createdAt\\n        isConfirm\\n        updatedAt\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Fmemo on Memo {\\n        _id\\n        title\\n        text\\n        memoType\\n        enableAlert\\n        createdAt\\n        updatedAt\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Fimg on JdFile {\\n        url\\n        filename\\n        mimeType\\n        tags {\\n            Key\\n            Value\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment FieldsLocation on House {\\n        location {\\n            address\\n            addressDetail\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\"; // 👿 Read This [https://www.apollographql.com/docs/react/advanced/fragments#fragment-matcher]\n// 지역에 관한 프레임\n\nexport var F_LOCATION = gql(_templateObject());\nexport var F_IMG = gql(_templateObject2());\nexport var F_MEMO = gql(_templateObject3());\nexport var F_NOTI = gql(_templateObject4());\nexport var F_HOUSE = gql(_templateObject5());\nexport var F_HM = gql(_templateObject6(), F_IMG); // 하우스메뉴얼 메뉴\n\nexport var F_HMM = gql(_templateObject7(), F_IMG); // 룸타입 관련된 최소 프레임\n\nexport var F_HOUSE_CONFIG = gql(_templateObject8()); // 상품 관련 프레임\n\nexport var F_PRODUCT_TYPE = gql(_templateObject9()); // 상품 관련 프레임\n\nexport var F_APP_INFO_REQUEST = gql(_templateObject10()); // 상품 관련 프레임\n\nexport var F_PRODUCT = gql(_templateObject11()); // sms 템플릿 관련된 프레임\n\nexport var F_SMS_TEMPLATE = gql(_templateObject12()); // 모든 시즌에 관한 프레임\n\nexport var F_ALL_SEASON = gql(_templateObject13()); // 모든 시즌에 관한 프레임\n\nexport var F_PAYMENT = gql(_templateObject14()); // 페이지 정보에 관한 프레임\n\nexport var F_PAGE_INFO = gql(_templateObject15()); // SMS sender 와 관련된 프레임\n\nexport var F_SMS_SENDER = gql(_templateObject16()); // sms History\n\nexport var F_SMS_HISTORY = gql(_templateObject17()); // 방타입에 관한 프레임 \n\nexport var F_ROOMTYPE = gql(_templateObject18(), F_IMG); // 예약가능한 인원 프레임\n\nexport var F_AVAILABLE_PEOPLE_COUNT = gql(_templateObject19()); // 예약에 관한 정보프레임\n\nexport var F_BOOKING = gql(_templateObject20(), F_ROOMTYPE, F_PAYMENT); //  방에대한 정보 프레임\n\nexport var F_ROOM = gql(_templateObject21());\nexport var F_BLOCK_OP = gql(_templateObject22());\nexport var F_BOOKING_TRANSACTION = gql(_templateObject23());\nexport var F_BOOKING_TRANSACTION_PROGRESS = gql(_templateObject24()); // 게스트에 관한 정보 프레임(방정보 포함)\n\nexport var F_BLOCK = gql(_templateObject25()); // 게스트에 관한 정보 프레임(방정보 포함)\n\nexport var F_GUEST = gql(_templateObject26());\nexport var F_GUEST_DOMITORY = gql(_templateObject27(), F_GUEST);\nexport var F_GUEST_ROOM = gql(_templateObject28(), F_GUEST); // 에약가능 인원 관련 프레임\n\nexport var F_ROOM_CAPACITY = gql(_templateObject29(), F_AVAILABLE_PEOPLE_COUNT); // 유저 기본적인 정보 프레임\n\nexport var F_USER_INFO = gql(_templateObject30(), F_IMG); // 모든 방타입을 가져오는 프레임 묶음 \n\nvar sharedGetAllRoomType = gql(_templateObject31(), F_IMG);\n/* ---------------------------------- query --------------------------------- */\n// 하우스 명세서 가져오기\n\nexport var GET_HOUSE_SPECIFICATION = gql(_templateObject32(), F_PRODUCT, F_APP_INFO_REQUEST); // SMS :: 히스토리 가져오기\n\nexport var GET_SMS_HISTORY = gql(_templateObject33(), F_PAGE_INFO, F_SMS_HISTORY); // 방타입 :: 아이디로서 조회\n\nexport var GET_ROOMTYPE_BY_ID = gql(_templateObject34(), F_IMG);\nexport var UPDATE_SEASON_PRICES = gql(_templateObject35()); // 방타입 :: 모든 방타입을 조회\n\nexport var GET_PRODUCTS_TYPES = gql(_templateObject36(), F_PRODUCT_TYPE); // 유저 :: 정보 가져오기\n\nexport var GET_USER_INFO = gql(_templateObject37(), F_HOUSE, F_USER_INFO, F_PRODUCT, F_APP_INFO_REQUEST, F_HOUSE_CONFIG); // 슈퍼계정 :: 모든집 가져오기\n\nexport var GET_HOUSES_FOR_SU = gql(_templateObject38(), F_IMG, F_PAGE_INFO); // 유저 :: 이메일 로그인\n\nexport var EMAIL_SIGN_IN = gql(_templateObject39()); // 하우스 :: 아이디로 정보 가져오기\n\nexport var GET_HOUSE = gql(_templateObject40(), F_ROOMTYPE, F_ROOM); // 방타입 :: 모든 방타입 가격 가져오기\n\nexport var PRICE_TIMELINE_GET_PRICE = gql(_templateObject41(), F_ROOMTYPE);\nexport var GET_CAPACITY_TO_ROOM_TYPE = gql(_templateObject42());\nexport var GET_CAPACITY_TO_ROOM_TYPE_FOR_BOOKER = gql(_templateObject43()); // 예약 :: 예약자를 위한 예약인원 가져오기 (인증 토큰때문)\n\nexport var GET_ALL_ROOM_TYPE_FOR_BOOKING = gql(_templateObject44(), sharedGetAllRoomType); // 예약 ::모든예약 가져오기\n\nexport var GET_ALL_ROOMTYPES = gql(_templateObject45(), sharedGetAllRoomType); // 예약 ::예약정보로 예약찾기 (호스트용)\n\nexport var FIND_BOOKING = gql(_templateObject46(), F_GUEST, F_BOOKING); // 예약 ::예약정보로 예약찾기 (게스트용)\n\nexport var FIND_BOOKING_FOR_BOOKER = gql(_templateObject47(), F_PAYMENT, F_GUEST, F_BOOKING);\nexport var F_ROOM_TYPE_DATE_PRICE_RESULT = gql(_templateObject48(), F_ROOMTYPE);\nexport var GET_ROOM_TYPE_DATE_PRICE = gql(_templateObject49(), F_ROOM_TYPE_DATE_PRICE_RESULT); // ⭐️방배정!!\n// 방배정 :: 모든 방막기 + 모든 방타입 + 모든 게스트 가져오기!!\n\nexport var GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM = gql(_templateObject50(), F_ROOMTYPE, F_BLOCK, F_GUEST, F_GUEST_DOMITORY, F_GUEST_ROOM, F_ROOM, F_BLOCK_OP, F_BOOKING); // 방타입 :: 모든 방타입 가격 가져오기\n\nexport var GET_ALL_ROOMTYPES_PRICE = gql(_templateObject51()); // 슈퍼유저 ::모든 유저 가져오기\n\nexport var GET_USER_FOR_SU = gql(_templateObject52(), F_USER_INFO, F_PRODUCT, F_APP_INFO_REQUEST, F_HOUSE_CONFIG); // 배정 ::블록 옵션 설정\n\nexport var UPDATE_BLOCK_OPTION = gql(_templateObject53()); // 다큐먼트 ::  모든 README 패스 가져오기\n\nexport var GET_ALL_README = gql(_templateObject54()); // 다큐먼트 ::  모든 README 패스 가져오기\n\nexport var GET_FILE_TXT = gql(_templateObject55()); // BOOKING_FOR_PUBLIC 가져오기\n\nexport var GET_BOOKING_FOR_PUBLIC = gql(_templateObject56(), F_GUEST, F_BOOKING); // 예약 ::모든 예약을 가져옴\n\nexport var GET_BOOKINGS_PHONE_NUMBERS = gql(_templateObject57());\nexport var GET_CHECKINS = gql(_templateObject58());\nexport var GET_BOOKINGS = gql(_templateObject59(), F_PAYMENT, F_GUEST, F_GUEST_DOMITORY, F_GUEST_ROOM, F_BOOKING, F_PAGE_INFO); // 예약 :: 아이디로서 예약을 조회\n\nexport var GET_BOOKING = gql(_templateObject60(), F_GUEST_ROOM, F_GUEST_DOMITORY, F_GUEST, F_BOOKING);\nexport var GET_SALES_STATISTIC = gql(_templateObject61());\nexport var CHANGE_INDEX_FOR_ROOMTYPE = gql(_templateObject62()); // START 시즌관련 ────────────────────────────────────────────────────────────────────────────────\n// 시즌 :: 시즌 + 방타입 + 시즌가격\n\nexport var GET_ALL_SEASON_TABLE = gql(_templateObject63(), F_ALL_SEASON);\n/* -------------------------------- mutation -------------------------------- */\n// START 예약관련 ────────────────────────────────────────────────────────────────────────────────\n// 예약 :: 업데이트 예약\n\nexport var UPDATE_BOOKING = gql(_templateObject64()); // 게스트 :: 삭제 게스트\n\nexport var DELETE_GUEST = gql(_templateObject65()); // 예약 ::예약생성 (게스트용)\n\nexport var START_BOOKING_FOR_PUBLIC = gql(_templateObject66(), F_BOOKING_TRANSACTION);\nexport var START_BOOKING = gql(_templateObject67(), F_BOOKING_TRANSACTION); // // 예약 :: 예약생성 (호스트용)\n// export const START_BOOKING = gql`\n//     mutation startBooking(\n//         $bookingParams: CreateBookingParams!\n//         $sendSmsFlag: Boolean!\n//     ) {\n//         CreateBooking(\n//             bookingParams: $bookingParams\n//             sendSmsFlag: $sendSmsFlag\n//         ) {\n//             ok\n//             error\n//             booking {\n//                 ...Fbooking\n//                 guests {\n//                     ...Fguest\n//                 }\n//             }\n//         }\n//     }\n//     ${F_BOOKING}\n//     ${F_GUEST}\n// `;\n// 방배정 :: 게스트를 방에다 배정\n\nexport var ALLOCATE_GUEST_TO_ROOM = gql(_templateObject68(), F_GUEST);\nexport var GET_PAYMENT_AUTH = gql(_templateObject69()); // 방타입 :: 방타입 생성\n\nexport var CREATE_ROOMTYPE = gql(_templateObject70()); // 방 :: 방생성\n\nexport var CREATE_ROOM = gql(_templateObject71()); // 방배정 :: 방막기 해제\n\nexport var DELETE_BLOCK = gql(_templateObject72()); // 방배정 :: 방막기\n\nexport var CREATE_BLOCK = gql(_templateObject73(), F_ROOM, F_BLOCK); // 디테일 가격설정 :: 방가격 생성\n\nexport var CREATE_DAILY_PRICE = gql(_templateObject74()); // 예약 ::예약삭제\n\nexport var DELETE_BOOKING = gql(_templateObject75()); // 디테일 가격설정 :: 방가격 삭제\n\nexport var DELETE_DAILY_PRICE = gql(_templateObject76()); // 방타입 :: 방타입 제거\n\nexport var DELETE_ROOMTYPE = gql(_templateObject77()); // 방 :: 방 제거\n\nexport var DELETE_ROOM = gql(_templateObject78()); // 방 :: 업데이트 방\n\nexport var UPDATE_ROOM = gql(_templateObject79()); // 방타입 :: 방타입 업데이트\n\nexport var UPDATE_ROOMTYPE = gql(_templateObject80()); // START 시즌관련 ────────────────────────────────────────────────────────────────────────────────\n// 시즌 :: 시즌가격생성 (현재 사용안함)\n\nexport var CREATE_SEASON_PRICE = gql(_templateObject81()); // 시즌 :: 시즌생성\n\nexport var CREATE_SEASON = gql(_templateObject82()); // 시즌 :: 우선순위를 바꿈\n\nexport var CHANGE_PRIORITY = gql(_templateObject83()); // 시즌 :: 시즌 삭제\n\nexport var DELETE_SEASON = gql(_templateObject84()); // 시즌 :: 시즌 업데이트\n\nexport var UPDATE_SEASON = gql(_templateObject85()); // 호스트관련 ────────────────────────────────────────────────────────────────────────────────\n// 유저 :: 프로필 업데이트\n\nexport var UPDATE_MYPROFILE = gql(_templateObject86()); // 유저 :: 휴대폰인증 (유저용)\n\nexport var PHONE_VERIFICATION = gql(_templateObject87()); //  유저 :: 휴대폰인증(발신자용)\n\nexport var START_PHONE_VERIFICATION_WITH_PHONE_NUMBER = gql(_templateObject88()); // 유저 :: 휴대폰 인증 완료 키를 보냄\n\nexport var COMEPLETE_PHONE_VERIFICATION = gql(_templateObject89()); // 유저 :: 회원가입\n\nexport var EMAIL_SIGN_UP = gql(_templateObject90()); // 숙소관련 ────────────────────────────────────────────────────────────────────────────────\n// 하우스 :: 하우스 업데이트\n\nexport var UPDATE_HOUSE = gql(_templateObject91()); // 숙소설정 업데이트\n\nexport var UPDATE_HOUSE_CONFIG = gql(_templateObject92()); // 하우스 :: 하우스생성\n\nexport var CREATE_HOUSE = gql(_templateObject93()); // 하우스 :: 하우스삭제\n\nexport var DELETE_HOUSE = gql(_templateObject94()); // 상품관련 ────────────────────────────────────────────────────────────────────────────────\n// 상품 :: 상품구매\n\nexport var BUY_PRODUCTS = gql(_templateObject95()); // 상품 :: 상품해지\n\nexport var REFUND_PRODUCT = gql(_templateObject96());\n/*  sms-------------------------------------------------------------------------- */\n// SMS :: SMS 템플릿 생성\n\nexport var CREATE_SMS_TEMPLATE = gql(_templateObject97(), F_SMS_TEMPLATE); // SMS :: 템플릿 삭제\n\nexport var DELETE_SMS_TEMPLATE = gql(_templateObject98()); // SMS :: SMS 정보 가져오기\n\nexport var GET_SMS_INFO = gql(_templateObject99(), F_SMS_SENDER, F_SMS_TEMPLATE); // SMS :: SMS 업데이트\n\nexport var UPDATE_SMS_TEMPLATE = gql(_templateObject100(), F_SMS_TEMPLATE); // SMS :: SMS 전송\n\nexport var SEND_SMS = gql(_templateObject101());\nexport var UPDATE_USER_FOR_SU = gql(_templateObject102()); // 발신자 등록 (현재안쓰임)\n\nexport var CONFIRM_BOOKING = gql(_templateObject103()); // 발신자 등록 (현재안쓰임)\n\nexport var UPDATE_SENDER = gql(_templateObject104(), F_SMS_SENDER); // 게스트용\n\nexport var GET_HOUSE_MENUAL = gql(_templateObject105(), F_IMG, F_HMM, F_HM); // // 호스트용\n// export const GET_HOUSE_MENUAL_CONFIG = gql`\n//     query getHM($houseId: ID!) {\n//             GetHM(houseId:$houseId) {\n//                 ok\n//                 error\n//                 HM {\n//                     ...FHM\n//                     menus {\n//                         ...FHMmenu\n//                     }\n//                     location {\n//                         address\n//                         addressDetail\n//                         lat\n//                         lng\n//                     }\n//                 }\n//             }\n//         } \n//     ${F_HMM}\n//     ${F_HM}\n// `\n\nexport var GET_HOUSE_MENUAL_FOR_PUBLIC = gql(_templateObject106(), F_HMM, F_HM);\nexport var UPDATE_HM = gql(_templateObject107()); // MEMO 가져오기\n\nexport var GET_MEMO = gql(_templateObject108(), F_MEMO);\nexport var UPDATE_MEMO = gql(_templateObject109());\nexport var CREATE_MEMO = gql(_templateObject110());\nexport var DELETE_MEMO = gql(_templateObject111()); // MEMO 가져오기\n\nexport var GET_NOTI = gql(_templateObject112(), F_NOTI);\nexport var UPLOAD_FILE = gql(_templateObject113(), F_IMG);\nexport var CONFIRM_NOTI = gql(_templateObject114());\nexport var CREATE_NOTI = gql(_templateObject115());","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/queries.ts"],"names":["gql","F_LOCATION","F_IMG","F_MEMO","F_NOTI","F_HOUSE","F_HM","F_HMM","F_HOUSE_CONFIG","F_PRODUCT_TYPE","F_APP_INFO_REQUEST","F_PRODUCT","F_SMS_TEMPLATE","F_ALL_SEASON","F_PAYMENT","F_PAGE_INFO","F_SMS_SENDER","F_SMS_HISTORY","F_ROOMTYPE","F_AVAILABLE_PEOPLE_COUNT","F_BOOKING","F_ROOM","F_BLOCK_OP","F_BOOKING_TRANSACTION","F_BOOKING_TRANSACTION_PROGRESS","F_BLOCK","F_GUEST","F_GUEST_DOMITORY","F_GUEST_ROOM","F_ROOM_CAPACITY","F_USER_INFO","sharedGetAllRoomType","GET_HOUSE_SPECIFICATION","GET_SMS_HISTORY","GET_ROOMTYPE_BY_ID","UPDATE_SEASON_PRICES","GET_PRODUCTS_TYPES","GET_USER_INFO","GET_HOUSES_FOR_SU","EMAIL_SIGN_IN","GET_HOUSE","PRICE_TIMELINE_GET_PRICE","GET_CAPACITY_TO_ROOM_TYPE","GET_CAPACITY_TO_ROOM_TYPE_FOR_BOOKER","GET_ALL_ROOM_TYPE_FOR_BOOKING","GET_ALL_ROOMTYPES","FIND_BOOKING","FIND_BOOKING_FOR_BOOKER","F_ROOM_TYPE_DATE_PRICE_RESULT","GET_ROOM_TYPE_DATE_PRICE","GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM","GET_ALL_ROOMTYPES_PRICE","GET_USER_FOR_SU","UPDATE_BLOCK_OPTION","GET_ALL_README","GET_FILE_TXT","GET_BOOKING_FOR_PUBLIC","GET_BOOKINGS_PHONE_NUMBERS","GET_CHECKINS","GET_BOOKINGS","GET_BOOKING","GET_SALES_STATISTIC","CHANGE_INDEX_FOR_ROOMTYPE","GET_ALL_SEASON_TABLE","UPDATE_BOOKING","DELETE_GUEST","START_BOOKING_FOR_PUBLIC","START_BOOKING","ALLOCATE_GUEST_TO_ROOM","GET_PAYMENT_AUTH","CREATE_ROOMTYPE","CREATE_ROOM","DELETE_BLOCK","CREATE_BLOCK","CREATE_DAILY_PRICE","DELETE_BOOKING","DELETE_DAILY_PRICE","DELETE_ROOMTYPE","DELETE_ROOM","UPDATE_ROOM","UPDATE_ROOMTYPE","CREATE_SEASON_PRICE","CREATE_SEASON","CHANGE_PRIORITY","DELETE_SEASON","UPDATE_SEASON","UPDATE_MYPROFILE","PHONE_VERIFICATION","START_PHONE_VERIFICATION_WITH_PHONE_NUMBER","COMEPLETE_PHONE_VERIFICATION","EMAIL_SIGN_UP","UPDATE_HOUSE","UPDATE_HOUSE_CONFIG","CREATE_HOUSE","DELETE_HOUSE","BUY_PRODUCTS","REFUND_PRODUCT","CREATE_SMS_TEMPLATE","DELETE_SMS_TEMPLATE","GET_SMS_INFO","UPDATE_SMS_TEMPLATE","SEND_SMS","UPDATE_USER_FOR_SU","CONFIRM_BOOKING","UPDATE_SENDER","GET_HOUSE_MENUAL","GET_HOUSE_MENUAL_FOR_PUBLIC","UPDATE_HM","GET_MEMO","UPDATE_MEMO","CREATE_MEMO","DELETE_MEMO","GET_NOTI","UPLOAD_FILE","CONFIRM_NOTI","CREATE_NOTI"],"mappingsgB,aAAhB,C,CAEA;AACA;;AACA,OAAO,IAAMC,UAAU,GAAGD,GAAH,mBAAhB;AASP,OAAO,IAAME,KAAK,GAAGF,GAAH,oBAAX;AAYP,OAAO,IAAMG,MAAM,GAAGH,GAAH,oBAAZ;AAYP,OAAO,IAAMI,MAAM,GAAGJ,GAAH,oBAAZ;AAcP,OAAO,IAAMK,OAAO,GAAGL,GAAH,oBAAb;AAaP,OAAO,IAAMM,IAAI,GAAGN,GAAH,qBAgBXE,KAhBW,CAAV,C,CAmBP;;AACA,OAAO,IAAMK,KAAK,GAAGP,GAAH,qBAYZE,KAZY,CAAX,C,CAeP;;AACA,OAAO,IAAMM,cAAc,GAAGR,GAAH,oBAApB,C,CA6BP;;AACA,OAAO,IAAMS,cAAc,GAAGT,GAAH,oBAApB,C,CAiBP;;AACA,OAAO,IAAMU,kBAAkB,GAAGV,GAAH,qBAAxB,C,CAUP;;AACA,OAAO,IAAMW,SAAS,GAAGX,GAAH,qBAAf,C,CAyBP;;AACA,OAAO,IAAMY,cAAc,GAAGZ,GAAH,qBAApB,C,CAaP;;AACA,OAAO,IAAMa,YAAY,GAAGb,GAAH,qBAAlB,C,CAcP;;AACA,OAAO,IAAMc,SAAS,GAAGd,GAAH,qBAAf,C,CAUP;;AACA,OAAO,IAAMe,WAAW,GAAGf,GAAH,qBAAjB,C,CAQP;;AACA,OAAO,IAAMgB,YAAY,GAAGhB,GAAH,qBAAlB,C,CAQP;;AACA,OAAO,IAAMiB,aAAa,GAAGjB,GAAH,qBAAnB,C,CAcP;;AACA,OAAO,IAAMkB,UAAU,GAAGlB,GAAH,sBAoBjBE,KApBiB,CAAhB,C,CAuBP;;AACA,OAAO,IAAMiB,wBAAwB,GAAGnB,GAAH,qBAA9B,C,CAQP;;AACA,OAAO,IAAMoB,SAAS,GAAGpB,GAAH,sBA6BhBkB,UA7BgB,EA8BhBJ,SA9BgB,CAAf,C,CAiCP;;AACA,OAAO,IAAMO,MAAM,GAAGrB,GAAH,qBAAZ;AAcP,OAAO,IAAMsB,UAAU,GAAGtB,GAAH,qBAAhB;AAMP,OAAO,IAAMuB,qBAAqB,GAAGvB,GAAH,qBAA3B;AAQP,OAAO,IAAMwB,8BAA8B,GAAGxB,GAAH,qBAApC,C,CAiBP;;AACA,OAAO,IAAMyB,OAAO,GAAGzB,GAAH,qBAAb,C,CAWP;;AACA,OAAO,IAAM0B,OAAO,GAAG1B,GAAH,qBAAb;AAQP,OAAO,IAAM2B,gBAAgB,GAAG3B,GAAH,sBAOvB0B,OAPuB,CAAtB;AASP,OAAO,IAAME,YAAY,GAAG5B,GAAH,sBAInB0B,OAJmB,CAAlB,C,CAOP;;AACA,OAAO,IAAMG,eAAe,GAAG7B,GAAH,sBAgBtBmB,wBAhBsB,CAArB,C,CAmBP;;AACA,OAAO,IAAMW,WAAW,GAAG9B,GAAH,sBAiBlBE,KAjBkB,CAAjB,C,CAqBP;;AACA,IAAM6B,oBAAoB,GAAG/B,GAAH,sBA6BpBE,KA7BoB,CAA1B;AAiCA;AAGA;;AACA,OAAO,IAAM8B,uBAAuB,GAAGhC,GAAH,sBAwC9BW,SAxC8B,EAyC9BD,kBAzC8B,CAA7B,C,CA4CP;;AACA,OAAO,IAAMuB,eAAe,GAAGjC,GAAH,sBAatBe,WAbsB,EActBE,aAdsB,CAArB,C,CAiBP;;AACA,OAAO,IAAMiB,kBAAkB,GAAGlC,GAAH,sBAuBzBE,KAvByB,CAAxB;AA2BP,OAAO,IAAMiC,oBAAoB,GAAGnC,GAAH,qBAA1B,C,CAYP;;AACA,OAAO,IAAMoC,kBAAkB,GAAGpC,GAAH,sBAUzBS,cAVyB,CAAxB,C,CAcP;;AACA,OAAO,IAAM4B,aAAa,GAAGrC,GAAH,sBA+CpBK,OA/CoB,EAgDpByB,WAhDoB,EAiDpBnB,SAjDoB,EAkDpBD,kBAlDoB,EAmDpBF,cAnDoB,CAAnB,C,CAsDP;;AACA,OAAO,IAAM8B,iBAAiB,GAAGtC,GAAH,sBAmCxBE,KAnCwB,EAoCxBa,WApCwB,CAAvB,C,CAuCP;;AACA,OAAO,IAAMwB,aAAa,GAAGvC,GAAH,qBAAnB,C,CAUP;;AACA,OAAO,IAAMwC,SAAS,GAAGxC,GAAH,sBAyChBkB,UAzCgB,EA0ChBG,MA1CgB,CAAf,C,CA6CP;;AACA,OAAO,IAAMoB,wBAAwB,GAAGzC,GAAH,sBA0CjCkB,UA1CiC,CAA9B;AA8CP,OAAO,IAAMwB,yBAAyB,GAAG1C,GAAH,qBAA/B;AA0BP,OAAO,IAAM2C,oCAAoC,GAAG3C,GAAH,qBAA1C,C,CA2BP;;AACA,OAAO,IAAM4C,6BAA6B,GAAG5C,GAAH,sBAMpC+B,oBANoC,CAAnC,C,CASP;;AACA,OAAO,IAAMc,iBAAiB,GAAG7C,GAAH,sBAMxB+B,oBANwB,CAAvB,C,CASP;;AACA,OAAO,IAAMe,YAAY,GAAG9C,GAAH,sBA6BnB0B,OA7BmB,EA8BnBN,SA9BmB,CAAlB,C,CAiCP;;AACA,OAAO,IAAM2B,uBAAuB,GAAG/C,GAAH,sBA8B9Bc,SA9B8B,EA+B9BY,OA/B8B,EAgC9BN,SAhC8B,CAA7B;AAqCP,OAAO,IAAM4B,6BAA6B,GAAGhD,GAAH,sBAcpCkB,UAdoC,CAAnC;AAiBP,OAAO,IAAM+B,wBAAwB,GAAGjD,GAAH,sBAW/BgD,6BAX+B,CAA9B,C,CAeP;AACA;;AACA,OAAO,IAAME,uCAAuC,GAAGlD,GAAH,sBAsE9CkB,UAtE8C,EAuE9CO,OAvE8C,EAwE9CC,OAxE8C,EAyE9CC,gBAzE8C,EA0E9CC,YA1E8C,EA2E9CP,MA3E8C,EA4E9CC,UA5E8C,EA6E9CF,SA7E8C,CAA7C,C,CAgFP;;AACA,OAAO,IAAM+B,uBAAuB,GAAGnD,GAAH,qBAA7B,C,CA+BP;;AACA,OAAO,IAAMoD,eAAe,GAAGpD,GAAH,sBA0CtB8B,WA1CsB,EA2CtBnB,SA3CsB,EA4CtBD,kBA5CsB,EA6CtBF,cA7CsB,CAArB,C,CAgDP;;AACA,OAAO,IAAM6C,mBAAmB,GAAGrD,GAAH,qBAAzB,C,CAaP;;AACA,OAAO,IAAMsD,cAAc,GAAGtD,GAAH,qBAApB,C,CAUP;;AACA,OAAO,IAAMuD,YAAY,GAAGvD,GAAH,qBAAlB,C,CAUP;;AACA,OAAO,IAAMwD,sBAAsB,GAAGxD,GAAH,sBAoBjC0B,OApBiC,EAqBjCN,SArBiC,CAA5B,C,CAyBP;;AAEA,OAAO,IAAMqC,0BAA0B,GAAGzD,GAAH,qBAAhC;AAwBP,OAAO,IAAM0D,YAAY,GAAG1D,GAAH,qBAAlB;AAwBP,OAAO,IAAM2D,YAAY,GAAG3D,GAAH,sBA6CnBc,SA7CmB,EA8CnBY,OA9CmB,EA+CnBC,gBA/CmB,EAgDnBC,YAhDmB,EAiDnBR,SAjDmB,EAkDnBL,WAlDmB,CAAlB,C,CAqDP;;AACA,OAAO,IAAM6C,WAAW,GAAG5D,GAAH,sBAyClB4B,YAzCkB,EA0ClBD,gBA1CkB,EA2ClBD,OA3CkB,EA4ClBN,SA5CkB,CAAjB;AAiDP,OAAO,IAAMyC,mBAAmB,GAAG7D,GAAH,qBAAzB;AA0BP,OAAO,IAAM8D,yBAAyB,GAAG9D,GAAH,qBAA/B,C,CAcP;AACA;;AACA,OAAO,IAAM+D,oBAAoB,GAAG/D,GAAH,sBAwC3Ba,YAxC2B,CAA1B;AA2CP;AAEA;AACA;;AACA,OAAO,IAAMmD,cAAc,GAAGhE,GAAH,qBAApB,C,CAiBP;;AACA,OAAO,IAAMiE,YAAY,GAAGjE,GAAH,qBAAlB,C,CASP;;AACA,OAAO,IAAMkE,wBAAwB,GAAGlE,GAAH,sBAsB/BuB,qBAtB+B,CAA9B;AAyBP,OAAO,IAAM4C,aAAa,GAAGnE,GAAH,sBA+BpBuB,qBA/BoB,CAAnB,C,CAkCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,IAAM6C,sBAAsB,GAAGpE,GAAH,sBAc7B0B,OAd6B,CAA5B;AAiBP,OAAO,IAAM2C,gBAAgB,GAAGrE,GAAH,qBAAtB,C,CAqBP;;AACA,OAAO,IAAMsE,eAAe,GAAGtE,GAAH,qBAArB,C,CAaP;;AACA,OAAO,IAAMuE,WAAW,GAAGvE,GAAH,qBAAjB,C,CASP;;AACA,OAAO,IAAMwE,YAAY,GAAGxE,GAAH,qBAAlB,C,CAQP;;AACA,OAAO,IAAMyE,YAAY,GAAGzE,GAAH,sBAyBnBqB,MAzBmB,EA0BnBI,OA1BmB,CAAlB,C,CA4BP;;AACA,OAAO,IAAMiD,kBAAkB,GAAG1E,GAAH,qBAAxB,C,CAkBP;;AACA,OAAO,IAAM2E,cAAc,GAAG3E,GAAH,qBAApB,C,CAQP;;AACA,OAAO,IAAM4E,kBAAkB,GAAG5E,GAAH,qBAAxB,C,CAQP;;AACA,OAAO,IAAM6E,eAAe,GAAG7E,GAAH,qBAArB,C,CAQP;;AACA,OAAO,IAAM8E,WAAW,GAAG9E,GAAH,qBAAjB,C,CASP;;AACA,OAAO,IAAM+E,WAAW,GAAG/E,GAAH,qBAAjB,C,CAQP;;AACA,OAAO,IAAMgF,eAAe,GAAGhF,GAAH,qBAArB,C,CAeP;AACA;;AACA,OAAO,IAAMiF,mBAAmB,GAAGjF,GAAH,qBAAzB,C,CAmBP;;AACA,OAAO,IAAMkF,aAAa,GAAGlF,GAAH,qBAAnB,C,CA4BP;;AACA,OAAO,IAAMmF,eAAe,GAAGnF,GAAH,qBAArB,C,CAgBP;;AACA,OAAO,IAAMoF,aAAa,GAAGpF,GAAH,qBAAnB,C,CAQP;;AACA,OAAO,IAAMqF,aAAa,GAAGrF,GAAH,qBAAnB,C,CAyBP;AACA;;AACA,OAAO,IAAMsF,gBAAgB,GAAGtF,GAAH,qBAAtB,C,CAoBP;;AACA,OAAO,IAAMuF,kBAAkB,GAAGvF,GAAH,qBAAxB,C,CASP;;AACA,OAAO,IAAMwF,0CAA0C,GAAGxF,GAAH,qBAAhD,C,CASP;;AACA,OAAO,IAAMyF,4BAA4B,GAAGzF,GAAH,qBAAlC,C,CAQP;;AACA,OAAO,IAAM0F,aAAa,GAAG1F,GAAH,qBAAnB,C,CAmBP;AACA;;AACA,OAAO,IAAM2F,YAAY,GAAG3F,GAAH,qBAAlB,C,CAyBP;;AACA,OAAO,IAAM4F,mBAAmB,GAAG5F,GAAH,qBAAzB,C,CAeP;;AACA,OAAO,IAAM6F,YAAY,GAAG7F,GAAH,qBAAlB,C,CAgBP;;AACA,OAAO,IAAM8F,YAAY,GAAG9F,GAAH,qBAAlB,C,CAQP;AACA;;AACA,OAAO,IAAM+F,YAAY,GAAG/F,GAAH,qBAAlB,C,CAQP;;AACA,OAAO,IAAMgG,cAAc,GAAGhG,GAAH,qBAApB;AASP;AACA;;AACA,OAAO,IAAMiG,mBAAmB,GAAGjG,GAAH,sBAU1BY,cAV0B,CAAzB,C,CAYP;;AACA,OAAO,IAAMsF,mBAAmB,GAAGlG,GAAH,qBAAzB,C,CAYP;;AACA,OAAO,IAAMmG,YAAY,GAAGnG,GAAH,sBAiBnBgB,YAjBmB,EAkBnBJ,cAlBmB,CAAlB,C,CAqBP;;AACA,OAAO,IAAMwF,mBAAmB,GAAGpG,GAAH,uBAkB1BY,cAlB0B,CAAzB,C,CAqBP;;AACA,OAAO,IAAMyF,QAAQ,GAAGrG,GAAH,sBAAd;AAsBP,OAAO,IAAMsG,kBAAkB,GAAGtG,GAAH,sBAAxB,C,CAkBP;;AACA,OAAO,IAAMuG,eAAe,GAAGvG,GAAH,sBAArB,C,CAaP;;AACA,OAAO,IAAMwG,aAAa,GAAGxG,GAAH,uBAWpBgB,YAXoB,CAAnB,C,CAcP;;AACA,OAAO,IAAMyF,gBAAgB,GAAGzG,GAAH,uBAmBvBE,KAnBuB,EAoBvBK,KApBuB,EAqBvBD,IArBuB,CAAtB,C,CAwBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMoG,2BAA2B,GAAG1G,GAAH,uBAmBlCO,KAnBkC,EAoBlCD,IApBkC,CAAjC;AAuBP,OAAO,IAAMqG,SAAS,GAAG3G,GAAH,sBAAf,C,CAQP;;AACA,OAAO,IAAM4G,QAAQ,GAAG5G,GAAH,uBAUnBG,MAVmB,CAAd;AAaP,OAAO,IAAM0G,WAAW,GAAG7G,GAAH,sBAAjB;AASP,OAAO,IAAM8G,WAAW,GAAG9G,GAAH,sBAAjB;AASP,OAAO,IAAM+G,WAAW,GAAG/G,GAAH,sBAAjB,C,CAQP;;AACA,OAAO,IAAMgH,QAAQ,GAAGhH,GAAH,uBAUnBI,MAVmB,CAAd;AAaP,OAAO,IAAM6G,WAAW,GAAGjH,GAAH,uBAUpBE,KAVoB,CAAjB;AAaP,OAAO,IAAMgH,YAAY,GAAGlH,GAAH,sBAAlB;AASP,OAAO,IAAMmH,WAAW,GAAGnH,GAAH,sBAAjB","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\n// 👿 Read This [https://www.apollographql.com/docs/react/advanced/fragments#fragment-matcher]\r\n// 지역에 관한 프레임\r\nexport const F_LOCATION = gql`\r\n    fragment FieldsLocation on House {\r\n        location {\r\n            address\r\n            addressDetail\r\n        }\r\n    }\r\n`;\r\n\r\nexport const F_IMG = gql`\r\n    fragment Fimg on JdFile {\r\n        url\r\n        filename\r\n        mimeType\r\n        tags {\r\n            Key\r\n            Value\r\n        }\r\n    }\r\n`;\r\n\r\nexport const F_MEMO = gql`\r\n    fragment Fmemo on Memo {\r\n        _id\r\n        title\r\n        text\r\n        memoType\r\n        enableAlert\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`;\r\n\r\nexport const F_NOTI = gql`\r\n    fragment FNoti on Noti {\r\n        _id\r\n        msg\r\n        validPeriod\r\n        title\r\n        notiType\r\n        notiLevel\r\n        createdAt\r\n        isConfirm\r\n        updatedAt\r\n    }\r\n`;\r\n\r\nexport const F_HOUSE = gql`\r\n    fragment Fhouse on House {\r\n        _id\r\n        name\r\n        houseType\r\n        status\r\n        publicKey\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`\r\n\r\n\r\nexport const F_HM = gql`\r\n    fragment FHM on HM {\r\n        _id\r\n        langList\r\n        backgroundImg {\r\n            ...Fimg\r\n        }\r\n        profileImg {\r\n            ...Fimg\r\n        }\r\n        phoneNumber\r\n        createdAt\r\n        email\r\n        updatedAt\r\n        title\r\n    }\r\n    ${F_IMG}\r\n`\r\n\r\n// 하우스메뉴얼 메뉴\r\nexport const F_HMM = gql`\r\n    fragment FHMmenu on HMmenu {\r\n        id\r\n        name\r\n        type\r\n        icon\r\n        img {\r\n          ...Fimg\r\n        }\r\n        content\r\n        isEnable\r\n    }\r\n    ${F_IMG}\r\n`\r\n\r\n// 룸타입 관련된 최소 프레임\r\nexport const F_HOUSE_CONFIG = gql`\r\n    fragment FhouseConfig on HouseConfig {\r\n        assigTimeline {\r\n            roomTypeTabEnable\r\n            itemBlockOp {\r\n                itemBlockOpEnable\r\n                useColor\r\n            }\r\n        }\r\n        pollingPeriod {\r\n            enable\r\n            period\r\n        }\r\n        bookingConfig {\r\n            newBookingMark {\r\n                enable\r\n                newGuestTime\r\n            },\r\n            collectingInfoFromGuest {\r\n                email\r\n                country\r\n            }\r\n        },\r\n        baseConfig {\r\n                pricingTypes\r\n        }\r\n    }\r\n`;\r\n\r\n// 상품 관련 프레임\r\nexport const F_PRODUCT_TYPE = gql`\r\n    fragment FproductType on ProductType {\r\n        _id\r\n        name\r\n        price\r\n        roomCount\r\n        key\r\n        roomCountExtraCharge\r\n        bookingCount\r\n        bookingCountExtraCharge\r\n        description\r\n        canHaveHostApp\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`\r\n\r\n// 상품 관련 프레임\r\nexport const F_APP_INFO_REQUEST = gql`\r\n    fragment FappInfoRequest on AppInfoRequest {\r\n        url\r\n        layoutType\r\n        requestedDate\r\n        isDone\r\n        useHostApp\r\n    }\r\n`\r\n\r\n// 상품 관련 프레임\r\nexport const F_PRODUCT = gql`\r\n    fragment Fproduct on Product {\r\n        _id\r\n        name\r\n        price\r\n        discountedPrice\r\n        roomCount\r\n        roomCountExtraCharge\r\n        bookingCount\r\n        bookingCountExtraCharge\r\n        layoutType\r\n        layoutPrice\r\n        layoutPricePaid\r\n        appliedUrl\r\n        expireDate\r\n        daysLeftToExpire\r\n        isExpired\r\n        canHaveHostApp\r\n        existingHostApp\r\n        description\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`;\r\n\r\n// sms 템플릿 관련된 프레임\r\nexport const F_SMS_TEMPLATE = gql`\r\n    fragment FsmsTemplate on SmsTemplate {\r\n        _id\r\n        formatName\r\n        smsFormat\r\n        smsSendCase {\r\n            enable\r\n            when\r\n            who\r\n        }\r\n    }\r\n`;\r\n\r\n// 모든 시즌에 관한 프레임\r\nexport const F_ALL_SEASON = gql`\r\n    fragment FallSeason on Season {\r\n        _id\r\n        name\r\n        start\r\n        end\r\n        priority\r\n        color\r\n        description\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`;\r\n\r\n// 모든 시즌에 관한 프레임\r\nexport const F_PAYMENT = gql`\r\n    fragment Fpayment on Payment {\r\n        type\r\n        payMethod\r\n        totalPrice\r\n        status\r\n        paymentResultParam\r\n    }\r\n`;\r\n\r\n// 페이지 정보에 관한 프레임\r\nexport const F_PAGE_INFO = gql`\r\n    fragment FpageInfo on PageInfoOffsetBase {\r\n        currentPage\r\n        totalPage\r\n        rowCount\r\n    }\r\n`;\r\n\r\n// SMS sender 와 관련된 프레임\r\nexport const F_SMS_SENDER = gql`\r\n    fragment FsmsSender on SmsSender {\r\n        phoneNumber\r\n        verified\r\n        registered\r\n    }\r\n`;\r\n\r\n// sms History\r\nexport const F_SMS_HISTORY = gql`\r\n    fragment FsmsHistory on SmsHistory {\r\n        _id\r\n        msg\r\n        sender\r\n        receivers\r\n        sendResult\r\n        autoSend\r\n        msgType\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`;\r\n\r\n// 방타입에 관한 프레임 \r\nexport const F_ROOMTYPE = gql`\r\n    fragment FroomType on RoomType {\r\n        _id\r\n        name\r\n        pricingType\r\n        peopleCount\r\n        peopleCountMax\r\n        index\r\n        roomCount\r\n        roomGender\r\n        img {\r\n            ...Fimg\r\n        }\r\n        description\r\n        defaultPrice\r\n        createdAt\r\n        updatedAt\r\n        roomTemplateSrl\r\n        roomGender\r\n    }\r\n    ${F_IMG}\r\n`;\r\n\r\n// 예약가능한 인원 프레임\r\nexport const F_AVAILABLE_PEOPLE_COUNT = gql`\r\n    fragment FavailablePeopleCount on AvailablePeopleCount {\r\n        countAny\r\n        countFemale\r\n        countMale\r\n    }\r\n`;\r\n\r\n// 예약에 관한 정보프레임\r\nexport const F_BOOKING = gql`\r\n    fragment Fbooking on Booking {\r\n        _id\r\n        roomTypes {\r\n            ...FroomType\r\n        }\r\n        isNew\r\n        name\r\n        password\r\n        phoneNumber\r\n        email\r\n        checkInInfo {\r\n            isIn\r\n            checkInDateTime\r\n        }\r\n        memo\r\n        agreePrivacyPolicy\r\n        checkIn\r\n        checkOut\r\n        payment {\r\n            ...Fpayment\r\n        }\r\n        funnels\r\n        status\r\n        createdAt\r\n        updatedAt\r\n        isNew\r\n        isConfirm\r\n    }\r\n    ${F_ROOMTYPE}\r\n    ${F_PAYMENT}\r\n`;\r\n\r\n//  방에대한 정보 프레임\r\nexport const F_ROOM = gql`\r\n    fragment Froom on Room {\r\n        _id\r\n        name\r\n        pricingType\r\n        peopleCount\r\n        peopleCountMax\r\n        index\r\n        createdAt\r\n        updatedAt\r\n        roomSrl\r\n    }\r\n`;\r\n\r\nexport const F_BLOCK_OP = gql`\r\n    fragment FblockOp on BlockOption {\r\n        color\r\n    }\r\n`\r\n\r\nexport const F_BOOKING_TRANSACTION = gql`\r\n    fragment FbookingTransaction on BookingTransaction {\r\n        _id\r\n        transactionId\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`\r\nexport const F_BOOKING_TRANSACTION_PROGRESS = gql`\r\n    fragment FbookingTransactionProgress on BookingTransactionProgress {\r\n        startBooking {\r\n            status\r\n            updatedAt\r\n        }\r\n        payment {\r\n            status\r\n            updatedAt   \r\n        }\r\n        completeBooking {\r\n            status\r\n            updatedAt\r\n        }\r\n    }\r\n`\r\n\r\n// 게스트에 관한 정보 프레임(방정보 포함)\r\nexport const F_BLOCK = gql`\r\n    fragment Fblock on Block {\r\n        _id\r\n        bedIndex\r\n        checkIn\r\n        checkOut\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`;\r\n\r\n// 게스트에 관한 정보 프레임(방정보 포함)\r\nexport const F_GUEST = gql`\r\n    fragment Fguest on GuestGQLInterface {\r\n        _id\r\n        pricingType\r\n        checkIn\r\n        checkOut\r\n    }\r\n`;\r\nexport const F_GUEST_DOMITORY = gql`\r\n    fragment FguestDomitory on GuestDomitory {\r\n        _id\r\n        gender\r\n        bedIndex\r\n        ...Fguest\r\n    }\r\n    ${F_GUEST}\r\n`;\r\nexport const F_GUEST_ROOM = gql`\r\n    fragment FguestRoom on GuestRoom {\r\n        ...Fguest\r\n    }\r\n    ${F_GUEST}\r\n`;\r\n\r\n// 에약가능 인원 관련 프레임\r\nexport const F_ROOM_CAPACITY = gql`\r\n    fragment FroomTypeCapacity on RoomTypeCapacity {\r\n        roomTypeId\r\n        pricingType\r\n        availablePeopleCount {\r\n            ...FavailablePeopleCount\r\n        }\r\n        roomCapacityList {\r\n            roomId\r\n            roomGender\r\n            availableGenders\r\n            availableCount\r\n            peopleCount\r\n            emptyBeds\r\n        }\r\n    }\r\n    ${F_AVAILABLE_PEOPLE_COUNT}\r\n`;\r\n\r\n// 유저 기본적인 정보 프레임\r\nexport const F_USER_INFO = gql`\r\n    fragment FieldsUser on User {\r\n        _id\r\n        name\r\n        phoneNumber\r\n        password\r\n        email\r\n        profileImg {\r\n            ...Fimg\r\n        }\r\n        isPhoneVerified\r\n        checkPrivacyPolicy\r\n        userRole\r\n        userRoles\r\n        createdAt\r\n        updatedAt\r\n    }\r\n    ${F_IMG}\r\n`;\r\n\r\n\r\n// 모든 방타입을 가져오는 프레임 묶음 \r\nconst sharedGetAllRoomType = gql`\r\n    fragment FsharedGetAllRoomType on GetAllRoomTypeResponse {\r\n        ok\r\n        error\r\n        roomTypes {\r\n            _id\r\n            name\r\n            index\r\n            description\r\n            pricingType\r\n            peopleCount\r\n            peopleCountMax\r\n            roomGender\r\n            roomCount\r\n            createdAt\r\n            defaultPrice\r\n            updatedAt\r\n            img {\r\n                ...Fimg\r\n            }\r\n            rooms {\r\n                _id\r\n                name\r\n                index\r\n                createdAt\r\n                updatedAt\r\n            }\r\n        }\r\n    }\r\n    ${F_IMG}\r\n`;\r\n\r\n\r\n/* ---------------------------------- query --------------------------------- */\r\n\r\n\r\n// 하우스 명세서 가져오기\r\nexport const GET_HOUSE_SPECIFICATION = gql`\r\n    query getSpecification($houseId: ID!) {\r\n        GetHouse(houseId: $houseId) {\r\n            ok\r\n            error\r\n            house {\r\n                _id\r\n                name\r\n                houseType\r\n                status\r\n                appInfo {\r\n                    url\r\n                }\r\n                product {\r\n                    ...Fproduct\r\n                    appInfoRequested {\r\n                        ...FappInfoRequest\r\n                    }\r\n                    productType {\r\n                        _id\r\n                        name\r\n                    }\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                user {\r\n                    _id\r\n                    name\r\n                    phoneNumber\r\n                    email\r\n                    isPhoneVerified\r\n                    userRole\r\n                    userRoles\r\n                }\r\n                HM {\r\n                    publicKey\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${F_PRODUCT}\r\n    ${F_APP_INFO_REQUEST}\r\n`;\r\n\r\n// SMS :: 히스토리 가져오기\r\nexport const GET_SMS_HISTORY = gql`\r\n    query getSmsHistory($smsInfoId: ID! $page: Int! $count: Int!) {\r\n        GetSmsHistory(smsInfoId: $smsInfoId,  page: $page, count: $count) {\r\n            ok\r\n            error\r\n            smsHistories {\r\n                ...FsmsHistory\r\n            }\r\n            pageInfo {\r\n                ...FpageInfo\r\n            }\r\n        }\r\n    }\r\n    ${F_PAGE_INFO}\r\n    ${F_SMS_HISTORY}\r\n`\r\n\r\n// 방타입 :: 아이디로서 조회\r\nexport const GET_ROOMTYPE_BY_ID = gql`\r\n    query getRoomTypeById($roomTypeId: ID!) {\r\n        GetRoomTypeById(roomTypeId: $roomTypeId) {\r\n            ok\r\n            error\r\n            roomType {\r\n                _id\r\n                name\r\n                pricingType\r\n                peopleCount\r\n                peopleCountMax\r\n                index\r\n                roomGender\r\n                img {\r\n                    ...Fimg\r\n                }\r\n                description\r\n                defaultPrice\r\n                createdAt\r\n                updatedAt\r\n            }\r\n        }\r\n    }\r\n    ${F_IMG}\r\n`;\r\n\r\n\r\nexport const UPDATE_SEASON_PRICES = gql`\r\n    mutation updateSeasonPrices (\r\n        $seasonPricesInputs: [UpdateSeasonPriceInput!]\r\n        $defaultRoomTypePriceInputs: [RoomTypePriceInput!]\r\n    ) {\r\n        UpdateSeasonPrices(seasonPricesInputs:$seasonPricesInputs, defaultRoomTypePriceInputs: $defaultRoomTypePriceInputs) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`\r\n\r\n// 방타입 :: 모든 방타입을 조회\r\nexport const GET_PRODUCTS_TYPES = gql`\r\n    query getAllProductTypes {\r\n        GetAllProductTypes {\r\n            ok\r\n            error\r\n            productTypes {\r\n                ...FproductType\r\n            }\r\n        }\r\n    }\r\n    ${F_PRODUCT_TYPE}\r\n`;\r\n\r\n\r\n// 유저 :: 정보 가져오기\r\nexport const GET_USER_INFO = gql`\r\n    query getMyProfile {\r\n        GetMyProfile {\r\n            user {\r\n                ...FieldsUser\r\n                houses {\r\n                    # HM {\r\n                    #     publicKey\r\n                    # }\r\n                    houseConfig {\r\n                        ...FhouseConfig\r\n                    }\r\n                    smsInfo {\r\n                        _id\r\n                    }\r\n                    roomTypes {\r\n                        _id\r\n                        roomCount\r\n                    }\r\n                    appInfo {\r\n                        url\r\n                    }\r\n                    product {\r\n                        ...Fproduct\r\n                        productType {\r\n                            _id\r\n                        }\r\n                        appInfoRequested { \r\n                            ...FappInfoRequest\r\n                        }\r\n                    }\r\n                    ...Fhouse\r\n                    _id\r\n                    name\r\n                    completeDefaultSetting\r\n                    houseType\r\n                    publicKey\r\n                    location {\r\n                        address\r\n                        addressDetail\r\n                    }\r\n                    createdAt\r\n                    updatedAt\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${F_HOUSE}\r\n    ${F_USER_INFO}\r\n    ${F_PRODUCT}\r\n    ${F_APP_INFO_REQUEST}\r\n    ${F_HOUSE_CONFIG}\r\n`;\r\n\r\n// 슈퍼계정 :: 모든집 가져오기\r\nexport const GET_HOUSES_FOR_SU = gql`\r\n    query getHousesForSU($page: Int!, $count: Int!) {\r\n        GetHousesForSU(page: $page, count: $count) {\r\n            ok\r\n            error\r\n            houses {\r\n                _id\r\n                name\r\n                houseType\r\n                user {\r\n                    _id\r\n                    phoneNumber\r\n                    profileImg {\r\n                        ...Fimg\r\n                    }\r\n                }\r\n                location {\r\n                    address\r\n                    addressDetail\r\n                }\r\n                createdAt\r\n                updatedAt\r\n                product {\r\n                    _id\r\n                    name\r\n                    productType {\r\n                        _id\r\n                    }\r\n                }\r\n            }\r\n            pageInfo {\r\n                ...FpageInfo\r\n            }\r\n        }\r\n    }\r\n    ${F_IMG}\r\n    ${F_PAGE_INFO}\r\n`;\r\n\r\n// 유저 :: 이메일 로그인\r\nexport const EMAIL_SIGN_IN = gql`\r\n    query emailSignIn($email: EmailAddress!, $password: Password!) {\r\n        EmailSignIn(email: $email, password: $password) {\r\n            ok\r\n            error\r\n            token\r\n        }\r\n    }\r\n`;\r\n\r\n// 하우스 :: 아이디로 정보 가져오기\r\nexport const GET_HOUSE = gql`\r\n    query getHouse($houseId: ID!) {\r\n        GetHouse(houseId: $houseId) {\r\n            ok\r\n            error\r\n            house {\r\n                _id\r\n                name\r\n                houseType\r\n                smsInfo {\r\n                    _id\r\n                }\r\n                roomTypes {\r\n                    ...FroomType\r\n                    rooms {\r\n                        ...Froom\r\n                    }\r\n                }\r\n                appInfo {\r\n                    url\r\n                }\r\n                product {\r\n                    _id\r\n                    name\r\n                    productType {\r\n                        _id\r\n                    }\r\n                }\r\n                location {\r\n                    address\r\n                    addressDetail\r\n                }\r\n                HM {\r\n                    publicKey\r\n                }\r\n                publicKey\r\n                createdAt\r\n                updatedAt\r\n            }\r\n        }\r\n    }\r\n    ${F_ROOMTYPE}\r\n    ${F_ROOM}\r\n`;\r\n\r\n// 방타입 :: 모든 방타입 가격 가져오기\r\nexport const PRICE_TIMELINE_GET_PRICE = gql`\r\n  query dailyPriceGetPrice(\r\n    $houseId: ID!\r\n    $checkIn: DateTime!\r\n    $checkOut: DateTime!\r\n  ) {\r\n    GetRoomTypeDatePrices(houseId:$houseId, checkIn: $checkIn, checkOut: $checkOut) {\r\n      ok\r\n      error\r\n      roomTypeDatePrices {\r\n        roomType {\r\n          ...FroomType\r\n        }\r\n        datePrices {\r\n          date\r\n          price\r\n        }\r\n      }\r\n    }\r\n    GetAllRoomType(houseId: $houseId) {\r\n      ok\r\n      error\r\n      roomTypes {\r\n        _id\r\n        name\r\n        index\r\n        description\r\n      }\r\n    }\r\n    GetAllDailyPrice(houseId: $houseId, checkIn: $checkIn, checkOut: $checkOut) {\r\n      ok\r\n      error\r\n      dailyPrices {\r\n        _id\r\n        price\r\n        date\r\n        roomType {\r\n          _id\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${F_ROOMTYPE}\r\n`;\r\n\r\n\r\nexport const GET_CAPACITY_TO_ROOM_TYPE = gql`\r\n    query getCapacityToRoomType(\r\n        $roomTypeId: ID!\r\n        $checkIn: DateTime!\r\n        $checkOut: DateTime!\r\n        $initValue: InitValueGetCapacityToRoomInput\r\n    ) {\r\n    GetCapacityToRoomType(roomTypeId:$roomTypeId, checkIn:$checkIn, checkOut:$checkOut, initValue: $initValue) {\r\n        ok\r\n        error\r\n        capacityRoomType {\r\n            ... on CapacityRoomType {\r\n                count\r\n            }\r\n            ... on CapacityRoomTypeDomitory {\r\n                    availableCount {\r\n                        male\r\n                        female\r\n                        total\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_CAPACITY_TO_ROOM_TYPE_FOR_BOOKER = gql`\r\n    query getCapacityToRoomTypeForBooker(\r\n        $roomTypeId: ID!\r\n        $checkIn: DateTime!\r\n        $checkOut: DateTime!\r\n        $initValue: InitValueGetCapacityToRoomInput\r\n    ) {\r\n    GetCapacityToRoomTypeForBooker(roomTypeId:$roomTypeId, checkIn: $checkIn, checkOut:$checkOut, initValue: $initValue) {\r\n        ok\r\n        error\r\n        capacityRoomType {\r\n            ... on CapacityRoomType {\r\n                count\r\n            }\r\n            ... on CapacityRoomTypeDomitory {\r\n                    availableCount {\r\n                        male\r\n                        female\r\n                        total\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n\r\n// 예약 :: 예약자를 위한 예약인원 가져오기 (인증 토큰때문)\r\nexport const GET_ALL_ROOM_TYPE_FOR_BOOKING = gql`\r\n    query getAllRoomTypeForBooker {\r\n        GetAllRoomTypeForBooker {\r\n            ...FsharedGetAllRoomType\r\n        }\r\n    }\r\n    ${sharedGetAllRoomType}\r\n`;\r\n\r\n// 예약 ::모든예약 가져오기\r\nexport const GET_ALL_ROOMTYPES = gql`\r\n    query getAllRoomType($houseId: ID!) {\r\n        GetAllRoomType(houseId: $houseId) {\r\n            ...FsharedGetAllRoomType\r\n        }\r\n    }\r\n    ${sharedGetAllRoomType}\r\n`;\r\n\r\n// 예약 ::예약정보로 예약찾기 (호스트용)\r\nexport const FIND_BOOKING = gql`\r\n    query findBooking(\r\n        $name: Name!\r\n        $phoneNumber: PhoneNumber!\r\n        $password: String!\r\n        $houseId: ID\r\n    ) {\r\n        FindBooking(\r\n            name: $name\r\n            phoneNumber: $phoneNumber\r\n            password: $password\r\n            houseId: $houseId\r\n        ) {\r\n            ok\r\n            error\r\n            bookings {\r\n                ...Fbooking\r\n                guests {\r\n                    ...Fguest\r\n                    roomType {\r\n                        _id\r\n                        name\r\n                        index\r\n                        description\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${F_GUEST}\r\n    ${F_BOOKING}\r\n`;\r\n\r\n// 예약 ::예약정보로 예약찾기 (게스트용)\r\nexport const FIND_BOOKING_FOR_BOOKER = gql`\r\n    query findBookingForBooker(\r\n        $name: Name!\r\n        $phoneNumber: PhoneNumber!\r\n        $password: String!\r\n    ) {\r\n        FindBookingForBooker(\r\n            name: $name\r\n            phoneNumber: $phoneNumber\r\n            password: $password\r\n        ) {\r\n            ok\r\n            error\r\n            bookings {\r\n                ...Fbooking\r\n                payment {\r\n                    ...Fpayment\r\n                }\r\n                guests {\r\n                    ...Fguest\r\n                    roomType {\r\n                        _id\r\n                        name\r\n                        index\r\n                        description\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${F_PAYMENT}\r\n    ${F_GUEST}\r\n    ${F_BOOKING}\r\n`;\r\n\r\n\r\n\r\nexport const F_ROOM_TYPE_DATE_PRICE_RESULT = gql`\r\n    fragment FroomTypePriceResult on GetRoomTypeDatePricesResponse {\r\n        ok\r\n        error\r\n        roomTypeDatePrices {\r\n            roomType {\r\n                ...FroomType\r\n            }\r\n            datePrices {\r\n                date\r\n                price\r\n            }\r\n        }\r\n    }\r\n    ${F_ROOMTYPE}\r\n`;\r\n\r\nexport const GET_ROOM_TYPE_DATE_PRICE = gql`\r\n    query getRoomTypeDatePrices(\r\n        $checkIn: DateTime!\r\n        $checkOut: DateTime!\r\n        $roomTypeIds: [ID!]\r\n        $houseId: ID\r\n    ) {\r\n        GetRoomTypeDatePrices(checkIn: $checkIn, checkOut:$checkOut, roomTypeIds:$roomTypeIds, houseId: $houseId) {\r\n            ...FroomTypePriceResult\r\n        }\r\n    }\r\n    ${F_ROOM_TYPE_DATE_PRICE_RESULT}\r\n`\r\n\r\n\r\n// ⭐️방배정!!\r\n// 방배정 :: 모든 방막기 + 모든 방타입 + 모든 게스트 가져오기!!\r\nexport const GET_ALL_ROOMTYPES_WITH_GUESTS_WITH_ITEM = gql`\r\n    query getAllRoomTypeWithGuest(\r\n        $houseId: ID!\r\n        $checkIn: DateTime!\r\n        $checkOut: DateTime!\r\n        $bookingStatuses: [BookingStatus]\r\n    ) {\r\n        GetAllRoomType(houseId: $houseId) {\r\n            ok\r\n            error\r\n            roomTypes {\r\n                ...FroomType\r\n                rooms {\r\n                    ...Froom\r\n                }\r\n            }\r\n        }\r\n        GetGuests(\r\n            checkIn: $checkIn\r\n            checkOut: $checkOut\r\n            houseId: $houseId\r\n            bookingStatuses: $bookingStatuses\r\n        ) {\r\n            ok\r\n            error\r\n            guests {\r\n                ...on GuestDomitory {\r\n                    ...FguestDomitory\r\n                    room {\r\n                        ...Froom\r\n                    }\r\n                    roomType {\r\n                        _id\r\n                    }\r\n                    booking {\r\n                        ...Fbooking\r\n                    }\r\n                    blockOption {\r\n                        ...FblockOp\r\n                    }\r\n                }\r\n                ...on GuestRoom {\r\n                    ...FguestRoom\r\n                    roomType {\r\n                        _id\r\n                    }\r\n                    room {\r\n                        ...Froom\r\n                    }\r\n                    booking {\r\n                        ...Fbooking\r\n                    }\r\n                    blockOption {\r\n                        ...FblockOp\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        GetBlocks(checkIn: $checkIn, checkOut: $checkOut, houseId: $houseId) {\r\n            ok\r\n            error\r\n            blocks {\r\n                ...Fblock\r\n                room {\r\n                    ...Froom\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${F_ROOMTYPE}\r\n    ${F_BLOCK}\r\n    ${F_GUEST}\r\n    ${F_GUEST_DOMITORY}\r\n    ${F_GUEST_ROOM}\r\n    ${F_ROOM}\r\n    ${F_BLOCK_OP}\r\n    ${F_BOOKING}\r\n`;\r\n\r\n// 방타입 :: 모든 방타입 가격 가져오기\r\nexport const GET_ALL_ROOMTYPES_PRICE = gql`\r\n    query getAllRoomTypePrice(\r\n        $houseId: ID!\r\n        $checkIn: DateTime!\r\n        $checkOut: DateTime!\r\n    ) {\r\n        GetAllRoomType(houseId: $houseId) {\r\n            ok\r\n            error\r\n            roomTypes {\r\n                _id\r\n                name\r\n                index\r\n                description\r\n            }\r\n        }\r\n        GetAllDailyPrice(houseId: $houseId, checkIn: $checkIn, checkOut: $checkOut) {\r\n            ok\r\n            error\r\n            dailyPrices {\r\n                _id\r\n                price\r\n                date\r\n                roomType {\r\n                    _id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// 슈퍼유저 ::모든 유저 가져오기\r\nexport const GET_USER_FOR_SU = gql`\r\n    query getUserForSU($userId: ID!) {\r\n        GetUserForSU(userId: $userId) {\r\n            ok\r\n            error\r\n            user {\r\n                ...FieldsUser\r\n                houses {\r\n                    houseConfig {\r\n                        ...FhouseConfig\r\n                    }\r\n                    smsInfo {\r\n                        _id\r\n                    }\r\n                    roomTypes {\r\n                        _id\r\n                    }\r\n                    appInfo {\r\n                        url\r\n                    }\r\n                    product {\r\n                        ...Fproduct\r\n                        productType {\r\n                            _id\r\n                        }\r\n                        appInfoRequested { \r\n                            ...FappInfoRequest\r\n                        }\r\n                    }\r\n                    _id\r\n                    name\r\n                    houseType\r\n                    location {\r\n                        address\r\n                        addressDetail\r\n                    }\r\n                    createdAt\r\n                    updatedAt\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${F_USER_INFO}\r\n    ${F_PRODUCT}\r\n    ${F_APP_INFO_REQUEST}\r\n    ${F_HOUSE_CONFIG}\r\n`;\r\n\r\n// 배정 ::블록 옵션 설정\r\nexport const UPDATE_BLOCK_OPTION = gql`\r\n    mutation updateBlockOption(\r\n        $guestId: ID!\r\n        $blockOption: BlockOptionInput!\r\n        $applyWithBooking: Boolean!\r\n    ) {\r\n        UpdateBlockOption(guestId:$guestId, blockOption: $blockOption, applyWithBooking:$applyWithBooking) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 다큐먼트 ::  모든 README 패스 가져오기\r\nexport const GET_ALL_README = gql`\r\n    query getAllReadMe {\r\n        GetAllReadMe {\r\n            ok\r\n            error\r\n            paths\r\n        }\r\n    }\r\n`;\r\n\r\n// 다큐먼트 ::  모든 README 패스 가져오기\r\nexport const GET_FILE_TXT = gql`\r\n    query getFileTxt($path:String!) {\r\n        GetFileTxt(path: $path) {\r\n            ok\r\n            error\r\n            fileTxt\r\n        }\r\n    }\r\n`;\r\n\r\n// BOOKING_FOR_PUBLIC 가져오기\r\nexport const GET_BOOKING_FOR_PUBLIC = gql`\r\n    query getBookingForPublic(\r\n        $transactionId: String\r\n        $getBookingParam: GetBookingParams\r\n        $skip: Boolean!\r\n    ) {\r\n        GetBookingForPublic(transactionId: $transactionId, getBookingParam:$getBookingParam) @skip(if: $skip) {\r\n            ok\r\n            error\r\n            booking {\r\n                ...Fbooking\r\n                guests {\r\n                    ...Fguest\r\n                    roomType {\r\n                        _id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n${F_GUEST}\r\n${F_BOOKING}\r\n`\r\n\r\n\r\n// 예약 ::모든 예약을 가져옴\r\n\r\nexport const GET_BOOKINGS_PHONE_NUMBERS = gql`\r\n    query getPhoneNumbers(\r\n        $houseId: ID!\r\n        $page: Int!\r\n        $count: Int!\r\n        $filter: GetBookingsFilter\r\n    ) {\r\n        GetBookings(\r\n            houseId: $houseId\r\n            page: $page\r\n            count: $count\r\n            filter: $filter\r\n        ) {\r\n            ok\r\n            error\r\n            bookings {\r\n                _id\r\n                phoneNumber\r\n            }\r\n        }\r\n    }`;\r\n\r\n\r\n\r\nexport const GET_CHECKINS = gql`\r\n    query getCheckIns(\r\n        $houseId: ID!\r\n        $page: Int!\r\n        $count: Int!\r\n        $filter: GetBookingsFilter\r\n    ) {\r\n        GetBookings(\r\n            houseId: $houseId\r\n            page: $page\r\n            count: $count\r\n            filter: $filter\r\n        ) {\r\n            ok\r\n            error\r\n            bookings {\r\n                checkInInfo {\r\n            isIn\r\n            checkInDateTime\r\n            }\r\n            }\r\n        }\r\n    }`\r\n\r\nexport const GET_BOOKINGS = gql`\r\n    query getBookings(\r\n        $houseId: ID!\r\n        $page: Int!\r\n        $count: Int!\r\n        $filter: GetBookingsFilter\r\n    ) {\r\n        GetBookings(\r\n            houseId: $houseId\r\n            page: $page\r\n            count: $count\r\n            filter: $filter\r\n        ) {\r\n            ok\r\n            error\r\n            bookings {\r\n                ...Fbooking\r\n                guests {\r\n                    ... on GuestDomitory {\r\n                        ...FguestDomitory\r\n                        roomType {\r\n                            _id\r\n                            name\r\n                        }\r\n                    }\r\n                    ... on GuestRoom {\r\n                        ...FguestRoom\r\n                        roomType {\r\n                            _id\r\n                        }\r\n                    }\r\n                }\r\n                roomTypes {\r\n                    _id\r\n                    name\r\n                    pricingType\r\n                }\r\n                createdAt\r\n                updatedAt\r\n            }\r\n            pageInfo {\r\n                ...FpageInfo\r\n            }\r\n        }\r\n    }\r\n    ${F_PAYMENT}\r\n    ${F_GUEST}\r\n    ${F_GUEST_DOMITORY}\r\n    ${F_GUEST_ROOM}\r\n    ${F_BOOKING}\r\n    ${F_PAGE_INFO}\r\n`;\r\n\r\n// 예약 :: 아이디로서 예약을 조회\r\nexport const GET_BOOKING = gql`\r\n    query getBooking($bookingId: ID!) {\r\n        GetBooking(bookingId: $bookingId) {\r\n            ok\r\n            error\r\n            booking {\r\n                ...Fbooking\r\n                guests {\r\n                    ... on GuestDomitory {\r\n                        ...FguestDomitory\r\n                        roomType {\r\n                            _id\r\n                            name\r\n                        }\r\n                        room {\r\n                            _id\r\n                            name\r\n                        }\r\n                    }\r\n                    ... on GuestRoom {\r\n                        ...FguestRoom\r\n                        roomType {\r\n                            _id\r\n                            name\r\n                        }\r\n                        room {\r\n                            _id\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n                roomTypes {\r\n                    _id\r\n                    name\r\n                    pricingType\r\n                }\r\n                createdAt\r\n                updatedAt\r\n            }\r\n        }\r\n    }\r\n    ${F_GUEST_ROOM}\r\n    ${F_GUEST_DOMITORY}\r\n    ${F_GUEST}\r\n    ${F_BOOKING}\r\n`;\r\n\r\n\r\n\r\nexport const GET_SALES_STATISTIC = gql`\r\n    query getSalesStatistic(\r\n        $houseId: ID!\r\n        $checkIn: DateTime!\r\n        $checkOut: DateTime!\r\n        $unit: SalesStatisticsUnit!\r\n        $groupByPayMethod: Boolean\r\n    ){ \r\n        GetSalesStatistic(houseId:$houseId, checkIn:$checkIn, checkOut:$checkOut, unit:$unit, groupByPayMethod: $groupByPayMethod) {\r\n            ok\r\n            error\r\n            data {\r\n                dateInfo {\r\n                    year\r\n                    month\r\n                    week\r\n                    date\r\n                    dayOfWeek\r\n                }\r\n                price\r\n                payMethod\r\n            }\r\n        }\r\n}`;\r\n\r\n\r\nexport const CHANGE_INDEX_FOR_ROOMTYPE = gql`\r\n    mutation changeIndexForRoomType($roomTypeId: ID!, $houseId: ID!, $index: Int!) {\r\n        ChangeIndexForRoomType(\r\n            roomTypeId:$roomTypeId\r\n            houseId: $houseId\r\n            index: $index\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`\r\n\r\n\r\n// START 시즌관련 ────────────────────────────────────────────────────────────────────────────────\r\n// 시즌 :: 시즌 + 방타입 + 시즌가격\r\nexport const GET_ALL_SEASON_TABLE = gql`\r\n    query getAllSeasonTable($houseId: ID!) {\r\n        GetAllSeason(houseId: $houseId) {\r\n            ok\r\n            error\r\n            seasons {\r\n                ...FallSeason\r\n            }\r\n        }\r\n        GetAllRoomType(houseId: $houseId) {\r\n            ok\r\n            error\r\n            roomTypes {\r\n                _id\r\n                name\r\n                index\r\n                description\r\n                defaultPrice\r\n            }\r\n        }\r\n        GetSeasonPrice(houseId: $houseId) {\r\n            ok\r\n            error\r\n            seasonPrices {\r\n                _id\r\n                roomType {\r\n                    _id\r\n                }\r\n                season {\r\n                    _id\r\n                }\r\n                defaultPrice\r\n                dayOfWeekPriceList {\r\n                    day\r\n                    price\r\n                    additionalPrice\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${F_ALL_SEASON}\r\n`;\r\n\r\n/* -------------------------------- mutation -------------------------------- */\r\n\r\n// START 예약관련 ────────────────────────────────────────────────────────────────────────────────\r\n// 예약 :: 업데이트 예약\r\nexport const UPDATE_BOOKING = gql`\r\n    mutation updateBooking(\r\n        $bookingId: ID!\r\n        $params: UpdateBookingMutationParamsInput!\r\n        $sendSmsFlag: Boolean\r\n    ) {\r\n        UpdateBooking(\r\n            bookingId: $bookingId\r\n            params: $params\r\n            sendSmsFlag: $sendSmsFlag\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 게스트 :: 삭제 게스트\r\nexport const DELETE_GUEST = gql`\r\n    mutation deleteGuests($guestIds: [ID!]) {\r\n        DeleteGuests(guestIds: $guestIds) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 예약 ::예약생성 (게스트용)\r\nexport const START_BOOKING_FOR_PUBLIC = gql`\r\n    mutation startBookingForPublic(\r\n        $bookerParams: StartBookingBookerInput!\r\n        $checkInOut: CheckInOutInput!\r\n        $guestDomitoryParams: [StartBookingDomitoryGuestInput!]\r\n        $guestRoomParams: [StartBookingRoomGuestInput!]\r\n        $paymentParams: StartBookingPaymentInput!\r\n    ) {\r\n        StartBookingForPublic(\r\n            bookerParams: $bookerParams\r\n            checkInOut: $checkInOut\r\n            guestDomitoryParams: $guestDomitoryParams\r\n            guestRoomParams: $guestRoomParams\r\n            paymentParams: $paymentParams\r\n        ) {\r\n            ok\r\n            error\r\n            bookingTransaction {\r\n              ...FbookingTransaction\r\n            }\r\n        }\r\n    }\r\n    ${F_BOOKING_TRANSACTION}\r\n`;\r\n\r\nexport const START_BOOKING = gql`\r\n    mutation startBooking(\r\n        $houseId: ID!\r\n        $bookerParams: StartBookingBookerInput!\r\n        $checkInOut: CheckInOutInput!\r\n        $guestDomitoryParams: [StartBookingDomitoryGuestInput!]\r\n        $guestRoomParams: [StartBookingRoomGuestInput!]\r\n        $paymentParams: StartBookingPaymentInput!\r\n        $allocationParams: [AllocationInput!]\r\n        $forceToAllocate: Boolean\r\n    ) {\r\n        StartBooking(\r\n            houseId: $houseId\r\n            bookerParams: $bookerParams\r\n            checkInOut: $checkInOut\r\n            guestDomitoryParams: $guestDomitoryParams\r\n            guestRoomParams: $guestRoomParams\r\n            paymentParams: $paymentParams\r\n            allocationParams: $allocationParams\r\n            forceToAllocate: $forceToAllocate\r\n        ) {\r\n            ok\r\n            error\r\n            bookingTransaction {\r\n              ...FbookingTransaction\r\n              booking {\r\n                  _id\r\n              }\r\n            }\r\n        }\r\n    }\r\n    ${F_BOOKING_TRANSACTION}\r\n`;\r\n\r\n// // 예약 :: 예약생성 (호스트용)\r\n// export const START_BOOKING = gql`\r\n//     mutation startBooking(\r\n//         $bookingParams: CreateBookingParams!\r\n//         $sendSmsFlag: Boolean!\r\n//     ) {\r\n//         CreateBooking(\r\n//             bookingParams: $bookingParams\r\n//             sendSmsFlag: $sendSmsFlag\r\n//         ) {\r\n//             ok\r\n//             error\r\n//             booking {\r\n//                 ...Fbooking\r\n//                 guests {\r\n//                     ...Fguest\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n//     ${F_BOOKING}\r\n//     ${F_GUEST}\r\n// `;\r\n\r\n// 방배정 :: 게스트를 방에다 배정\r\nexport const ALLOCATE_GUEST_TO_ROOM = gql`\r\n    mutation allocateGuestToRoom($guestId: ID!, $allocateInfo: AllocateInfoInput!, $options: AllocateOptions) {\r\n        AllocateGuestToRoom(\r\n            guestId: $guestId\r\n            allocateInfo: $allocateInfo\r\n            options: $options\r\n        ) {\r\n            ok\r\n            error\r\n            guest {\r\n                ...Fguest\r\n            }\r\n        }\r\n    }\r\n    ${F_GUEST}\r\n`;\r\n\r\nexport const GET_PAYMENT_AUTH = gql`\r\n    query getPaymentAuth(\r\n        $price: Float!\r\n    ){\r\n        GetPaymentAuth(\r\n            price: $price\r\n        ){\r\n            ok\r\n            error\r\n            auth {\r\n                merchantId\r\n                mid\r\n                hash\r\n            }\r\n            houseName\r\n            date\r\n        }\r\n    }\r\n`\r\n\r\n\r\n// 방타입 :: 방타입 생성\r\nexport const CREATE_ROOMTYPE = gql`\r\n    mutation createRoomType(\r\n        $params: CreateRoomTypeInput!\r\n    ) {\r\n        CreateRoomType(\r\n            params: $params\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 방 :: 방생성\r\nexport const CREATE_ROOM = gql`\r\n    mutation createRoom($name: String!, $roomType: ID!) {\r\n        CreateRoom(name: $name, roomType: $roomType) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 방배정 :: 방막기 해제\r\nexport const DELETE_BLOCK = gql`\r\n    mutation deleteBlock($blockId: ID!) {\r\n        DeleteBlock(blockId: $blockId) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 방배정 :: 방막기\r\nexport const CREATE_BLOCK = gql`\r\n    mutation createBlock(\r\n        $checkIn: DateTime!\r\n        $checkOut: DateTime!\r\n        $houseId: ID!\r\n        $roomId: ID!\r\n        $bedIndex: Int!\r\n    ) {\r\n        CreateBlock(\r\n            checkIn: $checkIn\r\n            checkOut: $checkOut\r\n            houseId: $houseId\r\n            roomId: $roomId\r\n            bedIndex: $bedIndex\r\n        ) {\r\n            ok\r\n            error\r\n            block {\r\n                ...Fblock\r\n                room {\r\n                    ...Froom\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${F_ROOM}\r\n    ${F_BLOCK}\r\n`;\r\n// 디테일 가격설정 :: 방가격 생성\r\nexport const CREATE_DAILY_PRICE = gql`\r\n    mutation createDailyPrice(\r\n        $price: Float!\r\n        $roomTypeId: ID!\r\n        $houseId: ID!\r\n        $date: DateTime!\r\n    ) {\r\n        CreateDailyPrice(\r\n            price: $price\r\n            roomTypeId: $roomTypeId\r\n            houseId: $houseId\r\n            date: $date\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 예약 ::예약삭제\r\nexport const DELETE_BOOKING = gql`\r\n    mutation deleteBooking($bookingId: ID!) {\r\n        DeleteBooking(bookingId: $bookingId) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 디테일 가격설정 :: 방가격 삭제\r\nexport const DELETE_DAILY_PRICE = gql`\r\n    mutation deleteDailyPrice($roomTypeId: ID!, $date: DateTime!) {\r\n        DeleteDailyPrice(roomTypeId: $roomTypeId, date: $date) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 방타입 :: 방타입 제거\r\nexport const DELETE_ROOMTYPE = gql`\r\n    mutation deleteRoomType($houseId: ID!, $roomTypeId: ID!) {\r\n        DeleteRoomType(houseId: $houseId, roomTypeId: $roomTypeId) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 방 :: 방 제거\r\nexport const DELETE_ROOM = gql`\r\n    mutation deleteRoom($roomId: ID!) {\r\n        DeleteRoom(roomId: $roomId) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 방 :: 업데이트 방\r\nexport const UPDATE_ROOM = gql`\r\n    mutation updateRoom($roomId: ID!, $name: String) {\r\n        UpdateRoom(roomId: $roomId, name: $name) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 방타입 :: 방타입 업데이트\r\nexport const UPDATE_ROOMTYPE = gql`\r\n    mutation updateRoomType(\r\n        $roomTypeId: ID!\r\n        $params: UpdateRoomTypeInput!\r\n    ) {\r\n        UpdateRoomType(\r\n            roomTypeId: $roomTypeId\r\n            params: $params\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// START 시즌관련 ────────────────────────────────────────────────────────────────────────────────\r\n// 시즌 :: 시즌가격생성 (현재 사용안함)\r\nexport const CREATE_SEASON_PRICE = gql`\r\n    mutation createSeasonPrice(\r\n        $roomTypeId: ID!\r\n        $seasonId: ID!\r\n        $defaultPrice: Float!\r\n        $dayOfWeekPriceList: [DayOfWeekPriceInput!]\r\n    ) {\r\n        CreateSeasonPrice(\r\n            roomTypeId: $roomTypeId\r\n            seasonId: $seasonId\r\n            defaultPrice: $defaultPrice\r\n            dayOfWeekPriceList: $dayOfWeekPriceList\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 시즌 :: 시즌생성\r\nexport const CREATE_SEASON = gql`\r\n    mutation createSeason(\r\n        $name: String!\r\n        $start: DateTime!\r\n        $end: DateTime!\r\n        $houseId: ID!\r\n        $color: String\r\n        $description: String\r\n        $seasonPrices: [SeasonPriceInput!]\r\n    ) {\r\n        CreateSeason(\r\n            name: $name\r\n            start: $start\r\n            end: $end\r\n            houseId: $houseId\r\n            color: $color\r\n            description: $description\r\n            seasonPrices: $seasonPrices\r\n        ) {\r\n            ok\r\n            error\r\n            season {\r\n                _id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// 시즌 :: 우선순위를 바꿈\r\nexport const CHANGE_PRIORITY = gql`\r\n    mutation changePriority($seasonId: ID!, $houseId: ID!, $priority: Int!) {\r\n        ChangePriority(\r\n            seasonId: $seasonId\r\n            houseId: $houseId\r\n            priority: $priority\r\n        ) {\r\n            ok\r\n            error\r\n            season {\r\n                _id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// 시즌 :: 시즌 삭제\r\nexport const DELETE_SEASON = gql`\r\n    mutation deleteSeason($seasonId: ID!, $houseId: ID!) {\r\n        DeleteSeason(seasonId: $seasonId, houseId: $houseId) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 시즌 :: 시즌 업데이트\r\nexport const UPDATE_SEASON = gql`\r\n    mutation updateSeason(\r\n        $name: String\r\n        $start: DateTime\r\n        $end: DateTime\r\n        $seasonId: ID!\r\n        $color: String\r\n        $description: String\r\n        $seasonPrices: [SeasonPriceInput!]\r\n    ) {\r\n        UpdateSeason(\r\n            seasonPrices: $seasonPrices\r\n            name: $name\r\n            start: $start\r\n            end: $end\r\n            seasonId: $seasonId\r\n            color: $color\r\n            description: $description\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 호스트관련 ────────────────────────────────────────────────────────────────────────────────\r\n// 유저 :: 프로필 업데이트\r\nexport const UPDATE_MYPROFILE = gql`\r\n    mutation updateMyProfile(\r\n        $name: Name!\r\n        $phoneNumber: PhoneNumber!\r\n        $email: EmailAddress!\r\n        $password: Password!\r\n        $profileImg: JdFileInput\r\n    ) {\r\n        UpdateMyProfile(\r\n            name: $name\r\n            phoneNumber: $phoneNumber\r\n            email: $email\r\n            password: $password\r\n            profileImg: $profileImg\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 유저 :: 휴대폰인증 (유저용)\r\nexport const PHONE_VERIFICATION = gql`\r\n    mutation startPhoneVerification {\r\n        StartPhoneVerification {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n//  유저 :: 휴대폰인증(발신자용)\r\nexport const START_PHONE_VERIFICATION_WITH_PHONE_NUMBER = gql`\r\n    mutation startPhoneVerificationWithPhoneNumber($phoneNumber: PhoneNumber!) {\r\n        StartSenderVerification(phoneNumber: $phoneNumber) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 유저 :: 휴대폰 인증 완료 키를 보냄\r\nexport const COMEPLETE_PHONE_VERIFICATION = gql`\r\n    mutation completePhoneVerification($key: String!) {\r\n        CompletePhoneVerification(key: $key) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 유저 :: 회원가입\r\nexport const EMAIL_SIGN_UP = gql`\r\n    mutation emailSignUp(\r\n        $name: Name!\r\n        $email: EmailAddress!\r\n        $phoneNumber: PhoneNumber!\r\n        $password: Password!\r\n    ) {\r\n        EmailSignUp(\r\n            name: $name\r\n            email: $email\r\n            password: $password\r\n            phoneNumber: $phoneNumber\r\n        ) {\r\n            ok\r\n            error\r\n            token\r\n        }\r\n    }\r\n`;\r\n// 숙소관련 ────────────────────────────────────────────────────────────────────────────────\r\n// 하우스 :: 하우스 업데이트\r\nexport const UPDATE_HOUSE = gql`\r\n    mutation updateHouse(\r\n        $houseId: ID!\r\n        $name: String\r\n        $houseType: HouseType\r\n        $location: LocationInput\r\n        $completeDefaultSetting: Boolean\r\n        $refundPolicy: [TermsOfRefundInput!]\r\n        $termsOfBooking: TermsOfBookingInput\r\n    ) {\r\n        UpdateHouse(\r\n            houseId: $houseId\r\n            name: $name\r\n            houseType: $houseType\r\n            location: $location\r\n            refundPolicy: $refundPolicy\r\n            termsOfBooking: $termsOfBooking\r\n            completeDefaultSetting: $completeDefaultSetting\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 숙소설정 업데이트\r\nexport const UPDATE_HOUSE_CONFIG = gql`\r\n    mutation updateHouseConfig(\r\n        $houseId: ID!\r\n        $UpdateHouseConfigParams: UpdateHouseConfigParams\r\n    ) {\r\n        UpdateHouseConfig(\r\n            houseId: $houseId\r\n            params: $UpdateHouseConfigParams\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 하우스 :: 하우스생성\r\nexport const CREATE_HOUSE = gql`\r\n    mutation createHouse(\r\n        $name: String!\r\n        $houseType: HouseType!\r\n        $location: LocationInput!\r\n    ) {\r\n        CreateHouse(name: $name, houseType: $houseType, location: $location) {\r\n            ok\r\n            error\r\n            house {\r\n                _id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n// 하우스 :: 하우스삭제\r\nexport const DELETE_HOUSE = gql`\r\n    mutation deleteHouse($id: String!) {\r\n        DeleteHouse(_id: $id) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 상품관련 ────────────────────────────────────────────────────────────────────────────────\r\n// 상품 :: 상품구매\r\nexport const BUY_PRODUCTS = gql`\r\n    mutation buyProduct($houseId: ID!, $productTypeId: ID!, $appInfoRequest: AppInfoRequestInput!) {\r\n        BuyProduct(houseId: $houseId, productTypeId: $productTypeId, appInfoRequest: $appInfoRequest) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n// 상품 :: 상품해지\r\nexport const REFUND_PRODUCT = gql`\r\n    mutation refundProduct($houseId: ID!, $productId: ID!) {\r\n        RefundProduct(houseId: $houseId, productId: $productId) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n/*  sms-------------------------------------------------------------------------- */\r\n// SMS :: SMS 템플릿 생성\r\nexport const CREATE_SMS_TEMPLATE = gql`\r\n    mutation createSmsTemplate($houseId: ID!, $params: SmsTemplateInput!) {\r\n        CreateSmsTemplate(houseId: $houseId, params: $params) {\r\n            ok\r\n            error\r\n            smsTemplate {\r\n                ...FsmsTemplate\r\n            }\r\n        }\r\n    }\r\n    ${F_SMS_TEMPLATE}\r\n`;\r\n// SMS :: 템플릿 삭제\r\nexport const DELETE_SMS_TEMPLATE = gql`\r\n    mutation deleteSmsTemplate($smsInfoId: ID!, $smsTemplateId: ID!) {\r\n        DeleteSmsTemplate(\r\n            smsInfoId: $smsInfoId\r\n            smsTemplateId: $smsTemplateId\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// SMS :: SMS 정보 가져오기\r\nexport const GET_SMS_INFO = gql`\r\n    query getSmsInfo($houseId: ID!) {\r\n        GetSmsInfo(houseId: $houseId) {\r\n            ok\r\n            error\r\n            smsInfo {\r\n                _id\r\n                sender {\r\n                    ...FsmsSender\r\n                }\r\n                receivers\r\n                smsTemplates {\r\n                    ...FsmsTemplate\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${F_SMS_SENDER}\r\n    ${F_SMS_TEMPLATE}\r\n`;\r\n\r\n// SMS :: SMS 업데이트\r\nexport const UPDATE_SMS_TEMPLATE = gql`\r\n    mutation updateSmsTemplate(\r\n        $smsTemplateId: ID!\r\n        $houseId: ID!\r\n        $params: UpdateSmsTemplateInput!\r\n    ) {\r\n        UpdateSmsTemplate(\r\n            smsTemplateId: $smsTemplateId\r\n            houseId: $houseId\r\n            params: $params\r\n        ) {\r\n            ok\r\n            error\r\n            smsTemplate {\r\n                ...FsmsTemplate\r\n            }\r\n        }\r\n    }\r\n    ${F_SMS_TEMPLATE}\r\n`;\r\n\r\n// SMS :: SMS 전송\r\nexport const SEND_SMS = gql`\r\n    mutation sendSms(\r\n        $receivers: [PhoneNumber!]\r\n        $msg: String!\r\n        $smsInfoId: ID!\r\n        $bookingIds: [ID!]\r\n    ) {\r\n        SendSms(bookingIds:$bookingIds, smsInfoId: $smsInfoId, receivers: $receivers, msg: $msg) {\r\n            ok\r\n            error\r\n            result {\r\n                resultCode\r\n                message\r\n                msgType\r\n                msgId\r\n                successCnt\r\n                errorCnt\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_USER_FOR_SU = gql`\r\n    mutation updateUserForSU(\r\n        $productId: ID!\r\n        $productParams: UpdateProductParams!\r\n        $houseId: ID!\r\n        $status: HouseStatus!\r\n    ) {\r\n        UpdateProductForSU(productId: $productId, params: $productParams) {\r\n            ok\r\n            error\r\n        }\r\n        UpdateHouse(houseId: $houseId, status: $status) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 발신자 등록 (현재안쓰임)\r\nexport const CONFIRM_BOOKING = gql`\r\n    mutation confirmBooking(\r\n        $bookingId: ID!\r\n    ) {\r\n        ConfirmBooking(\r\n        bookingId: $bookingId\r\n        ) {\r\n            ok\r\n            error\r\n        }\r\n    }\r\n`;\r\n\r\n// 발신자 등록 (현재안쓰임)\r\nexport const UPDATE_SENDER = gql`\r\n    mutation updateSender($houseId: ID!, $sender: SmsSenderInput!) {\r\n        UpdateSender(houseId: $houseId, sender: $sender) {\r\n            ok\r\n            error\r\n            sender {\r\n                ...FsmsSender\r\n            }\r\n            verified\r\n        }\r\n    }\r\n    ${F_SMS_SENDER}\r\n`;\r\n\r\n// 게스트용\r\nexport const GET_HOUSE_MENUAL = gql`\r\n    query getHM($houseId: ID!) {\r\n            GetHM(houseId:$houseId) {\r\n                ok\r\n                error\r\n                HM {\r\n                    ...FHM\r\n                    menus {\r\n                        ...FHMmenu\r\n                    }\r\n                    location {\r\n                        address\r\n                        addressDetail\r\n                        lat\r\n                        lng\r\n                    }\r\n                }\r\n            }\r\n        } \r\n    ${F_IMG}\r\n    ${F_HMM}\r\n    ${F_HM}\r\n`\r\n\r\n// // 호스트용\r\n// export const GET_HOUSE_MENUAL_CONFIG = gql`\r\n//     query getHM($houseId: ID!) {\r\n//             GetHM(houseId:$houseId) {\r\n//                 ok\r\n//                 error\r\n//                 HM {\r\n//                     ...FHM\r\n//                     menus {\r\n//                         ...FHMmenu\r\n//                     }\r\n//                     location {\r\n//                         address\r\n//                         addressDetail\r\n//                         lat\r\n//                         lng\r\n//                     }\r\n//                 }\r\n//             }\r\n//         } \r\n//     ${F_HMM}\r\n//     ${F_HM}\r\n// `\r\n\r\nexport const GET_HOUSE_MENUAL_FOR_PUBLIC = gql`\r\n    query getHMforPublic {\r\n            GetHMforPublic {\r\n                ok\r\n                error\r\n                HM {\r\n                    ...FHM\r\n                    menus {\r\n                        ...FHMmenu\r\n                    }\r\n                    location {\r\n                        address\r\n                        addressDetail\r\n                        lat\r\n                        lng\r\n                    }\r\n                }\r\n            }\r\n        } \r\n    ${F_HMM}\r\n    ${F_HM}\r\n`\r\n\r\nexport const UPDATE_HM = gql`\r\n    mutation updateHM($houseId: ID!, $updateParams: UpdateHMparams!) {\r\n        UpdateHM(houseId: $houseId, updateParams: $updateParams) {\r\n            ok\r\n            error\r\n        }\r\n    } \r\n`\r\n// MEMO 가져오기\r\nexport const GET_MEMO = gql`\r\n    query getMemos($houseId: ID!, $memoType: MemoType) {\r\n        GetMemos(houseId: $houseId, memoType: $memoType) {\r\n            ok\r\n            error\r\n            memos {\r\n                ...Fmemo\r\n            }\r\n        }\r\n    }\r\n${F_MEMO}\r\n`\r\n\r\nexport const UPDATE_MEMO = gql`\r\n    mutation updateMemo($memoId: ID!, $updateMemoParams: UpdateMemoParams!) {\r\n        UpdateMemo(memoId: $memoId, updateMemoParams: $updateMemoParams) {\r\n            ok\r\n            error\r\n        }\r\n    } \r\n`\r\n\r\nexport const CREATE_MEMO = gql`\r\n    mutation createMemo($houseId: ID!, $createMemoParams: CreateMemoParams!) {\r\n        CreateMemo(houseId: $houseId, createMemoParams: $createMemoParams) {\r\n            ok\r\n            error\r\n        }\r\n    } \r\n`\r\n\r\nexport const DELETE_MEMO = gql`\r\n    mutation deleteMemo($memoId: ID!) {\r\n        DeleteMemo(memoId: $memoId) {\r\n            ok\r\n            error\r\n        }\r\n    } \r\n`\r\n// MEMO 가져오기\r\nexport const GET_NOTI = gql`\r\n    query getNotis($houseId: ID!, $count: Int!) {\r\n        GetNotis(houseId: $houseId count: $count) {\r\n            ok\r\n            error\r\n            notis {\r\n                ...FNoti\r\n            }\r\n        }\r\n    }\r\n${F_NOTI}\r\n`\r\n\r\nexport const UPLOAD_FILE = gql`\r\n  mutation singleUpload($file: Upload!) {\r\n    SingleUpload(file: $file) {\r\n      ok\r\n      error\r\n      jdFile {\r\n          ...Fimg\r\n      }\r\n    }\r\n  }\r\n  ${F_IMG}\r\n`;\r\n\r\nexport const CONFIRM_NOTI = gql`\r\n    mutation confirmNoti($houseId: ID!, $notiIds: [ID!]!) {\r\n        ConfirmNoti(houseId: $houseId, notiIds:$notiIds) {\r\n            ok\r\n            error\r\n        }\r\n    } \r\n`\r\n\r\nexport const CREATE_NOTI = gql`\r\n    mutation createNoti($houseIds: [ID]!, $createNotiParams: CreateNotiParams!) {\r\n        CreateNoti(houseIds: $houseIds, createNotiParams: $createNotiParams) {\r\n            ok\r\n            error\r\n        }\r\n    } \r\n`\r\n\r\n"]},"metadata":{},"sourceType":"module"}