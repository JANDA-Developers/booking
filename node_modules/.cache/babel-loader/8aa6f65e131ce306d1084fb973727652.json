{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\forms\\\\switch\\\\Switch.tsx\";\nimport React from \"react\";\nimport \"./Switch.scss\";\nimport classNames from \"classnames\";\nimport JDlabel from \"../../label/JDLabel\";\nimport { s4 } from \"../../../utils/utils\";\nimport Tooltip from \"../../tooltip/Tooltip\";\n\nvar JDswitch = function JDswitch(_ref) {\n  var disabled = _ref.disabled,\n      _ref$checked = _ref.checked,\n      checked = _ref$checked === void 0 ? false : _ref$checked,\n      onChange = _ref.onChange,\n      ltxt = _ref.ltxt,\n      tooltip = _ref.tooltip,\n      rtxt = _ref.rtxt,\n      label = _ref.label;\n\n  var handleCheckboxChange = function handleCheckboxChange() {\n    var flag = disabled ? checked : !checked;\n    onChange && onChange(flag);\n  };\n\n  var classes = classNames({\n    JDswitch__input: true\n  });\n  var newId = s4();\n  return React.createElement(\"span\", {\n    className: \"JDswitch-wrapWrap\",\n    \"data-tip\": tooltip,\n    \"data-for\": tooltip ? \"btnTooltip\".concat(newId) : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"JDswitch-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, label && React.createElement(JDlabel, {\n    txt: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    tabIndex: 0,\n    className: \"JDswitch\",\n    role: \"button\",\n    onKeyPress: handleCheckboxChange,\n    onClick: handleCheckboxChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"JDswitch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, ltxt !== \"\" && React.createElement(\"span\", {\n    className: \"JDswitch__ltxt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, ltxt), React.createElement(\"input\", {\n    onChange: function onChange() {},\n    checked: checked,\n    className: classes,\n    disabled: disabled,\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"JDswitch__lever\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), rtxt !== \"\" && React.createElement(\"span\", {\n    className: \"JDswitch__rtxt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, rtxt))), tooltip && React.createElement(Tooltip, {\n    type: \"dark\",\n    effect: \"solid\",\n    id: \"btnTooltip\".concat(newId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, tooltip))));\n};\n\nexport default JDswitch;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/forms/switch/Switch.tsx"],"names":["React","classNames","JDlabel","s4","Tooltip","JDswitch","disabled","checked","onChange","ltxt","tooltip","rtxt","label","handleCheckboxChange","flag","classes","JDswitch__input","newId","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAA8B,OAA9B;AACA,OAAO,eAAP;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAAQC,EAAR,QAAiB,sBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAYA,IAAMC,QAA0B,GAAG,SAA7BA,QAA6B,OAQ7B;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,0BANJC,OAMI;AAAA,MANJA,OAMI,6BANM,KAMN;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADJC,KACI,QADJA,KACI;;AACJ,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC,QAAMC,IAAI,GAAGR,QAAQ,GAAGC,OAAH,GAAa,CAACA,OAAnC;AACAC,IAAAA,QAAQ,IAAIA,QAAQ,CAACM,IAAD,CAApB;AACD,GAHD;;AAKA,MAAMC,OAAO,GAAGd,UAAU,CAAC;AACzBe,IAAAA,eAAe,EAAE;AADQ,GAAD,CAA1B;AAIA,MAAMC,KAAK,GAAGd,EAAE,EAAhB;AAEA,SACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,gBAAUO,OAFZ;AAGE,gBAAUA,OAAO,uBAAgBO,KAAhB,IAA0BC,SAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,IAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEE;AACE,IAAA,QAAQ,EAAE,CADZ;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,UAAU,EAAEC,oBAJd;AAKE,IAAA,OAAO,EAAEA,oBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,KAAK,EAAT,IAAe;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,IAAlC,CADlB,EAEE;AACE,IAAA,QAAQ,EAAE,oBAAM,CAAE,CADpB;AAEE,IAAA,OAAO,EAAEF,OAFX;AAGE,IAAA,SAAS,EAAEQ,OAHb;AAIE,IAAA,QAAQ,EAAET,QAJZ;AAKE,IAAA,IAAI,EAAC,UALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUGK,IAAI,KAAK,EAAT,IAAe;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,IAAlC,CAVlB,CAPF,CAFF,EAsBGD,OAAO,IACN,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAqB,IAAA,MAAM,EAAC,OAA5B;AAAoC,IAAA,EAAE,sBAAeO,KAAf,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,OAAP,CADF,CAvBJ,CALF,CADF;AAoCD,CAxDD;;AA0DA,eAAeL,QAAf","sourcesContent":["import React, {Fragment} from \"react\";\r\nimport \"./Switch.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport ErrProtecter from \"../../../utils/errProtect\";\r\nimport JDlabel from \"../../label/JDLabel\";\r\nimport {s4} from \"../../../utils/utils\";\r\nimport Tooltip from \"../../tooltip/Tooltip\";\r\n\r\ninterface IProps {\r\n  disabled?: boolean;\r\n  checked?: boolean;\r\n  onChange?(foo: boolean): void;\r\n  label?: string | JSX.Element;\r\n  ltxt?: string;\r\n  rtxt?: string;\r\n  tooltip?: string;\r\n}\r\n\r\nconst JDswitch: React.FC<IProps> = ({\r\n  disabled,\r\n  checked = false,\r\n  onChange,\r\n  ltxt,\r\n  tooltip,\r\n  rtxt,\r\n  label\r\n}) => {\r\n  const handleCheckboxChange = () => {\r\n    const flag = disabled ? checked : !checked;\r\n    onChange && onChange(flag);\r\n  };\r\n\r\n  const classes = classNames({\r\n    JDswitch__input: true\r\n  });\r\n\r\n  const newId = s4();\r\n\r\n  return (\r\n    <span\r\n      className=\"JDswitch-wrapWrap\"\r\n      data-tip={tooltip}\r\n      data-for={tooltip ? `btnTooltip${newId}` : undefined}\r\n    >\r\n      <span className=\"JDswitch-wrap\">\r\n        {label && <JDlabel txt={label} />}\r\n        <span\r\n          tabIndex={0}\r\n          className=\"JDswitch\"\r\n          role=\"button\"\r\n          onKeyPress={handleCheckboxChange}\r\n          onClick={handleCheckboxChange}\r\n        >\r\n          <label htmlFor=\"JDswitch\">\r\n            {ltxt !== \"\" && <span className=\"JDswitch__ltxt\">{ltxt}</span>}\r\n            <input\r\n              onChange={() => {}}\r\n              checked={checked}\r\n              className={classes}\r\n              disabled={disabled}\r\n              type=\"checkbox\"\r\n            />\r\n            <span className=\"JDswitch__lever\" />\r\n            {rtxt !== \"\" && <span className=\"JDswitch__rtxt\">{rtxt}</span>}\r\n          </label>\r\n        </span>\r\n        {tooltip && (\r\n          <Tooltip type=\"dark\" effect=\"solid\" id={`btnTooltip${newId}`}>\r\n            <span>{tooltip}</span>\r\n          </Tooltip>\r\n        )}\r\n      </span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default JDswitch;\r\n"]},"metadata":{},"sourceType":"module"}