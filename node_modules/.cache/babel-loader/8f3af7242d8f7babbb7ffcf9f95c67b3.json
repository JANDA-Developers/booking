{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\forms\\\\inputText\\\\InputText.tsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./InputText.scss\";\nimport \"./Textarea.scss\";\nimport classNames from \"classnames\";\nimport JDicon, { IconSize } from \"../../icons/Icons\";\nimport ErrProtecter from \"../../../utils/errProtect\";\nimport autoHyphen, { numberStr, toNumber } from \"../../../utils/autoFormat\";\nimport { NEUTRAL } from \"../../../types/enum\";\nimport { getByteLength } from \"../../../utils/elses\";\nimport { autoComma, s4 } from \"../../../utils/utils\";\nimport $ from \"jquery\";\n\nvar InputText = function InputText(_ref) {\n  var readOnly = _ref.readOnly,\n      label = _ref.label,\n      disabled = _ref.disabled,\n      type = _ref.type,\n      returnNumber = _ref.returnNumber,\n      validation = _ref.validation,\n      onChange = _ref.onChange,\n      className = _ref.className,\n      onBlur = _ref.onBlur,\n      max = _ref.max,\n      isValid = _ref.isValid,\n      onChangeValid = _ref.onChangeValid,\n      refContainer = _ref.refContainer,\n      textarea = _ref.textarea,\n      scroll = _ref.scroll,\n      value = _ref.value,\n      defaultValue = _ref.defaultValue,\n      doubleHeight = _ref.doubleHeight,\n      halfHeight = _ref.halfHeight,\n      autoHeight = _ref.autoHeight,\n      dataError = _ref.dataError,\n      dataSuccess = _ref.dataSuccess,\n      allWaysShowValidMessage = _ref.allWaysShowValidMessage,\n      icon = _ref.icon,\n      iconOnClick = _ref.iconOnClick,\n      textAlign = _ref.textAlign,\n      iconHover = _ref.iconHover,\n      hyphen = _ref.hyphen,\n      byte = _ref.byte,\n      size = _ref.size,\n      textSize = _ref.textSize,\n      wrapClassName = _ref.wrapClassName,\n      comma = _ref.comma,\n      props = _objectWithoutProperties(_ref, [\"readOnly\", \"label\", \"disabled\", \"type\", \"returnNumber\", \"validation\", \"onChange\", \"className\", \"onBlur\", \"max\", \"isValid\", \"onChangeValid\", \"refContainer\", \"textarea\", \"scroll\", \"value\", \"defaultValue\", \"doubleHeight\", \"halfHeight\", \"autoHeight\", \"dataError\", \"dataSuccess\", \"allWaysShowValidMessage\", \"icon\", \"iconOnClick\", \"textAlign\", \"iconHover\", \"hyphen\", \"byte\", \"size\", \"textSize\", \"wrapClassName\", \"comma\"]);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selfValid = _useState2[0],\n      setSelfValid = _useState2[1];\n\n  var valueFormat = function valueFormat(inValue) {\n    var inInValue = inValue;\n\n    if (typeof inValue === \"number\") {\n      if (isNaN(inInValue)) inInValue = \"\";\n      inInValue = inInValue.toString();\n    }\n\n    if (typeof inInValue === \"string\") {\n      if (hyphen) return autoHyphen(inInValue);\n      if (comma) return autoComma(inInValue);\n      return inInValue;\n    }\n\n    return undefined;\n  };\n\n  var inHandleChange = function inHandleChange(event) {\n    var target = event.target;\n    var result = validation(target.value, max);\n    autoChangeHeight();\n\n    if (onChange) {\n      if (hyphen || comma) {\n        if (typeof value === \"number\" || returnNumber) {\n          onChange(toNumber(target.value));\n        } else {\n          onChange(numberStr(target.value));\n        }\n      } else onChange(target.value);\n    }\n\n    onChangeValid ? onChangeValid(result) : setSelfValid(result);\n\n    if (!value && (hyphen || comma)) {\n      target.value = valueFormat(target.value);\n    }\n  };\n\n  var wrapClasses = classNames(\"JDinput-wrap\", wrapClassName, {\n    \"JDinput-wrap--fullWidth\": size === \"fullWidth\",\n    \"JDinput-wrap--fullHeight\": size === \"fullHeight\"\n  });\n  var classes = classNames(textarea ? \"JDtextarea\" : \"JDinput\", className, {\n    \"JDinput--labeled\": label && !textarea,\n    \"JDinput--h6\": textSize === \"h6\",\n    \"JDinput--center\": textAlign === \"center\",\n    \"JDinput--valid\": (isValid === true || selfValid === true) && !textarea,\n    \"JDinput--invalid\": (isValid === false || selfValid === false) && !textarea,\n    \"JDinput--allWaysShowValidMessage\": allWaysShowValidMessage === true && !textarea,\n\n    /* --------------------------------- 텍스트어리어 --------------------------------- */\n    \"JDtextarea--autoHeight\": autoHeight,\n    \"JDtextarea--labeled\": label && textarea,\n    \"JDtextarea--scroll\": scroll && textarea,\n    \"JDtextarea--doubleHeight\": doubleHeight && textarea,\n    \"JDtextarea--halfHeight\": halfHeight && textarea,\n    \"JDtextarea--valid\": isValid === true,\n    \"JDtextarea--invalid\": isValid === false\n  });\n  var inRefContainer = useRef(null); // 벨리데이션과 언컨트롤일때 defaultValue를 설정하는 역할을함\n\n  useEffect(function () {\n    var domInput;\n    if (refContainer) domInput = refContainer.current;else domInput = inRefContainer.current;\n    if (typeof defaultValue === \"undefined\") return;\n\n    if (typeof defaultValue === \"string\" || \"number\") {\n      domInput.value = valueFormat(defaultValue);\n      onChangeValid && onChangeValid(validation(defaultValue));\n    }\n  }, []);\n\n  var autoChangeHeight = function autoChangeHeight() {\n    if (autoHeight) {\n      var target = $(\"#JDtextarea\".concat(newId));\n      target.height(\"auto\").height(target.prop(\"scrollHeight\") + 12);\n    }\n  };\n\n  useEffect(function () {\n    autoChangeHeight();\n  });\n  var newId = s4();\n  var formatedValue = valueFormat(value); // 인풋 과 텍스트어리어 경계\n\n  return !textarea ? React.createElement(\"div\", {\n    className: wrapClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, icon ? React.createElement(\"span\", {\n    className: \"JDinput-iconWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, icon && React.createElement(JDicon, {\n    size: IconSize.MEDIUM,\n    onClick: iconOnClick,\n    hover: iconHover,\n    icon: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })) : null, React.createElement(\"input\", Object.assign({\n    onChange: inHandleChange,\n    disabled: disabled,\n    readOnly: readOnly,\n    onBlur: onBlur,\n    type: type,\n    value: formatedValue,\n    ref: refContainer || inRefContainer,\n    \"data-color\": \"1213\",\n    className: classes\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"JDinput\",\n    \"data-error\": dataError,\n    \"data-success\": dataSuccess,\n    className: \"JDinput_label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, label)) : React.createElement(\"div\", {\n    className: wrapClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    disabled: disabled,\n    value: formatedValue || undefined,\n    onKeyDown: function onKeyDown(e) {\n      e.nativeEvent.stopImmediatePropagation();\n      e.stopPropagation();\n    },\n    onKeyPress: function onKeyPress(e) {\n      e.nativeEvent.stopImmediatePropagation();\n      e.stopPropagation();\n    },\n    onChange: inHandleChange,\n    onBlur: onBlur,\n    id: \"JDtextarea\".concat(newId),\n    className: classes,\n    readOnly: readOnly,\n    ref: refContainer || inRefContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"JDtextarea\",\n    className: \"JDtextarea_label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, label), byte && React.createElement(\"span\", {\n    className: \"JDtextarea__byte\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, getByteLength(formatedValue || undefined)));\n};\n\nInputText.defaultProps = {\n  readOnly: false,\n  disabled: false,\n  textarea: false,\n  scroll: false,\n  doubleHeight: false,\n  label: \"\",\n  type: \"\",\n  dataError: \"\",\n  dataSuccess: \"\",\n  isValid: \"\",\n  validation: function validation() {\n    return NEUTRAL;\n  },\n  max: 10000,\n  refContainer: undefined,\n  value: undefined\n};\nexport default ErrProtecter(InputText);","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/forms/inputText/InputText.tsx"],"names":["React","useEffect","useRef","useState","classNames","JDicon","IconSize","ErrProtecter","autoHyphen","numberStr","toNumber","NEUTRAL","getByteLength","autoComma","s4","$","InputText","readOnly","label","disabled","type","returnNumber","validation","onChange","className","onBlur","max","isValid","onChangeValid","refContainer","textarea","scroll","value","defaultValue","doubleHeight","halfHeight","autoHeight","dataError","dataSuccess","allWaysShowValidMessage","icon","iconOnClick","textAlign","iconHover","hyphen","byte","size","textSize","wrapClassName","comma","props","selfValid","setSelfValid","valueFormat","inValue","inInValue","isNaN","toString","undefined","inHandleChange","event","target","result","autoChangeHeight","wrapClasses","classes","inRefContainer","domInput","current","newId","height","prop","formatedValue","MEDIUM","e","nativeEvent","stopImmediatePropagation","stopPropagation","defaultProps"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState, FormEvent} from \"react\";\r\nimport \"./InputText.scss\";\r\nimport \"./Textarea.scss\";\r\nimport classNames from \"classnames\";\r\nimport JDicon, {IconSize, IIcons} from \"../../icons/Icons\";\r\nimport ErrProtecter from \"../../../utils/errProtect\";\r\nimport autoHyphen, {numberStr, toNumber} from \"../../../utils/autoFormat\";\r\nimport {NEUTRAL} from \"../../../types/enum\";\r\nimport {getByteLength} from \"../../../utils/elses\";\r\nimport {autoComma, s4} from \"../../../utils/utils\";\r\nimport $ from \"jquery\";\r\n\r\ninterface IProps extends React.HTMLAttributes<HTMLInputElement> {\r\n  readOnly?: boolean;\r\n  disabled?: boolean;\r\n  textarea?: boolean;\r\n  scroll?: boolean;\r\n  doubleHeight?: boolean;\r\n  halfHeight?: boolean;\r\n  label?: string;\r\n  size?: \"fullWidth\" | \"fullHeight\";\r\n  textSize?: \"h6\";\r\n  type?: string;\r\n  textAlign?: \"center\";\r\n  dataError?: string;\r\n  icon?: IIcons;\r\n  iconHover?: boolean;\r\n  autoHeight?: boolean;\r\n  iconOnClick?: any;\r\n  dataSuccess?: string;\r\n  validation?: any;\r\n  // 음... 곤란하군 만약에 이벤트 객체를 핸들링할 경우가 생긴다면\r\n  // onChnage=> onChangeValue로 바꾸어야겠다.\r\n  onChange?(value?: any): void;\r\n  onChangeValid?: any;\r\n  onBlur?(e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): any;\r\n  refContainer?: any;\r\n  isValid?: any;\r\n  value?: string | null | number;\r\n  max?: number;\r\n  defaultValue?: string;\r\n  // 컨트롤 일때만 작동함\r\n  hyphen?: boolean;\r\n  byte?: boolean;\r\n  comma?: boolean;\r\n  returnNumber?: boolean;\r\n  allWaysShowValidMessage?: boolean;\r\n  className?: string;\r\n  wrapClassName?: string;\r\n}\r\n\r\nconst InputText: React.FC<IProps> = ({\r\n  readOnly,\r\n  label,\r\n  disabled,\r\n  type,\r\n  returnNumber,\r\n  validation,\r\n  onChange,\r\n  className,\r\n  onBlur,\r\n  max,\r\n  isValid,\r\n  onChangeValid,\r\n  refContainer,\r\n  textarea,\r\n  scroll,\r\n  value,\r\n  defaultValue, // UNcontrolled\r\n  doubleHeight,\r\n  halfHeight,\r\n  autoHeight,\r\n  dataError,\r\n  dataSuccess,\r\n  allWaysShowValidMessage,\r\n  icon,\r\n  iconOnClick,\r\n  textAlign,\r\n  iconHover,\r\n  hyphen,\r\n  byte,\r\n  size,\r\n  textSize,\r\n  wrapClassName,\r\n  comma,\r\n  ...props\r\n}) => {\r\n  const [selfValid, setSelfValid] = useState<boolean | \"\">(\"\");\r\n\r\n  const valueFormat = (inValue: any) => {\r\n    let inInValue = inValue;\r\n\r\n    if (typeof inValue === \"number\") {\r\n      if (isNaN(inInValue)) inInValue = \"\";\r\n      inInValue = inInValue.toString();\r\n    }\r\n    if (typeof inInValue === \"string\") {\r\n      if (hyphen) return autoHyphen(inInValue);\r\n      if (comma) return autoComma(inInValue);\r\n      return inInValue;\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  const inHandleChange = (event: any) => {\r\n    const {target} = event;\r\n    const result = validation(target.value, max);\r\n    autoChangeHeight();\r\n    if (onChange) {\r\n      if (hyphen || comma) {\r\n        if (typeof value === \"number\" || returnNumber) {\r\n          onChange(toNumber(target.value));\r\n        } else {\r\n          onChange(numberStr(target.value));\r\n        }\r\n      } else onChange(target.value);\r\n    }\r\n\r\n    onChangeValid ? onChangeValid(result) : setSelfValid(result);\r\n\r\n    if (!value && (hyphen || comma)) {\r\n      target.value = valueFormat(target.value);\r\n    }\r\n  };\r\n\r\n  const wrapClasses = classNames(\"JDinput-wrap\", wrapClassName, {\r\n    \"JDinput-wrap--fullWidth\": size === \"fullWidth\",\r\n    \"JDinput-wrap--fullHeight\": size === \"fullHeight\"\r\n  });\r\n\r\n  const classes = classNames(textarea ? \"JDtextarea\" : \"JDinput\", className, {\r\n    \"JDinput--labeled\": label && !textarea,\r\n    \"JDinput--h6\": textSize === \"h6\",\r\n    \"JDinput--center\": textAlign === \"center\",\r\n    \"JDinput--valid\": (isValid === true || selfValid === true) && !textarea,\r\n    \"JDinput--invalid\": (isValid === false || selfValid === false) && !textarea,\r\n    \"JDinput--allWaysShowValidMessage\":\r\n      allWaysShowValidMessage === true && !textarea,\r\n    /* --------------------------------- 텍스트어리어 --------------------------------- */\r\n    \"JDtextarea--autoHeight\": autoHeight,\r\n    \"JDtextarea--labeled\": label && textarea,\r\n    \"JDtextarea--scroll\": scroll && textarea,\r\n    \"JDtextarea--doubleHeight\": doubleHeight && textarea,\r\n    \"JDtextarea--halfHeight\": halfHeight && textarea,\r\n    \"JDtextarea--valid\": isValid === true,\r\n    \"JDtextarea--invalid\": isValid === false\r\n  });\r\n\r\n  const inRefContainer = useRef(null);\r\n\r\n  // 벨리데이션과 언컨트롤일때 defaultValue를 설정하는 역할을함\r\n  useEffect(() => {\r\n    let domInput;\r\n    if (refContainer) domInput = refContainer.current;\r\n    else domInput = inRefContainer.current;\r\n    if (typeof defaultValue === \"undefined\") return;\r\n    if (typeof defaultValue === \"string\" || \"number\") {\r\n      domInput.value = valueFormat(defaultValue);\r\n      onChangeValid && onChangeValid(validation(defaultValue));\r\n    }\r\n  }, []);\r\n\r\n  const autoChangeHeight = () => {\r\n    if (autoHeight) {\r\n      const target = $(`#JDtextarea${newId}`);\r\n      target.height(\"auto\").height(target.prop(\"scrollHeight\") + 12);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    autoChangeHeight();\r\n  });\r\n\r\n  const newId = s4();\r\n\r\n  const formatedValue = valueFormat(value);\r\n\r\n  // 인풋 과 텍스트어리어 경계\r\n  return !textarea ? (\r\n    <div className={wrapClasses}>\r\n      {icon ? (\r\n        <span className=\"JDinput-iconWrap\">\r\n          {icon && (\r\n            <JDicon\r\n              size={IconSize.MEDIUM}\r\n              onClick={iconOnClick}\r\n              hover={iconHover}\r\n              icon={icon}\r\n            />\r\n          )}\r\n        </span>\r\n      ) : null}\r\n      <input\r\n        onChange={inHandleChange}\r\n        disabled={disabled}\r\n        readOnly={readOnly}\r\n        onBlur={onBlur}\r\n        type={type}\r\n        value={formatedValue}\r\n        ref={refContainer || inRefContainer}\r\n        data-color=\"1213\"\r\n        className={classes}\r\n        {...props}\r\n      />\r\n      <label\r\n        htmlFor=\"JDinput\"\r\n        data-error={dataError}\r\n        data-success={dataSuccess}\r\n        className=\"JDinput_label\"\r\n      >\r\n        {label}\r\n      </label>\r\n    </div>\r\n  ) : (\r\n    <div className={wrapClasses}>\r\n      <textarea\r\n        disabled={disabled}\r\n        value={formatedValue || undefined}\r\n        onKeyDown={e => {\r\n          e.nativeEvent.stopImmediatePropagation();\r\n          e.stopPropagation();\r\n        }}\r\n        onKeyPress={e => {\r\n          e.nativeEvent.stopImmediatePropagation();\r\n          e.stopPropagation();\r\n        }}\r\n        onChange={inHandleChange}\r\n        onBlur={onBlur}\r\n        id={`JDtextarea${newId}`}\r\n        className={classes}\r\n        readOnly={readOnly}\r\n        ref={refContainer || inRefContainer}\r\n      />\r\n      <label htmlFor=\"JDtextarea\" className=\"JDtextarea_label\">\r\n        {label}\r\n      </label>\r\n      {byte && (\r\n        <span className=\"JDtextarea__byte\">\r\n          {getByteLength(formatedValue || undefined)}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputText.defaultProps = {\r\n  readOnly: false,\r\n  disabled: false,\r\n  textarea: false,\r\n  scroll: false,\r\n  doubleHeight: false,\r\n  label: \"\",\r\n  type: \"\",\r\n  dataError: \"\",\r\n  dataSuccess: \"\",\r\n  isValid: \"\",\r\n  validation: () => NEUTRAL,\r\n  max: 10000,\r\n  refContainer: undefined,\r\n  value: undefined\r\n};\r\n\r\nexport default ErrProtecter(InputText);\r\n"]},"metadata":{},"sourceType":"module"}