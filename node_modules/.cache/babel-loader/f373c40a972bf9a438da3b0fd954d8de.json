{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\atoms\\\\multiBox\\\\MultiBox.tsx\";\nimport React, { useState } from \"react\";\nimport \"./MultiBox.scss\";\nimport classNames from \"classnames\";\nimport Button from \"../button/Button\";\nimport { s4 } from \"../../utils/utils\";\n\nvar JDmultiBox = function JDmultiBox(_ref) {\n  var value = _ref.value,\n      selectedValue = _ref.selectedValue,\n      _ref$defaultAllToogle = _ref.defaultAllToogle,\n      defaultAllToogle = _ref$defaultAllToogle === void 0 ? false : _ref$defaultAllToogle,\n      labels = _ref.labels,\n      onChange = _ref.onChange,\n      withAllToogler = _ref.withAllToogler,\n      withAllTooglerLabel = _ref.withAllTooglerLabel;\n\n  var _useState = useState(defaultAllToogle),\n      _useState2 = _slicedToArray(_useState, 2),\n      onAllToggle = _useState2[0],\n      setAllToggle = _useState2[1];\n\n  var handleMultiBoxAllChange = function handleMultiBoxAllChange() {\n    setAllToggle(!onAllToggle);\n    onChange(!onAllToggle ? value : []);\n  };\n\n  var handleMultiBoxChange = function handleMultiBoxChange(inValue) {\n    var index = selectedValue.findIndex(function (inInValue) {\n      return inInValue === inValue;\n    });\n\n    if (index === -1) {\n      selectedValue.push(inValue);\n    } else {\n      selectedValue.splice(index, 1);\n    }\n\n    onChange(selectedValue.slice());\n  };\n\n  var classes = classNames({\n    JDswitch__input: true\n  });\n  return React.createElement(\"div\", {\n    className: \"multiBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, withAllToogler && React.createElement(Button, {\n    size: \"small\",\n    toggle: onAllToggle,\n    label: withAllTooglerLabel,\n    onClick: handleMultiBoxAllChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), labels.map(function (label, index) {\n    return React.createElement(Button, {\n      size: \"small\",\n      key: s4(),\n      toggle: selectedValue.includes(value[index]),\n      label: label,\n      onClick: function onClick() {\n        return handleMultiBoxChange(value[index]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default JDmultiBox;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/atoms/multiBox/MultiBox.tsx"],"names":["React","useState","classNames","Button","s4","JDmultiBox","value","selectedValue","defaultAllToogle","labels","onChange","withAllToogler","withAllTooglerLabel","onAllToggle","setAllToggle","handleMultiBoxAllChange","handleMultiBoxChange","inValue","index","findIndex","inInValue","push","splice","slice","classes","JDswitch__input","map","label","includes"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAAQC,EAAR,QAAiB,mBAAjB;;AAYA,IAAMC,UAA4B,GAAG,SAA/BA,UAA+B,OAQ/B;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,aAMI,QANJA,aAMI;AAAA,mCALJC,gBAKI;AAAA,MALJA,gBAKI,sCALe,KAKf;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJC,mBACI,QADJA,mBACI;;AAAA,kBACgCX,QAAQ,CAACO,gBAAD,CADxC;AAAA;AAAA,MACGK,WADH;AAAA,MACgBC,YADhB;;AAEJ,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpCD,IAAAA,YAAY,CAAC,CAACD,WAAF,CAAZ;AACAH,IAAAA,QAAQ,CAAC,CAACG,WAAD,GAAeP,KAAf,GAAuB,EAAxB,CAAR;AACD,GAHD;;AAKA,MAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD,EAAqB;AAChD,QAAMC,KAAK,GAAGX,aAAa,CAACY,SAAd,CAAwB,UAAAC,SAAS;AAAA,aAAIA,SAAS,KAAKH,OAAlB;AAAA,KAAjC,CAAd;;AACA,QAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBX,MAAAA,aAAa,CAACc,IAAd,CAAmBJ,OAAnB;AACD,KAFD,MAEO;AACLV,MAAAA,aAAa,CAACe,MAAd,CAAqBJ,KAArB,EAA4B,CAA5B;AACD;;AACDR,IAAAA,QAAQ,CAACH,aAAa,CAACgB,KAAd,EAAD,CAAR;AACD,GARD;;AAUA,MAAMC,OAAO,GAAGtB,UAAU,CAAC;AACzBuB,IAAAA,eAAe,EAAE;AADQ,GAAD,CAA1B;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,cAAc,IACb,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,MAAM,EAAEE,WAFV;AAGE,IAAA,KAAK,EAAED,mBAHT;AAIE,IAAA,OAAO,EAAEG,uBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASGN,MAAM,CAACiB,GAAP,CAAW,UAACC,KAAD,EAAQT,KAAR;AAAA,WACV,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,GAAG,EAAEd,EAAE,EAFT;AAGE,MAAA,MAAM,EAAEG,aAAa,CAACqB,QAAd,CAAuBtB,KAAK,CAACY,KAAD,CAA5B,CAHV;AAIE,MAAA,KAAK,EAAES,KAJT;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMX,oBAAoB,CAACV,KAAK,CAACY,KAAD,CAAN,CAA1B;AAAA,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CATH,CADF;AAqBD,CAlDD;;AAoDA,eAAeb,UAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./MultiBox.scss\";\r\nimport classNames from \"classnames\";\r\nimport Button from \"../button/Button\";\r\nimport {s4} from \"../../utils/utils\";\r\n\r\ninterface IProps {\r\n  labels: string[];\r\n  selectedValue: string[];\r\n  value: string[];\r\n  onChange: (value: string[]) => void;\r\n  withAllToogler?: boolean;\r\n  defaultAllToogle?: boolean;\r\n  withAllTooglerLabel?: string;\r\n}\r\n\r\nconst JDmultiBox: React.FC<IProps> = ({\r\n  value,\r\n  selectedValue,\r\n  defaultAllToogle = false,\r\n  labels,\r\n  onChange,\r\n  withAllToogler,\r\n  withAllTooglerLabel\r\n}) => {\r\n  const [onAllToggle, setAllToggle] = useState(defaultAllToogle);\r\n  const handleMultiBoxAllChange = () => {\r\n    setAllToggle(!onAllToggle);\r\n    onChange(!onAllToggle ? value : []);\r\n  };\r\n\r\n  const handleMultiBoxChange = (inValue: string) => {\r\n    const index = selectedValue.findIndex(inInValue => inInValue === inValue);\r\n    if (index === -1) {\r\n      selectedValue.push(inValue);\r\n    } else {\r\n      selectedValue.splice(index, 1);\r\n    }\r\n    onChange(selectedValue.slice());\r\n  };\r\n\r\n  const classes = classNames({\r\n    JDswitch__input: true\r\n  });\r\n\r\n  return (\r\n    <div className=\"multiBox\">\r\n      {withAllToogler && (\r\n        <Button\r\n          size=\"small\"\r\n          toggle={onAllToggle}\r\n          label={withAllTooglerLabel}\r\n          onClick={handleMultiBoxAllChange}\r\n        />\r\n      )}\r\n      {labels.map((label, index) => (\r\n        <Button\r\n          size=\"small\"\r\n          key={s4()}\r\n          toggle={selectedValue.includes(value[index])}\r\n          label={label}\r\n          onClick={() => handleMultiBoxChange(value[index])}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JDmultiBox;\r\n"]},"metadata":{},"sourceType":"module"}