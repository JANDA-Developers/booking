{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\components\\\\bookingModal\\\\components\\\\RoomAssigedInfoTable.tsx\";\nimport React from \"react\";\nimport JDtable, { ReactTableDefault } from \"../../../atoms/table/Table\";\nimport { GENDER_OP, WindowSize } from \"../../../types/enum\";\nimport { inOr } from \"../../../utils/C\";\nimport JDselect from \"../../../atoms/forms/selectBox/SelectBox\";\nimport reactWindowSize from \"react-window-size\";\nimport { LANG } from \"../../../hooks/hook\";\nimport \"./RoomAssigedInfoTable.scss\";\nvar Alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\n\nvar RoomAssigedInfoTable = function RoomAssigedInfoTable(_ref) {\n  var guestsData = _ref.guestsData,\n      assigInfo = _ref.assigInfo,\n      setAssigInfo = _ref.setAssigInfo,\n      windowWidth = _ref.windowWidth;\n  var isTabletUp = windowWidth > WindowSize.TABLET;\n\n  var getGenderSelectedOption = function getGenderSelectedOption(guestId) {\n    var info = assigInfo.find(function (info) {\n      return info._id === guestId;\n    });\n    if (!info) return;\n    return {\n      value: info.gender,\n      label: info.gender ? LANG(info.gender) : \"\"\n    };\n  };\n\n  var TableColumns = [{\n    Header: LANG(\"room\"),\n    maxWidth: isTabletUp ? 80 : undefined,\n    accessor: \"_id\",\n    Cell: function Cell(_ref2) {\n      var original = _ref2.original;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, inOr(original.room, \"name\", \"\"));\n    }\n  }, {\n    Header: LANG(\"bedIndex\"),\n    accessor: \"_id\",\n    maxWidth: isTabletUp ? 80 : undefined,\n    Cell: function Cell(_ref3) {\n      var original = _ref3.original;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, original.bedIndex ? original.bedIndex + 1 : \"\");\n    }\n  }, {\n    Header: LANG(\"gender\"),\n    accessor: \"_id\",\n    maxWidth: isTabletUp ? 80 : undefined,\n    Cell: function Cell(_ref4) {\n      var original = _ref4.original;\n      return React.createElement(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, original.gender === null && React.createElement(JDselect, {\n        onChange: function onChange(value) {\n          var targetInfo = assigInfo.find(function (info) {\n            return info._id === original._id;\n          });\n          if (!targetInfo) return;\n          targetInfo.gender = value.value;\n          setAssigInfo(_toConsumableArray(assigInfo));\n        },\n        selectedOption: getGenderSelectedOption(original._id),\n        options: GENDER_OP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n  }];\n\n  if (windowWidth > WindowSize.TABLET) {\n    TableColumns = [// {\n    //   Header: LANG(\"guest\"),\n    //   accessor: \"_id\",\n    //   maxWidth: 64,\n    //   Cell: ({ original, index }) => (\n    //     <div className=\"RoomAssigedInfoTable__id\">{Alphabet[index || 0]}</div>\n    //   )\n    // },\n    {\n      Header: LANG(\"roomType\"),\n      accessor: \"_id\",\n      Cell: function Cell(_ref5) {\n        var original = _ref5.original;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, original.roomType.name);\n      }\n    }].concat(_toConsumableArray(TableColumns));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"RoomAssigedInfoTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(JDtable, Object.assign({\n    visibleOver: true // @ts-ignore\n    ,\n    columns: TableColumns\n  }, ReactTableDefault, {\n    data: guestsData,\n    minRows: 1,\n    noDataText: LANG(\"no_choosen_option\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })));\n};\n\nexport default reactWindowSize(RoomAssigedInfoTable);","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/components/bookingModal/components/RoomAssigedInfoTable.tsx"],"names":["React","JDtable","ReactTableDefault","GENDER_OP","WindowSize","inOr","JDselect","reactWindowSize","LANG","Alphabet","RoomAssigedInfoTable","guestsData","assigInfo","setAssigInfo","windowWidth","isTabletUp","TABLET","getGenderSelectedOption","guestId","info","find","_id","value","gender","label","TableColumns","Header","maxWidth","undefined","accessor","Cell","original","room","bedIndex","width","targetInfo","roomType","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport JDtable, {\r\n  JDcolumn,\r\n  ReactTableDefault\r\n} from \"../../../atoms/table/Table\";\r\nimport { Gender, GENDER_OP, WindowSize } from \"../../../types/enum\";\r\nimport { inOr } from \"../../../utils/C\";\r\nimport JDselect from \"../../../atoms/forms/selectBox/SelectBox\";\r\nimport reactWindowSize, { WindowSizeProps } from \"react-window-size\";\r\nimport { LANG } from \"../../../hooks/hook\";\r\nimport \"./RoomAssigedInfoTable.scss\";\r\nimport { IBookingModal_AssigInfo } from \"../declaration\";\r\n\r\nconst Alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\r\n\r\ninterface IGuestTableInfo {\r\n  _id: string;\r\n  roomType: {\r\n    _id: string;\r\n    name: string;\r\n  };\r\n  room: {\r\n    _id: string;\r\n    name: string;\r\n  } | null;\r\n  bedIndex?: number;\r\n  gender?: Gender | null;\r\n  [key: string]: any;\r\n}\r\n\r\ninterface Iprops {\r\n  guestsData: IGuestTableInfo[];\r\n  assigInfo: IBookingModal_AssigInfo[];\r\n  setAssigInfo: React.Dispatch<React.SetStateAction<IBookingModal_AssigInfo[]>>;\r\n}\r\n\r\nconst RoomAssigedInfoTable: React.FC<Iprops & WindowSizeProps> = ({\r\n  guestsData,\r\n  assigInfo,\r\n  setAssigInfo,\r\n  windowWidth\r\n}) => {\r\n  const isTabletUp = windowWidth > WindowSize.TABLET;\r\n\r\n  const getGenderSelectedOption = (guestId: string) => {\r\n    const info = assigInfo.find(info => info._id === guestId);\r\n    if (!info) return;\r\n    return {\r\n      value: info.gender,\r\n      label: info.gender ? LANG(info.gender) : \"\"\r\n    };\r\n  };\r\n\r\n  let TableColumns: JDcolumn<IGuestTableInfo>[] = [\r\n    {\r\n      Header: LANG(\"room\"),\r\n      maxWidth: isTabletUp ? 80 : undefined,\r\n      accessor: \"_id\",\r\n      Cell: ({ original }) => <div>{inOr(original.room, \"name\", \"\")}</div>\r\n    },\r\n    {\r\n      Header: LANG(\"bedIndex\"),\r\n      accessor: \"_id\",\r\n      maxWidth: isTabletUp ? 80 : undefined,\r\n      Cell: ({ original }) => (\r\n        <div>{original.bedIndex ? original.bedIndex + 1 : \"\"}</div>\r\n      )\r\n    },\r\n    {\r\n      Header: LANG(\"gender\"),\r\n      accessor: \"_id\",\r\n      maxWidth: isTabletUp ? 80 : undefined,\r\n      Cell: ({ original }) => (\r\n        <div\r\n          style={{\r\n            width: \"100%\"\r\n          }}\r\n        >\r\n          {original.gender === null && (\r\n            <JDselect\r\n              onChange={value => {\r\n                const targetInfo = assigInfo.find(\r\n                  info => info._id === original._id\r\n                );\r\n                if (!targetInfo) return;\r\n                targetInfo.gender = value.value;\r\n                setAssigInfo([...assigInfo]);\r\n              }}\r\n              selectedOption={getGenderSelectedOption(original._id)}\r\n              options={GENDER_OP}\r\n            />\r\n          )}\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  if (windowWidth > WindowSize.TABLET) {\r\n    TableColumns = [\r\n      // {\r\n      //   Header: LANG(\"guest\"),\r\n      //   accessor: \"_id\",\r\n      //   maxWidth: 64,\r\n      //   Cell: ({ original, index }) => (\r\n      //     <div className=\"RoomAssigedInfoTable__id\">{Alphabet[index || 0]}</div>\r\n      //   )\r\n      // },\r\n      {\r\n        Header: LANG(\"roomType\"),\r\n        accessor: \"_id\",\r\n        Cell: ({ original }) => <div>{original.roomType.name}</div>\r\n      },\r\n\r\n      ...TableColumns\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <div className={\"RoomAssigedInfoTable\"}>\r\n      <JDtable\r\n        visibleOver\r\n        // @ts-ignore\r\n        columns={TableColumns}\r\n        {...ReactTableDefault}\r\n        data={guestsData}\r\n        minRows={1}\r\n        noDataText={LANG(\"no_choosen_option\")}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default reactWindowSize(RoomAssigedInfoTable);\r\n"]},"metadata":{},"sourceType":"module"}