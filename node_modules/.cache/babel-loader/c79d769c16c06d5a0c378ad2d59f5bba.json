{"ast":null,"code":"/* Highly dumbed down version of https://github.com/unclechu/node-deep-extend */\n\n/**\r\n * Extening object that entered in first argument.\r\n *\r\n * Returns extended object or false if have no target object or incorrect type.\r\n *\r\n * If you wish to clone source object (without modify it), just use empty new\r\n * object as first argument, like this:\r\n *   deepExtend({}, yourObj_1, [yourObj_N]);\r\n */\nmodule.exports = function deepExtend()\n/*obj_1, [obj_2], [obj_N]*/\n{\n  if (arguments.length < 1 || typeof arguments[0] !== \"object\") {\n    return false;\n  }\n\n  if (arguments.length < 2) {\n    return arguments[0];\n  }\n\n  var target = arguments[0];\n\n  for (var i = 1; i < arguments.length; i++) {\n    var obj = arguments[i];\n\n    for (var key in obj) {\n      var src = target[key];\n      var val = obj[key];\n\n      if (typeof val !== \"object\" || val === null) {\n        target[key] = val; // just clone arrays (and recursive clone objects inside)\n      } else if (typeof src !== \"object\" || src === null) {\n        target[key] = deepExtend({}, val); // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val);\n      }\n    }\n  }\n\n  return target;\n};","map":null,"metadata":{},"sourceType":"script"}