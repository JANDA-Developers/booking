{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uBBFC\\uC7AC\\\\Desktop\\\\projects\\\\jd-api-server-client\\\\src\\\\pages\\\\bookingHost\\\\sms\\\\components\\\\SmsTemplateModal.tsx\";\nimport React, { Fragment, useState } from \"react\";\nimport JDmodal from \"../../../../atoms/modal/Modal\";\nimport { useSwitch, useSelect, useInput, LANG } from \"../../../../hooks/hook\";\nimport Button from \"../../../../atoms/button/Button\";\nimport { smsMsgParser, smsMessageFormatter } from \"../../../../utils/utils\";\nimport { DEFAULT_SMS_TEMPLATE } from \"../../../../types/defaults\";\nimport { SmsReplaceKeyEnumKeys, AUTO_SEND_OP, SMS_TARGET_OP } from \"../../../../types/enum\";\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\nimport JDLabel from \"../../../../atoms/label/JDLabel\";\nimport JDselect, { SelectBoxSize } from \"../../../../atoms/forms/selectBox/SelectBox\";\nimport JDswitch from \"../../../../atoms/forms/switch/Switch\";\nimport Help from \"../../../../atoms/Help/Help\";\nimport { IconSize } from \"../../../../atoms/icons/Icons\";\n\nvar SmsTemplateModal = function SmsTemplateModal(_ref) {\n  var smsInfo = _ref.smsInfo,\n      smsTemplateMutationes = _ref.smsTemplateMutationes,\n      context = _ref.context,\n      modalHook = _ref.modalHook;\n  var house = context.house;\n  var houseId = house._id;\n  var _modalHook$info = modalHook.info,\n      templateId = _modalHook$info.templateId,\n      isAdd = _modalHook$info.isAdd;\n  var _smsInfo$smsTemplates = smsInfo.smsTemplates,\n      smsTemplates = _smsInfo$smsTemplates === void 0 ? [] : _smsInfo$smsTemplates;\n  var createSmsTemplateMu = smsTemplateMutationes.createSmsTemplateMu,\n      deleteSmsTemplateMu = smsTemplateMutationes.deleteSmsTemplateMu,\n      updateSmsTemplateMu = smsTemplateMutationes.updateSmsTemplateMu;\n  var templateData = smsTemplates.find(function (smsTemplate) {\n    return smsTemplate._id === templateId;\n  }) || DEFAULT_SMS_TEMPLATE;\n  var defaultFormatName = templateData.formatName,\n      defaultSmsFormat = templateData.smsFormat,\n      defulatSmsSendCase = templateData.smsSendCase; // HOOKS\n\n  var _useState = useState(smsMsgParser(defaultSmsFormat, LANG(\"SmsReplaceKey\"))),\n      _useState2 = _slicedToArray(_useState, 2),\n      messageValue = _useState2[0],\n      setMessage = _useState2[1];\n\n  var enableHook = useSwitch(defulatSmsSendCase ? defulatSmsSendCase.enable : false);\n  var autoSendHook = useSelect({\n    value: defulatSmsSendCase ? defulatSmsSendCase.when : null,\n    label: defulatSmsSendCase ? LANG(defulatSmsSendCase.when) : LANG(\"un_send_Sms\")\n  });\n  var sendTargetHook = useSelect({\n    value: defulatSmsSendCase ? defulatSmsSendCase.who : null,\n    label: defulatSmsSendCase ? LANG(defulatSmsSendCase.who) : LANG(\"un_send_Sms\")\n  });\n  var templateTitleHook = useInput(defaultFormatName);\n  var sendTSO = sendTargetHook.selectedOption;\n  var sendASO = autoSendHook.selectedOption;\n  var AutoSendWhenTemp = sendTSO && sendTSO.value && sendASO && sendASO.value ? {\n    enable: enableHook.checked,\n    when: sendASO.value,\n    who: sendTSO.value\n  } : null;\n  var tempTemplateVariables = {\n    houseId: houseId,\n    params: {\n      formatName: templateTitleHook.value,\n      smsFormat: smsMessageFormatter(messageValue),\n      smsSendCase: AutoSendWhenTemp\n    }\n  };\n\n  var hanldeTemplateBtnClick = function hanldeTemplateBtnClick(label) {\n    setMessage(\"\".concat(messageValue, \" \").concat(label));\n  };\n\n  var handleCreateBtnClick = function handleCreateBtnClick() {\n    createSmsTemplateMu({\n      variables: tempTemplateVariables\n    });\n  };\n\n  var handleDeleteBtnClick = function handleDeleteBtnClick() {\n    deleteSmsTemplateMu({\n      variables: {\n        smsInfoId: smsInfo._id,\n        smsTemplateId: templateData._id\n      }\n    });\n  };\n\n  var handleUpdateBtnClick = function handleUpdateBtnClick() {\n    updateSmsTemplateMu({\n      variables: _objectSpread({}, tempTemplateVariables, {\n        smsTemplateId: templateData._id\n      })\n    });\n  };\n\n  return React.createElement(JDmodal, Object.assign({\n    visibleOverflow: true\n  }, modalHook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(InputText, Object.assign({}, templateTitleHook, {\n    label: LANG(\"template_title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    value: messageValue,\n    onChange: setMessage,\n    label: LANG(\"msg\"),\n    textarea: true,\n    doubleHeight: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(JDLabel, {\n    txt: LANG(\"template_msg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), SmsReplaceKeyEnumKeys.map(function (value) {\n    return React.createElement(Button, {\n      onClick: function onClick() {\n        hanldeTemplateBtnClick(LANG(\"SmsReplaceKey\")[value]);\n      },\n      key: \"templateBtn\".concat(templateData._id).concat(value),\n      label: LANG(\"SmsReplaceKey\")[value].replace(\"[\", \"\").replace(\"]\", \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"JDz-index-1 flex-grid flex-grid--start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(JDselect, Object.assign({\n    size: SelectBoxSize.FIVE,\n    options: AUTO_SEND_OP\n  }, autoSendHook, {\n    label: LANG(\"auto_send\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), React.createElement(JDselect, Object.assign({\n    size: SelectBoxSize.FOUR,\n    options: SMS_TARGET_OP\n  }, sendTargetHook, {\n    label: LANG(\"send_target\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  })), React.createElement(JDswitch, Object.assign({}, enableHook, {\n    label: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"JDstandard-small-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, LANG(\"is_auto_send_enable\")), React.createElement(Help, {\n      tooltip: LANG(\"if_tou_enable_auto_send_msg_msg_will_send_autoMetically\"),\n      icon: \"help\",\n      size: IconSize.DEFAULT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"JDmodal__endSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    label: isAdd ? LANG(\"do_create\") : LANG(\"do_copy\"),\n    thema: \"primary\",\n    onClick: handleCreateBtnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"small\",\n    label: LANG(\"do_modify\"),\n    thema: \"primary\",\n    disabled: isAdd,\n    onClick: handleUpdateBtnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"small\",\n    label: LANG(\"delete_booking\"),\n    thema: \"error\",\n    disabled: isAdd,\n    onClick: handleDeleteBtnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  })));\n};\n\nexport default SmsTemplateModal;","map":{"version":3,"sources":["C:/Users/김민재/Desktop/projects/jd-api-server-client/src/pages/bookingHost/sms/components/SmsTemplateModal.tsx"],"names":["React","Fragment","useState","JDmodal","useSwitch","useSelect","useInput","LANG","Button","smsMsgParser","smsMessageFormatter","DEFAULT_SMS_TEMPLATE","SmsReplaceKeyEnumKeys","AUTO_SEND_OP","SMS_TARGET_OP","InputText","JDLabel","JDselect","SelectBoxSize","JDswitch","Help","IconSize","SmsTemplateModal","smsInfo","smsTemplateMutationes","context","modalHook","house","houseId","_id","info","templateId","isAdd","smsTemplates","createSmsTemplateMu","deleteSmsTemplateMu","updateSmsTemplateMu","templateData","find","smsTemplate","defaultFormatName","formatName","defaultSmsFormat","smsFormat","defulatSmsSendCase","smsSendCase","messageValue","setMessage","enableHook","enable","autoSendHook","value","when","label","sendTargetHook","who","templateTitleHook","sendTSO","selectedOption","sendASO","AutoSendWhenTemp","checked","tempTemplateVariables","params","hanldeTemplateBtnClick","handleCreateBtnClick","variables","handleDeleteBtnClick","smsInfoId","smsTemplateId","handleUpdateBtnClick","map","replace","FIVE","FOUR","DEFAULT"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from \"react\";\r\nimport JDmodal from \"../../../../atoms/modal/Modal\";\r\nimport {\r\n  IUseModal,\r\n  useSwitch,\r\n  useSelect,\r\n  useInput,\r\n  LANG\r\n} from \"../../../../hooks/hook\";\r\nimport Button from \"../../../../atoms/button/Button\";\r\nimport {smsMsgParser, smsMessageFormatter} from \"../../../../utils/utils\";\r\nimport {\r\n  getSmsInfo_GetSmsInfo_smsInfo,\r\n  SendTarget,\r\n  AutoSendWhen,\r\n  updateSmsTemplate,\r\n  updateSmsTemplateVariables,\r\n  deleteSmsTemplate,\r\n  deleteSmsTemplateVariables,\r\n  createSmsTemplate,\r\n  createSmsTemplateVariables\r\n} from \"../../../../types/api\";\r\nimport {IContext} from \"../../BookingHostRouter\";\r\nimport {DEFAULT_SMS_TEMPLATE} from \"../../../../types/defaults\";\r\nimport {\r\n  SmsReplaceKeyEnumKeys,\r\n  AUTO_SEND_OP,\r\n  SMS_TARGET_OP\r\n} from \"../../../../types/enum\";\r\nimport InputText from \"../../../../atoms/forms/inputText/InputText\";\r\nimport {MutationFn} from \"react-apollo\";\r\nimport JDLabel from \"../../../../atoms/label/JDLabel\";\r\nimport JDselect, {\r\n  SelectBoxSize\r\n} from \"../../../../atoms/forms/selectBox/SelectBox\";\r\nimport JDswitch from \"../../../../atoms/forms/switch/Switch\";\r\nimport Help from \"../../../../atoms/Help/Help\";\r\nimport {IconSize} from \"../../../../atoms/icons/Icons\";\r\n\r\nexport interface ISmsTemplateModalProps {\r\n  templateId: string;\r\n  isAdd: boolean;\r\n}\r\n\r\ninterface Iprops {\r\n  context: IContext;\r\n  modalHook: IUseModal<ISmsTemplateModalProps>;\r\n  smsInfo: getSmsInfo_GetSmsInfo_smsInfo;\r\n  smsTemplateMutationes: {\r\n    updateSmsTemplateMu: MutationFn<\r\n      updateSmsTemplate,\r\n      updateSmsTemplateVariables\r\n    >;\r\n    deleteSmsTemplateMu: MutationFn<\r\n      deleteSmsTemplate,\r\n      deleteSmsTemplateVariables\r\n    >;\r\n    createSmsTemplateMu: MutationFn<\r\n      createSmsTemplate,\r\n      createSmsTemplateVariables\r\n    >;\r\n  };\r\n}\r\n\r\nconst SmsTemplateModal: React.FC<Iprops> = ({\r\n  smsInfo,\r\n  smsTemplateMutationes,\r\n  context,\r\n  modalHook\r\n}) => {\r\n  const {house} = context;\r\n  const {_id: houseId} = house;\r\n  const {templateId, isAdd} = modalHook.info;\r\n  const {smsTemplates = []} = smsInfo;\r\n  const {\r\n    createSmsTemplateMu,\r\n    deleteSmsTemplateMu,\r\n    updateSmsTemplateMu\r\n  } = smsTemplateMutationes;\r\n  const templateData =\r\n    smsTemplates!.find(smsTemplate => smsTemplate._id === templateId) ||\r\n    DEFAULT_SMS_TEMPLATE;\r\n  const {\r\n    formatName: defaultFormatName,\r\n    smsFormat: defaultSmsFormat,\r\n    smsSendCase: defulatSmsSendCase\r\n  } = templateData;\r\n\r\n  // HOOKS\r\n  const [messageValue, setMessage] = useState(\r\n    smsMsgParser(defaultSmsFormat, LANG(\"SmsReplaceKey\"))\r\n  );\r\n  const enableHook = useSwitch(\r\n    defulatSmsSendCase ? defulatSmsSendCase.enable : false\r\n  );\r\n  const autoSendHook = useSelect<AutoSendWhen | null>({\r\n    value: defulatSmsSendCase ? defulatSmsSendCase.when : null,\r\n    label: defulatSmsSendCase\r\n      ? LANG(defulatSmsSendCase.when)\r\n      : LANG(\"un_send_Sms\")\r\n  });\r\n  const sendTargetHook = useSelect<SendTarget | null>({\r\n    value: defulatSmsSendCase ? defulatSmsSendCase.who : null,\r\n    label: defulatSmsSendCase\r\n      ? LANG(defulatSmsSendCase.who)\r\n      : LANG(\"un_send_Sms\")\r\n  });\r\n  const templateTitleHook = useInput(defaultFormatName);\r\n\r\n  const {selectedOption: sendTSO} = sendTargetHook;\r\n  const {selectedOption: sendASO} = autoSendHook;\r\n  const AutoSendWhenTemp =\r\n    sendTSO && sendTSO.value && sendASO && sendASO.value\r\n      ? {\r\n          enable: enableHook.checked,\r\n          when: sendASO.value!,\r\n          who: sendTSO.value!\r\n        }\r\n      : null;\r\n\r\n  const tempTemplateVariables = {\r\n    houseId: houseId,\r\n    params: {\r\n      formatName: templateTitleHook.value,\r\n      smsFormat: smsMessageFormatter(messageValue),\r\n      smsSendCase: AutoSendWhenTemp\r\n    }\r\n  };\r\n\r\n  const hanldeTemplateBtnClick = (label: string) => {\r\n    setMessage(`${messageValue} ${label}`);\r\n  };\r\n  const handleCreateBtnClick = () => {\r\n    createSmsTemplateMu({\r\n      variables: tempTemplateVariables\r\n    });\r\n  };\r\n  const handleDeleteBtnClick = () => {\r\n    deleteSmsTemplateMu({\r\n      variables: {\r\n        smsInfoId: smsInfo._id,\r\n        smsTemplateId: templateData._id\r\n      }\r\n    });\r\n  };\r\n  const handleUpdateBtnClick = () => {\r\n    updateSmsTemplateMu({\r\n      variables: {\r\n        ...tempTemplateVariables,\r\n        smsTemplateId: templateData._id\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <JDmodal visibleOverflow {...modalHook}>\r\n      <Fragment>\r\n        <div>\r\n          <InputText {...templateTitleHook} label={LANG(\"template_title\")} />\r\n        </div>\r\n        <div>\r\n          <InputText\r\n            value={messageValue}\r\n            onChange={setMessage}\r\n            label={LANG(\"msg\")}\r\n            textarea\r\n            doubleHeight\r\n          />\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <JDLabel txt={LANG(\"template_msg\")} />\r\n          </div>\r\n          {SmsReplaceKeyEnumKeys.map((value: any) => (\r\n            <Button\r\n              onClick={() => {\r\n                hanldeTemplateBtnClick(LANG(\"SmsReplaceKey\")[value]);\r\n              }}\r\n              key={`templateBtn${templateData._id}${value}`}\r\n              label={LANG(\"SmsReplaceKey\")\r\n                [value].replace(\"[\", \"\")\r\n                .replace(\"]\", \"\")}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"JDz-index-1 flex-grid flex-grid--start\">\r\n          {/* props 로부터 받아서 쓸거임. onChange시에는 뮤테이션을 날리겠지. */}\r\n          <JDselect\r\n            size={SelectBoxSize.FIVE}\r\n            options={AUTO_SEND_OP}\r\n            {...autoSendHook}\r\n            label={LANG(\"auto_send\")}\r\n          />\r\n          <JDselect\r\n            size={SelectBoxSize.FOUR}\r\n            options={SMS_TARGET_OP}\r\n            {...sendTargetHook}\r\n            label={LANG(\"send_target\")}\r\n          />\r\n          <JDswitch\r\n            {...enableHook}\r\n            label={\r\n              <span>\r\n                <span className=\"JDstandard-small-space\">\r\n                  {LANG(\"is_auto_send_enable\")}\r\n                </span>\r\n                <Help\r\n                  tooltip={LANG(\r\n                    \"if_tou_enable_auto_send_msg_msg_will_send_autoMetically\"\r\n                  )}\r\n                  icon={\"help\"}\r\n                  size={IconSize.DEFAULT}\r\n                />\r\n              </span>\r\n            }\r\n          />\r\n        </div>\r\n        <div></div>\r\n      </Fragment>\r\n      <div className=\"JDmodal__endSection\">\r\n        <Button\r\n          size=\"small\"\r\n          label={isAdd ? LANG(\"do_create\") : LANG(\"do_copy\")}\r\n          thema=\"primary\"\r\n          onClick={handleCreateBtnClick}\r\n        />\r\n        <Button\r\n          size=\"small\"\r\n          label={LANG(\"do_modify\")}\r\n          thema=\"primary\"\r\n          disabled={isAdd}\r\n          onClick={handleUpdateBtnClick}\r\n        />\r\n        <Button\r\n          size=\"small\"\r\n          label={LANG(\"delete_booking\")}\r\n          thema=\"error\"\r\n          disabled={isAdd}\r\n          onClick={handleDeleteBtnClick}\r\n        />\r\n      </div>\r\n    </JDmodal>\r\n  );\r\n};\r\n\r\nexport default SmsTemplateModal;\r\n"]},"metadata":{},"sourceType":"module"}